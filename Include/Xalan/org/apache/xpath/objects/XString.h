//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/objects/XString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathObjectsXString")
#ifdef RESTRICT_OrgApacheXpathObjectsXString
#define INCLUDE_ALL_OrgApacheXpathObjectsXString 0
#else
#define INCLUDE_ALL_OrgApacheXpathObjectsXString 1
#endif
#undef RESTRICT_OrgApacheXpathObjectsXString

#if !defined (OrgApacheXpathObjectsXString_) && (INCLUDE_ALL_OrgApacheXpathObjectsXString || defined(INCLUDE_OrgApacheXpathObjectsXString))
#define OrgApacheXpathObjectsXString_

#define RESTRICT_OrgApacheXpathObjectsXObject 1
#define INCLUDE_OrgApacheXpathObjectsXObject 1
#include "org/apache/xpath/objects/XObject.h"

#define RESTRICT_OrgApacheXmlUtilsXMLString 1
#define INCLUDE_OrgApacheXmlUtilsXMLString 1
#include "org/apache/xml/utils/XMLString.h"

@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangDouble;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaUtilLocale;
@class OrgApacheXpathXPathContext;
@class OrgApacheXpathXPathVisitor;
@protocol OrgApacheXpathExpressionOwner;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxExtLexicalHandler;

@interface OrgApacheXpathObjectsXString : OrgApacheXpathObjectsXObject < OrgApacheXmlUtilsXMLString >

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)val;

- (jboolean)bool__;

- (void)callVisitorsWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                       withOrgApacheXpathXPathVisitor:(OrgApacheXpathXPathVisitor *)visitor;

- (jchar)charAtWithInt:(jint)index;

- (jint)compareToWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)xstr;

- (jint)compareToIgnoreCaseWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)str;

- (id<OrgApacheXmlUtilsXMLString>)concatWithNSString:(NSString *)str;

- (void)dispatchAsCommentWithOrgXmlSaxExtLexicalHandler:(id<OrgXmlSaxExtLexicalHandler>)lh;

- (void)dispatchCharactersEventsWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch;

- (jboolean)endsWithWithNSString:(NSString *)suffix;

- (jboolean)isEqual:(id)obj2;

- (jboolean)equalsWithNSString:(NSString *)obj2;

- (jboolean)equalsWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)obj2;

- (jboolean)equalsWithOrgApacheXpathObjectsXObject:(OrgApacheXpathObjectsXObject *)obj2;

- (jboolean)equalsIgnoreCaseWithNSString:(NSString *)anotherString;

- (id<OrgApacheXmlUtilsXMLString>)fixWhiteSpaceWithBoolean:(jboolean)trimHead
                                               withBoolean:(jboolean)trimTail
                                               withBoolean:(jboolean)doublePunctuationSpaces;

- (void)getCharsWithInt:(jint)srcBegin
                withInt:(jint)srcEnd
          withCharArray:(IOSCharArray *)dst
                withInt:(jint)dstBegin;

- (jint)getType;

- (NSString *)getTypeString;

- (NSUInteger)hash;

- (jboolean)hasString;

- (jint)indexOfWithInt:(jint)ch;

- (jint)indexOfWithInt:(jint)ch
               withInt:(jint)fromIndex;

- (jint)indexOfWithNSString:(NSString *)str;

- (jint)indexOfWithNSString:(NSString *)str
                    withInt:(jint)fromIndex;

- (jint)indexOfWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)str;

- (jint)lastIndexOfWithInt:(jint)ch;

- (jint)lastIndexOfWithInt:(jint)ch
                   withInt:(jint)fromIndex;

- (jint)lastIndexOfWithNSString:(NSString *)str;

- (jint)lastIndexOfWithNSString:(NSString *)str
                        withInt:(jint)fromIndex;

- (jint)length;

- (jdouble)num;

- (jint)rtfWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)support;

- (jboolean)startsWithWithNSString:(NSString *)prefix;

- (jboolean)startsWithWithNSString:(NSString *)prefix
                           withInt:(jint)toffset;

- (jboolean)startsWithWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)prefix;

- (jboolean)startsWithWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)prefix
                                             withInt:(jint)toffset;

- (NSString *)str;

- (id<OrgApacheXmlUtilsXMLString>)substringWithInt:(jint)beginIndex;

- (id<OrgApacheXmlUtilsXMLString>)substringWithInt:(jint)beginIndex
                                           withInt:(jint)endIndex;

- (jdouble)toDouble;

- (id<OrgApacheXmlUtilsXMLString>)toLowerCase;

- (id<OrgApacheXmlUtilsXMLString>)toLowerCaseWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (id<OrgApacheXmlUtilsXMLString>)toUpperCase;

- (id<OrgApacheXmlUtilsXMLString>)toUpperCaseWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (id<OrgApacheXmlUtilsXMLString>)trim;

- (id<OrgApacheXmlUtilsXMLString>)xstr;

#pragma mark Protected

- (instancetype)initWithId:(id)val;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheXpathObjectsXString)

inline jlong OrgApacheXpathObjectsXString_get_serialVersionUID(void);
#define OrgApacheXpathObjectsXString_serialVersionUID 2020470518395094525LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathObjectsXString, serialVersionUID, jlong)

inline OrgApacheXpathObjectsXString *OrgApacheXpathObjectsXString_get_EMPTYSTRING(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheXpathObjectsXString *OrgApacheXpathObjectsXString_EMPTYSTRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXpathObjectsXString, EMPTYSTRING, OrgApacheXpathObjectsXString *)

FOUNDATION_EXPORT void OrgApacheXpathObjectsXString_initWithId_(OrgApacheXpathObjectsXString *self, id val);

FOUNDATION_EXPORT OrgApacheXpathObjectsXString *new_OrgApacheXpathObjectsXString_initWithId_(id val) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathObjectsXString *create_OrgApacheXpathObjectsXString_initWithId_(id val);

FOUNDATION_EXPORT void OrgApacheXpathObjectsXString_initWithNSString_(OrgApacheXpathObjectsXString *self, NSString *val);

FOUNDATION_EXPORT OrgApacheXpathObjectsXString *new_OrgApacheXpathObjectsXString_initWithNSString_(NSString *val) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathObjectsXString *create_OrgApacheXpathObjectsXString_initWithNSString_(NSString *val);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathObjectsXString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathObjectsXString")
