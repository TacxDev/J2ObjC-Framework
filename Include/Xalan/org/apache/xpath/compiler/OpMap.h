//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/compiler/OpMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathCompilerOpMap")
#ifdef RESTRICT_OrgApacheXpathCompilerOpMap
#define INCLUDE_ALL_OrgApacheXpathCompilerOpMap 0
#else
#define INCLUDE_ALL_OrgApacheXpathCompilerOpMap 1
#endif
#undef RESTRICT_OrgApacheXpathCompilerOpMap

#if !defined (OrgApacheXpathCompilerOpMap_) && (INCLUDE_ALL_OrgApacheXpathCompilerOpMap || defined(INCLUDE_OrgApacheXpathCompilerOpMap))
#define OrgApacheXpathCompilerOpMap_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangInteger;
@class OrgApacheXmlUtilsObjectVector;
@class OrgApacheXpathCompilerOpMapVector;

@interface OrgApacheXpathCompilerOpMap : NSObject {
 @public
  NSString *m_currentPattern_;
  OrgApacheXmlUtilsObjectVector *m_tokenQueue_;
  OrgApacheXpathCompilerOpMapVector *m_opMap_;
}

#pragma mark Public

- (instancetype)init;

- (void)errorWithNSString:(NSString *)msg
        withNSObjectArray:(IOSObjectArray *)args;

- (jint)getArgLengthWithInt:(jint)opPos;

- (jint)getArgLengthOfStepWithInt:(jint)opPos;

+ (jint)getFirstChildPosWithInt:(jint)opPos;

+ (jint)getFirstChildPosOfStepWithInt:(jint)opPos;

- (jint)getFirstPredicateOpPosWithInt:(jint)opPos;

- (jint)getNextOpPosWithInt:(jint)opPos;

+ (jint)getNextOpPosWithIntArray:(IOSIntArray *)opMap
                         withInt:(jint)opPos;

- (jint)getNextStepPosWithInt:(jint)opPos;

- (jint)getOpWithInt:(jint)opPos;

- (OrgApacheXpathCompilerOpMapVector *)getOpMap;

- (NSString *)getPatternString;

- (NSString *)getStepLocalNameWithInt:(jint)opPosOfStep;

- (NSString *)getStepNSWithInt:(jint)opPosOfStep;

- (jint)getStepTestTypeWithInt:(jint)opPosOfStep;

- (id)getTokenWithInt:(jint)pos;

- (OrgApacheXmlUtilsObjectVector *)getTokenQueue;

- (jint)getTokenQueueSize;

- (void)setOpWithInt:(jint)opPos
             withInt:(jint)value;

- (NSString *)description;

#pragma mark Package-Private

- (void)shrink;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathCompilerOpMap)

J2OBJC_FIELD_SETTER(OrgApacheXpathCompilerOpMap, m_currentPattern_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXpathCompilerOpMap, m_tokenQueue_, OrgApacheXmlUtilsObjectVector *)
J2OBJC_FIELD_SETTER(OrgApacheXpathCompilerOpMap, m_opMap_, OrgApacheXpathCompilerOpMapVector *)

inline jint OrgApacheXpathCompilerOpMap_get_MAXTOKENQUEUESIZE(void);
#define OrgApacheXpathCompilerOpMap_MAXTOKENQUEUESIZE 500
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathCompilerOpMap, MAXTOKENQUEUESIZE, jint)

inline jint OrgApacheXpathCompilerOpMap_get_BLOCKTOKENQUEUESIZE(void);
#define OrgApacheXpathCompilerOpMap_BLOCKTOKENQUEUESIZE 500
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathCompilerOpMap, BLOCKTOKENQUEUESIZE, jint)

inline jint OrgApacheXpathCompilerOpMap_get_MAPINDEX_LENGTH(void);
#define OrgApacheXpathCompilerOpMap_MAPINDEX_LENGTH 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathCompilerOpMap, MAPINDEX_LENGTH, jint)

FOUNDATION_EXPORT void OrgApacheXpathCompilerOpMap_init(OrgApacheXpathCompilerOpMap *self);

FOUNDATION_EXPORT OrgApacheXpathCompilerOpMap *new_OrgApacheXpathCompilerOpMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathCompilerOpMap *create_OrgApacheXpathCompilerOpMap_init(void);

FOUNDATION_EXPORT jint OrgApacheXpathCompilerOpMap_getNextOpPosWithIntArray_withInt_(IOSIntArray *opMap, jint opPos);

FOUNDATION_EXPORT jint OrgApacheXpathCompilerOpMap_getFirstChildPosWithInt_(jint opPos);

FOUNDATION_EXPORT jint OrgApacheXpathCompilerOpMap_getFirstChildPosOfStepWithInt_(jint opPos);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathCompilerOpMap)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathCompilerOpMap")
