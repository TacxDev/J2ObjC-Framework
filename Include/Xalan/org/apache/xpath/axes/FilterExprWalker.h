//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/FilterExprWalker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesFilterExprWalker")
#ifdef RESTRICT_OrgApacheXpathAxesFilterExprWalker
#define INCLUDE_ALL_OrgApacheXpathAxesFilterExprWalker 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesFilterExprWalker 1
#endif
#undef RESTRICT_OrgApacheXpathAxesFilterExprWalker

#if !defined (OrgApacheXpathAxesFilterExprWalker_) && (INCLUDE_ALL_OrgApacheXpathAxesFilterExprWalker || defined(INCLUDE_OrgApacheXpathAxesFilterExprWalker))
#define OrgApacheXpathAxesFilterExprWalker_

#define RESTRICT_OrgApacheXpathAxesAxesWalker 1
#define INCLUDE_OrgApacheXpathAxesAxesWalker 1
#include "org/apache/xpath/axes/AxesWalker.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangShort;
@class JavaUtilVector;
@class OrgApacheXpathAxesLocPathIterator;
@class OrgApacheXpathAxesWalkingIterator;
@class OrgApacheXpathCompilerCompiler;
@class OrgApacheXpathExpression;
@class OrgApacheXpathXPathContext;
@class OrgApacheXpathXPathVisitor;

@interface OrgApacheXpathAxesFilterExprWalker : OrgApacheXpathAxesAxesWalker

#pragma mark Public

- (instancetype)initWithOrgApacheXpathAxesWalkingIterator:(OrgApacheXpathAxesWalkingIterator *)locPathIterator;

- (jshort)acceptNodeWithInt:(jint)n;

- (void)callPredicateVisitorsWithOrgApacheXpathXPathVisitor:(OrgApacheXpathXPathVisitor *)visitor;

- (id)java_clone;

- (jboolean)deepEqualsWithOrgApacheXpathExpression:(OrgApacheXpathExpression *)expr;

- (void)detach;

- (void)fixupVariablesWithJavaUtilVector:(JavaUtilVector *)vars
                                 withInt:(jint)globalsSize;

- (jint)getAnalysisBits;

- (jint)getAxis;

- (OrgApacheXpathExpression *)getInnerExpression;

- (jint)getLastPosWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

- (jint)getNextNode;

- (void)init__WithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                         withInt:(jint)opPos
                                         withInt:(jint)stepType OBJC_METHOD_FAMILY_NONE;

- (jboolean)isDocOrdered;

- (void)setInnerExpressionWithOrgApacheXpathExpression:(OrgApacheXpathExpression *)expr;

- (void)setRootWithInt:(jint)root;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgApacheXpathAxesLocPathIterator:(OrgApacheXpathAxesLocPathIterator *)arg0
                                                  withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesFilterExprWalker)

inline jlong OrgApacheXpathAxesFilterExprWalker_get_serialVersionUID(void);
#define OrgApacheXpathAxesFilterExprWalker_serialVersionUID 5457182471424488375LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesFilterExprWalker, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXpathAxesFilterExprWalker_initWithOrgApacheXpathAxesWalkingIterator_(OrgApacheXpathAxesFilterExprWalker *self, OrgApacheXpathAxesWalkingIterator *locPathIterator);

FOUNDATION_EXPORT OrgApacheXpathAxesFilterExprWalker *new_OrgApacheXpathAxesFilterExprWalker_initWithOrgApacheXpathAxesWalkingIterator_(OrgApacheXpathAxesWalkingIterator *locPathIterator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesFilterExprWalker *create_OrgApacheXpathAxesFilterExprWalker_initWithOrgApacheXpathAxesWalkingIterator_(OrgApacheXpathAxesWalkingIterator *locPathIterator);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesFilterExprWalker)

#endif

#if !defined (OrgApacheXpathAxesFilterExprWalker_filterExprOwner_) && (INCLUDE_ALL_OrgApacheXpathAxesFilterExprWalker || defined(INCLUDE_OrgApacheXpathAxesFilterExprWalker_filterExprOwner))
#define OrgApacheXpathAxesFilterExprWalker_filterExprOwner_

#define RESTRICT_OrgApacheXpathExpressionOwner 1
#define INCLUDE_OrgApacheXpathExpressionOwner 1
#include "org/apache/xpath/ExpressionOwner.h"

@class OrgApacheXpathAxesFilterExprWalker;
@class OrgApacheXpathExpression;

@interface OrgApacheXpathAxesFilterExprWalker_filterExprOwner : NSObject < OrgApacheXpathExpressionOwner >

#pragma mark Public

- (OrgApacheXpathExpression *)getExpression;

- (void)setExpressionWithOrgApacheXpathExpression:(OrgApacheXpathExpression *)exp;

#pragma mark Package-Private

- (instancetype)initWithOrgApacheXpathAxesFilterExprWalker:(OrgApacheXpathAxesFilterExprWalker *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesFilterExprWalker_filterExprOwner)

FOUNDATION_EXPORT void OrgApacheXpathAxesFilterExprWalker_filterExprOwner_initWithOrgApacheXpathAxesFilterExprWalker_(OrgApacheXpathAxesFilterExprWalker_filterExprOwner *self, OrgApacheXpathAxesFilterExprWalker *outer$);

FOUNDATION_EXPORT OrgApacheXpathAxesFilterExprWalker_filterExprOwner *new_OrgApacheXpathAxesFilterExprWalker_filterExprOwner_initWithOrgApacheXpathAxesFilterExprWalker_(OrgApacheXpathAxesFilterExprWalker *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesFilterExprWalker_filterExprOwner *create_OrgApacheXpathAxesFilterExprWalker_filterExprOwner_initWithOrgApacheXpathAxesFilterExprWalker_(OrgApacheXpathAxesFilterExprWalker *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesFilterExprWalker_filterExprOwner)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesFilterExprWalker")
