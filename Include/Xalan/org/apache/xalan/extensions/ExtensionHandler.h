//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/extensions/ExtensionHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanExtensionsExtensionHandler")
#ifdef RESTRICT_OrgApacheXalanExtensionsExtensionHandler
#define INCLUDE_ALL_OrgApacheXalanExtensionsExtensionHandler 0
#else
#define INCLUDE_ALL_OrgApacheXalanExtensionsExtensionHandler 1
#endif
#undef RESTRICT_OrgApacheXalanExtensionsExtensionHandler

#if !defined (OrgApacheXalanExtensionsExtensionHandler_) && (INCLUDE_ALL_OrgApacheXalanExtensionsExtensionHandler || defined(INCLUDE_OrgApacheXalanExtensionsExtensionHandler))
#define OrgApacheXalanExtensionsExtensionHandler_

@class IOSClass;
@class JavaLangBoolean;
@class JavaUtilVector;
@class OrgApacheXalanTemplatesElemTemplateElement;
@class OrgApacheXalanTemplatesStylesheet;
@class OrgApacheXalanTransformerTransformerImpl;
@class OrgApacheXpathFunctionsFuncExtFunction;
@protocol OrgApacheXalanExtensionsExpressionContext;

@interface OrgApacheXalanExtensionsExtensionHandler : NSObject {
 @public
  NSString *m_namespaceUri_;
  NSString *m_scriptLang_;
}

#pragma mark Public

- (id)callFunctionWithOrgApacheXpathFunctionsFuncExtFunction:(OrgApacheXpathFunctionsFuncExtFunction *)extFunction
                                          withJavaUtilVector:(JavaUtilVector *)args
               withOrgApacheXalanExtensionsExpressionContext:(id<OrgApacheXalanExtensionsExpressionContext>)exprContext;

- (id)callFunctionWithNSString:(NSString *)funcName
            withJavaUtilVector:(JavaUtilVector *)args
                        withId:(id)methodKey
withOrgApacheXalanExtensionsExpressionContext:(id<OrgApacheXalanExtensionsExpressionContext>)exprContext;

- (jboolean)isElementAvailableWithNSString:(NSString *)element;

- (jboolean)isFunctionAvailableWithNSString:(NSString *)function;

- (void)processElementWithNSString:(NSString *)localPart
withOrgApacheXalanTemplatesElemTemplateElement:(OrgApacheXalanTemplatesElemTemplateElement *)element
withOrgApacheXalanTransformerTransformerImpl:(OrgApacheXalanTransformerTransformerImpl *)transformer
withOrgApacheXalanTemplatesStylesheet:(OrgApacheXalanTemplatesStylesheet *)stylesheetTree
                            withId:(id)methodKey;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)namespaceUri
                    withNSString:(NSString *)scriptLang;

#pragma mark Package-Private

+ (IOSClass *)getClassForNameWithNSString:(NSString *)className_;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanExtensionsExtensionHandler)

J2OBJC_FIELD_SETTER(OrgApacheXalanExtensionsExtensionHandler, m_namespaceUri_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXalanExtensionsExtensionHandler, m_scriptLang_, NSString *)

FOUNDATION_EXPORT IOSClass *OrgApacheXalanExtensionsExtensionHandler_getClassForNameWithNSString_(NSString *className_);

FOUNDATION_EXPORT void OrgApacheXalanExtensionsExtensionHandler_initWithNSString_withNSString_(OrgApacheXalanExtensionsExtensionHandler *self, NSString *namespaceUri, NSString *scriptLang);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanExtensionsExtensionHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanExtensionsExtensionHandler")
