//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/transformer/TransformerHandlerImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTransformerTransformerHandlerImpl")
#ifdef RESTRICT_OrgApacheXalanTransformerTransformerHandlerImpl
#define INCLUDE_ALL_OrgApacheXalanTransformerTransformerHandlerImpl 0
#else
#define INCLUDE_ALL_OrgApacheXalanTransformerTransformerHandlerImpl 1
#endif
#undef RESTRICT_OrgApacheXalanTransformerTransformerHandlerImpl

#if !defined (OrgApacheXalanTransformerTransformerHandlerImpl_) && (INCLUDE_ALL_OrgApacheXalanTransformerTransformerHandlerImpl || defined(INCLUDE_OrgApacheXalanTransformerTransformerHandlerImpl))
#define OrgApacheXalanTransformerTransformerHandlerImpl_

#define RESTRICT_OrgXmlSaxEntityResolver 1
#define INCLUDE_OrgXmlSaxEntityResolver 1
#include "org/xml/sax/EntityResolver.h"

#define RESTRICT_OrgXmlSaxDTDHandler 1
#define INCLUDE_OrgXmlSaxDTDHandler 1
#include "org/xml/sax/DTDHandler.h"

#define RESTRICT_OrgXmlSaxContentHandler 1
#define INCLUDE_OrgXmlSaxContentHandler 1
#include "org/xml/sax/ContentHandler.h"

#define RESTRICT_OrgXmlSaxErrorHandler 1
#define INCLUDE_OrgXmlSaxErrorHandler 1
#include "org/xml/sax/ErrorHandler.h"

#define RESTRICT_OrgXmlSaxExtLexicalHandler 1
#define INCLUDE_OrgXmlSaxExtLexicalHandler 1
#include "org/xml/sax/ext/LexicalHandler.h"

#define RESTRICT_JavaxXmlTransformSaxTransformerHandler 1
#define INCLUDE_JavaxXmlTransformSaxTransformerHandler 1
#include "javax/xml/transform/sax/TransformerHandler.h"

#define RESTRICT_OrgXmlSaxExtDeclHandler 1
#define INCLUDE_OrgXmlSaxExtDeclHandler 1
#include "org/xml/sax/ext/DeclHandler.h"

@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaxXmlTransformTransformer;
@class OrgApacheXalanTransformerTransformerImpl;
@class OrgXmlSaxInputSource;
@class OrgXmlSaxSAXException;
@class OrgXmlSaxSAXParseException;
@protocol JavaxXmlTransformResult;
@protocol OrgApacheXmlDtmDTM;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxLocator;

@interface OrgApacheXalanTransformerTransformerHandlerImpl : NSObject < OrgXmlSaxEntityResolver, OrgXmlSaxDTDHandler, OrgXmlSaxContentHandler, OrgXmlSaxErrorHandler, OrgXmlSaxExtLexicalHandler, JavaxXmlTransformSaxTransformerHandler, OrgXmlSaxExtDeclHandler > {
 @public
  id<OrgApacheXmlDtmDTM> m_dtm_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheXalanTransformerTransformerImpl:(OrgApacheXalanTransformerTransformerImpl *)transformer
                                                     withBoolean:(jboolean)doFragment
                                                    withNSString:(NSString *)baseSystemID;

- (void)attributeDeclWithNSString:(NSString *)eName
                     withNSString:(NSString *)aName
                     withNSString:(NSString *)type
                     withNSString:(NSString *)valueDefault
                     withNSString:(NSString *)value;

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length;

- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length;

- (void)elementDeclWithNSString:(NSString *)name
                   withNSString:(NSString *)model;

- (void)endCDATA;

- (void)endDocument;

- (void)endDTD;

- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName;

- (void)endEntityWithNSString:(NSString *)name;

- (void)endPrefixMappingWithNSString:(NSString *)prefix;

- (void)errorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

- (void)externalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)publicId
                          withNSString:(NSString *)systemId;

- (void)fatalErrorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

- (NSString *)getSystemId;

- (JavaxXmlTransformTransformer *)getTransformer;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length;

- (void)internalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)value;

- (void)notationDeclWithNSString:(NSString *)name
                    withNSString:(NSString *)publicId
                    withNSString:(NSString *)systemId;

- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data;

- (OrgXmlSaxInputSource *)resolveEntityWithNSString:(NSString *)publicId
                                       withNSString:(NSString *)systemId;

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator;

- (void)setResultWithJavaxXmlTransformResult:(id<JavaxXmlTransformResult>)result;

- (void)setSystemIdWithNSString:(NSString *)systemID;

- (void)skippedEntityWithNSString:(NSString *)name;

- (void)startCDATA;

- (void)startDocument;

- (void)startDTDWithNSString:(NSString *)name
                withNSString:(NSString *)publicId
                withNSString:(NSString *)systemId;

- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts;

- (void)startEntityWithNSString:(NSString *)name;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

- (void)unparsedEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)publicId
                          withNSString:(NSString *)systemId
                          withNSString:(NSString *)notationName;

- (void)warningWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

#pragma mark Protected

- (void)clearCoRoutine;

- (void)clearCoRoutineWithOrgXmlSaxSAXException:(OrgXmlSaxSAXException *)ex;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTransformerTransformerHandlerImpl)

J2OBJC_FIELD_SETTER(OrgApacheXalanTransformerTransformerHandlerImpl, m_dtm_, id<OrgApacheXmlDtmDTM>)

FOUNDATION_EXPORT void OrgApacheXalanTransformerTransformerHandlerImpl_initWithOrgApacheXalanTransformerTransformerImpl_withBoolean_withNSString_(OrgApacheXalanTransformerTransformerHandlerImpl *self, OrgApacheXalanTransformerTransformerImpl *transformer, jboolean doFragment, NSString *baseSystemID);

FOUNDATION_EXPORT OrgApacheXalanTransformerTransformerHandlerImpl *new_OrgApacheXalanTransformerTransformerHandlerImpl_initWithOrgApacheXalanTransformerTransformerImpl_withBoolean_withNSString_(OrgApacheXalanTransformerTransformerImpl *transformer, jboolean doFragment, NSString *baseSystemID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTransformerTransformerHandlerImpl *create_OrgApacheXalanTransformerTransformerHandlerImpl_initWithOrgApacheXalanTransformerTransformerImpl_withBoolean_withNSString_(OrgApacheXalanTransformerTransformerImpl *transformer, jboolean doFragment, NSString *baseSystemID);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTransformerTransformerHandlerImpl)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTransformerTransformerHandlerImpl")
