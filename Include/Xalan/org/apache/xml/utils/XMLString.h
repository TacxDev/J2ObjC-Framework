//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/XMLString.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsXMLString")
#ifdef RESTRICT_OrgApacheXmlUtilsXMLString
#define INCLUDE_ALL_OrgApacheXmlUtilsXMLString 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsXMLString 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsXMLString

#if !defined (OrgApacheXmlUtilsXMLString_) && (INCLUDE_ALL_OrgApacheXmlUtilsXMLString || defined(INCLUDE_OrgApacheXmlUtilsXMLString))
#define OrgApacheXmlUtilsXMLString_

@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangDouble;
@class JavaLangInteger;
@class JavaUtilLocale;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxExtLexicalHandler;

@protocol OrgApacheXmlUtilsXMLString < JavaObject >

- (void)dispatchCharactersEventsWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch;

- (void)dispatchAsCommentWithOrgXmlSaxExtLexicalHandler:(id<OrgXmlSaxExtLexicalHandler>)lh;

- (id<OrgApacheXmlUtilsXMLString>)fixWhiteSpaceWithBoolean:(jboolean)trimHead
                                               withBoolean:(jboolean)trimTail
                                               withBoolean:(jboolean)doublePunctuationSpaces;

- (jint)length;

- (jchar)charAtWithInt:(jint)index;

- (void)getCharsWithInt:(jint)srcBegin
                withInt:(jint)srcEnd
          withCharArray:(IOSCharArray *)dst
                withInt:(jint)dstBegin;

- (jboolean)equalsWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)anObject;

- (jboolean)equalsWithNSString:(NSString *)anotherString;

- (jboolean)isEqual:(id)anObject;

- (jboolean)equalsIgnoreCaseWithNSString:(NSString *)anotherString;

- (jint)compareToWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)anotherString;

- (jint)compareToIgnoreCaseWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)str;

- (jboolean)startsWithWithNSString:(NSString *)prefix
                           withInt:(jint)toffset;

- (jboolean)startsWithWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)prefix
                                             withInt:(jint)toffset;

- (jboolean)startsWithWithNSString:(NSString *)prefix;

- (jboolean)startsWithWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)prefix;

- (jboolean)endsWithWithNSString:(NSString *)suffix;

- (NSUInteger)hash;

- (jint)indexOfWithInt:(jint)ch;

- (jint)indexOfWithInt:(jint)ch
               withInt:(jint)fromIndex;

- (jint)lastIndexOfWithInt:(jint)ch;

- (jint)lastIndexOfWithInt:(jint)ch
                   withInt:(jint)fromIndex;

- (jint)indexOfWithNSString:(NSString *)str;

- (jint)indexOfWithOrgApacheXmlUtilsXMLString:(id<OrgApacheXmlUtilsXMLString>)str;

- (jint)indexOfWithNSString:(NSString *)str
                    withInt:(jint)fromIndex;

- (jint)lastIndexOfWithNSString:(NSString *)str;

- (jint)lastIndexOfWithNSString:(NSString *)str
                        withInt:(jint)fromIndex;

- (id<OrgApacheXmlUtilsXMLString>)substringWithInt:(jint)beginIndex;

- (id<OrgApacheXmlUtilsXMLString>)substringWithInt:(jint)beginIndex
                                           withInt:(jint)endIndex;

- (id<OrgApacheXmlUtilsXMLString>)concatWithNSString:(NSString *)str;

- (id<OrgApacheXmlUtilsXMLString>)toLowerCaseWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (id<OrgApacheXmlUtilsXMLString>)toLowerCase;

- (id<OrgApacheXmlUtilsXMLString>)toUpperCaseWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (id<OrgApacheXmlUtilsXMLString>)toUpperCase;

- (id<OrgApacheXmlUtilsXMLString>)trim;

- (NSString *)description;

- (jboolean)hasString;

- (jdouble)toDouble;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsXMLString)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsXMLString)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsXMLString")
