//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/ObjectVector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsObjectVector")
#ifdef RESTRICT_OrgApacheXmlUtilsObjectVector
#define INCLUDE_ALL_OrgApacheXmlUtilsObjectVector 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsObjectVector 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsObjectVector

#if !defined (OrgApacheXmlUtilsObjectVector_) && (INCLUDE_ALL_OrgApacheXmlUtilsObjectVector || defined(INCLUDE_OrgApacheXmlUtilsObjectVector))
#define OrgApacheXmlUtilsObjectVector_

@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;

@interface OrgApacheXmlUtilsObjectVector : NSObject < NSCopying > {
 @public
  jint m_blocksize_;
  IOSObjectArray *m_map_;
  jint m_firstFree_;
  jint m_mapSize_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)blocksize;

- (instancetype)initWithInt:(jint)blocksize
                    withInt:(jint)increaseSize;

- (instancetype)initWithOrgApacheXmlUtilsObjectVector:(OrgApacheXmlUtilsObjectVector *)v;

- (void)addElementWithId:(id)value;

- (void)addElementsWithInt:(jint)numberOfElements;

- (void)addElementsWithId:(id)value
                  withInt:(jint)numberOfElements;

- (id)java_clone;

- (jboolean)containsWithId:(id)s;

- (id)elementAtWithInt:(jint)i;

- (jint)indexOfWithId:(id)elem;

- (jint)indexOfWithId:(id)elem
              withInt:(jint)index;

- (void)insertElementAtWithId:(id)value
                      withInt:(jint)at;

- (jint)lastIndexOfWithId:(id)elem;

- (void)removeAllElements;

- (jboolean)removeElementWithId:(id)s;

- (void)removeElementAtWithInt:(jint)i;

- (void)setElementAtWithId:(id)value
                   withInt:(jint)index;

- (void)setSizeWithInt:(jint)sz;

- (void)setToSizeWithInt:(jint)size;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsObjectVector)

J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsObjectVector, m_map_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectVector_init(OrgApacheXmlUtilsObjectVector *self);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *new_OrgApacheXmlUtilsObjectVector_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *create_OrgApacheXmlUtilsObjectVector_init(void);

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectVector_initWithInt_(OrgApacheXmlUtilsObjectVector *self, jint blocksize);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *new_OrgApacheXmlUtilsObjectVector_initWithInt_(jint blocksize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *create_OrgApacheXmlUtilsObjectVector_initWithInt_(jint blocksize);

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectVector_initWithInt_withInt_(OrgApacheXmlUtilsObjectVector *self, jint blocksize, jint increaseSize);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *new_OrgApacheXmlUtilsObjectVector_initWithInt_withInt_(jint blocksize, jint increaseSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *create_OrgApacheXmlUtilsObjectVector_initWithInt_withInt_(jint blocksize, jint increaseSize);

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectVector_initWithOrgApacheXmlUtilsObjectVector_(OrgApacheXmlUtilsObjectVector *self, OrgApacheXmlUtilsObjectVector *v);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *new_OrgApacheXmlUtilsObjectVector_initWithOrgApacheXmlUtilsObjectVector_(OrgApacheXmlUtilsObjectVector *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectVector *create_OrgApacheXmlUtilsObjectVector_initWithOrgApacheXmlUtilsObjectVector_(OrgApacheXmlUtilsObjectVector *v);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsObjectVector)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsObjectVector")
