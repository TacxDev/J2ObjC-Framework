//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/QName.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsQName")
#ifdef RESTRICT_OrgApacheXmlUtilsQName
#define INCLUDE_ALL_OrgApacheXmlUtilsQName 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsQName 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsQName

#if !defined (OrgApacheXmlUtilsQName_) && (INCLUDE_ALL_OrgApacheXmlUtilsQName || defined(INCLUDE_OrgApacheXmlUtilsQName))
#define OrgApacheXmlUtilsQName_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaUtilStack;
@protocol OrgApacheXmlUtilsPrefixResolver;
@protocol OrgW3cDomElement;

@interface OrgApacheXmlUtilsQName : NSObject < JavaIoSerializable > {
 @public
  NSString *_localName_;
  NSString *_namespaceURI_;
  NSString *_prefix_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)localName;

- (instancetype)initWithNSString:(NSString *)localName
                     withBoolean:(jboolean)validate;

- (instancetype)initWithNSString:(NSString *)qname
            withOrgW3cDomElement:(id<OrgW3cDomElement>)namespaceContext
withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)resolver;

- (instancetype)initWithNSString:(NSString *)qname
            withOrgW3cDomElement:(id<OrgW3cDomElement>)namespaceContext
withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)resolver
                     withBoolean:(jboolean)validate;

- (instancetype)initWithNSString:(NSString *)qname
withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)resolver;

- (instancetype)initWithNSString:(NSString *)qname
withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)resolver
                     withBoolean:(jboolean)validate;

- (instancetype)initWithNSString:(NSString *)qname
               withJavaUtilStack:(JavaUtilStack *)namespaces;

- (instancetype)initWithNSString:(NSString *)qname
               withJavaUtilStack:(JavaUtilStack *)namespaces
                     withBoolean:(jboolean)validate;

- (instancetype)initWithNSString:(NSString *)namespaceURI
                    withNSString:(NSString *)localName;

- (instancetype)initWithNSString:(NSString *)namespaceURI
                    withNSString:(NSString *)localName
                     withBoolean:(jboolean)validate;

- (instancetype)initWithNSString:(NSString *)namespaceURI
                    withNSString:(NSString *)prefix
                    withNSString:(NSString *)localName;

- (instancetype)initWithNSString:(NSString *)namespaceURI
                    withNSString:(NSString *)prefix
                    withNSString:(NSString *)localName
                     withBoolean:(jboolean)validate;

- (jboolean)isEqual:(id)object;

- (jboolean)equalsWithNSString:(NSString *)ns
                  withNSString:(NSString *)localPart;

- (NSString *)getLocalName;

- (NSString *)getLocalPart;

+ (NSString *)getLocalPartWithNSString:(NSString *)qname;

- (NSString *)getNamespace;

- (NSString *)getNamespaceURI;

- (NSString *)getPrefix;

+ (NSString *)getPrefixFromXMLNSDeclWithNSString:(NSString *)attRawName;

+ (NSString *)getPrefixPartWithNSString:(NSString *)qname;

+ (OrgApacheXmlUtilsQName *)getQNameFromStringWithNSString:(NSString *)name;

- (NSUInteger)hash;

+ (jboolean)isXMLNSDeclWithNSString:(NSString *)attRawName;

- (NSString *)toNamespacedString;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsQName)

J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsQName, _localName_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsQName, _namespaceURI_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsQName, _prefix_, NSString *)

inline jlong OrgApacheXmlUtilsQName_get_serialVersionUID(void);
#define OrgApacheXmlUtilsQName_serialVersionUID 467434581652829920LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsQName, serialVersionUID, jlong)

inline NSString *OrgApacheXmlUtilsQName_get_S_XMLNAMESPACEURI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlUtilsQName_S_XMLNAMESPACEURI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlUtilsQName, S_XMLNAMESPACEURI, NSString *)

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_init(OrgApacheXmlUtilsQName *self);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_init(void);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withNSString_(OrgApacheXmlUtilsQName *self, NSString *namespaceURI, NSString *localName);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withNSString_(NSString *namespaceURI, NSString *localName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withNSString_(NSString *namespaceURI, NSString *localName);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withNSString_withBoolean_(OrgApacheXmlUtilsQName *self, NSString *namespaceURI, NSString *localName, jboolean validate);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withNSString_withBoolean_(NSString *namespaceURI, NSString *localName, jboolean validate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withNSString_withBoolean_(NSString *namespaceURI, NSString *localName, jboolean validate);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withNSString_withNSString_(OrgApacheXmlUtilsQName *self, NSString *namespaceURI, NSString *prefix, NSString *localName);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withNSString_withNSString_(NSString *namespaceURI, NSString *prefix, NSString *localName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withNSString_withNSString_(NSString *namespaceURI, NSString *prefix, NSString *localName);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withNSString_withNSString_withBoolean_(OrgApacheXmlUtilsQName *self, NSString *namespaceURI, NSString *prefix, NSString *localName, jboolean validate);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withNSString_withNSString_withBoolean_(NSString *namespaceURI, NSString *prefix, NSString *localName, jboolean validate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withNSString_withNSString_withBoolean_(NSString *namespaceURI, NSString *prefix, NSString *localName, jboolean validate);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_(OrgApacheXmlUtilsQName *self, NSString *localName);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_(NSString *localName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_(NSString *localName);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withBoolean_(OrgApacheXmlUtilsQName *self, NSString *localName, jboolean validate);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withBoolean_(NSString *localName, jboolean validate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withBoolean_(NSString *localName, jboolean validate);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withJavaUtilStack_(OrgApacheXmlUtilsQName *self, NSString *qname, JavaUtilStack *namespaces);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withJavaUtilStack_(NSString *qname, JavaUtilStack *namespaces) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withJavaUtilStack_(NSString *qname, JavaUtilStack *namespaces);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withJavaUtilStack_withBoolean_(OrgApacheXmlUtilsQName *self, NSString *qname, JavaUtilStack *namespaces, jboolean validate);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withJavaUtilStack_withBoolean_(NSString *qname, JavaUtilStack *namespaces, jboolean validate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withJavaUtilStack_withBoolean_(NSString *qname, JavaUtilStack *namespaces, jboolean validate);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withOrgW3cDomElement_withOrgApacheXmlUtilsPrefixResolver_(OrgApacheXmlUtilsQName *self, NSString *qname, id<OrgW3cDomElement> namespaceContext, id<OrgApacheXmlUtilsPrefixResolver> resolver);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withOrgW3cDomElement_withOrgApacheXmlUtilsPrefixResolver_(NSString *qname, id<OrgW3cDomElement> namespaceContext, id<OrgApacheXmlUtilsPrefixResolver> resolver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withOrgW3cDomElement_withOrgApacheXmlUtilsPrefixResolver_(NSString *qname, id<OrgW3cDomElement> namespaceContext, id<OrgApacheXmlUtilsPrefixResolver> resolver);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withOrgW3cDomElement_withOrgApacheXmlUtilsPrefixResolver_withBoolean_(OrgApacheXmlUtilsQName *self, NSString *qname, id<OrgW3cDomElement> namespaceContext, id<OrgApacheXmlUtilsPrefixResolver> resolver, jboolean validate);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withOrgW3cDomElement_withOrgApacheXmlUtilsPrefixResolver_withBoolean_(NSString *qname, id<OrgW3cDomElement> namespaceContext, id<OrgApacheXmlUtilsPrefixResolver> resolver, jboolean validate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withOrgW3cDomElement_withOrgApacheXmlUtilsPrefixResolver_withBoolean_(NSString *qname, id<OrgW3cDomElement> namespaceContext, id<OrgApacheXmlUtilsPrefixResolver> resolver, jboolean validate);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withOrgApacheXmlUtilsPrefixResolver_(OrgApacheXmlUtilsQName *self, NSString *qname, id<OrgApacheXmlUtilsPrefixResolver> resolver);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withOrgApacheXmlUtilsPrefixResolver_(NSString *qname, id<OrgApacheXmlUtilsPrefixResolver> resolver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withOrgApacheXmlUtilsPrefixResolver_(NSString *qname, id<OrgApacheXmlUtilsPrefixResolver> resolver);

FOUNDATION_EXPORT void OrgApacheXmlUtilsQName_initWithNSString_withOrgApacheXmlUtilsPrefixResolver_withBoolean_(OrgApacheXmlUtilsQName *self, NSString *qname, id<OrgApacheXmlUtilsPrefixResolver> resolver, jboolean validate);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *new_OrgApacheXmlUtilsQName_initWithNSString_withOrgApacheXmlUtilsPrefixResolver_withBoolean_(NSString *qname, id<OrgApacheXmlUtilsPrefixResolver> resolver, jboolean validate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *create_OrgApacheXmlUtilsQName_initWithNSString_withOrgApacheXmlUtilsPrefixResolver_withBoolean_(NSString *qname, id<OrgApacheXmlUtilsPrefixResolver> resolver, jboolean validate);

FOUNDATION_EXPORT OrgApacheXmlUtilsQName *OrgApacheXmlUtilsQName_getQNameFromStringWithNSString_(NSString *name);

FOUNDATION_EXPORT jboolean OrgApacheXmlUtilsQName_isXMLNSDeclWithNSString_(NSString *attRawName);

FOUNDATION_EXPORT NSString *OrgApacheXmlUtilsQName_getPrefixFromXMLNSDeclWithNSString_(NSString *attRawName);

FOUNDATION_EXPORT NSString *OrgApacheXmlUtilsQName_getLocalPartWithNSString_(NSString *qname);

FOUNDATION_EXPORT NSString *OrgApacheXmlUtilsQName_getPrefixPartWithNSString_(NSString *qname);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsQName)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsQName")
