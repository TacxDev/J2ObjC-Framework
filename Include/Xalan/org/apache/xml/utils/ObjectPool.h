//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/ObjectPool.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsObjectPool")
#ifdef RESTRICT_OrgApacheXmlUtilsObjectPool
#define INCLUDE_ALL_OrgApacheXmlUtilsObjectPool 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsObjectPool 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsObjectPool

#if !defined (OrgApacheXmlUtilsObjectPool_) && (INCLUDE_ALL_OrgApacheXmlUtilsObjectPool || defined(INCLUDE_OrgApacheXmlUtilsObjectPool))
#define OrgApacheXmlUtilsObjectPool_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSClass;
@class JavaLangInteger;
@class JavaLangLong;

@interface OrgApacheXmlUtilsObjectPool : NSObject < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithIOSClass:(IOSClass *)type;

- (instancetype)initWithIOSClass:(IOSClass *)type
                         withInt:(jint)size;

- (instancetype)initWithNSString:(NSString *)className_;

- (void)freeInstanceWithId:(id)obj;

- (id)getInstance;

- (id)getInstanceIfFree;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsObjectPool)

inline jlong OrgApacheXmlUtilsObjectPool_get_serialVersionUID(void);
#define OrgApacheXmlUtilsObjectPool_serialVersionUID -8519013691660936643LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsObjectPool, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectPool_initWithIOSClass_(OrgApacheXmlUtilsObjectPool *self, IOSClass *type);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *new_OrgApacheXmlUtilsObjectPool_initWithIOSClass_(IOSClass *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *create_OrgApacheXmlUtilsObjectPool_initWithIOSClass_(IOSClass *type);

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectPool_initWithNSString_(OrgApacheXmlUtilsObjectPool *self, NSString *className_);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *new_OrgApacheXmlUtilsObjectPool_initWithNSString_(NSString *className_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *create_OrgApacheXmlUtilsObjectPool_initWithNSString_(NSString *className_);

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectPool_initWithIOSClass_withInt_(OrgApacheXmlUtilsObjectPool *self, IOSClass *type, jint size);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *new_OrgApacheXmlUtilsObjectPool_initWithIOSClass_withInt_(IOSClass *type, jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *create_OrgApacheXmlUtilsObjectPool_initWithIOSClass_withInt_(IOSClass *type, jint size);

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectPool_init(OrgApacheXmlUtilsObjectPool *self);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *new_OrgApacheXmlUtilsObjectPool_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectPool *create_OrgApacheXmlUtilsObjectPool_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsObjectPool)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsObjectPool")
