//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/dtm/DTM.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlDtmDTM")
#ifdef RESTRICT_OrgApacheXmlDtmDTM
#define INCLUDE_ALL_OrgApacheXmlDtmDTM 0
#else
#define INCLUDE_ALL_OrgApacheXmlDtmDTM 1
#endif
#undef RESTRICT_OrgApacheXmlDtmDTM

#if !defined (OrgApacheXmlDtmDTM_) && (INCLUDE_ALL_OrgApacheXmlDtmDTM || defined(INCLUDE_OrgApacheXmlDtmDTM))
#define OrgApacheXmlDtmDTM_

@class IOSCharArray;
@class IOSIntArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangShort;
@class OrgApacheXmlDtmDTMAxisTraverser;
@class OrgApacheXmlDtmDTMManager;
@protocol JavaxXmlTransformSourceLocator;
@protocol OrgApacheXmlDtmDTMAxisIterator;
@protocol OrgApacheXmlUtilsXMLString;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxDTDHandler;
@protocol OrgXmlSaxEntityResolver;
@protocol OrgXmlSaxErrorHandler;
@protocol OrgXmlSaxExtDeclHandler;
@protocol OrgXmlSaxExtLexicalHandler;

@protocol OrgApacheXmlDtmDTM < JavaObject >

- (void)setFeatureWithNSString:(NSString *)featureId
                   withBoolean:(jboolean)state;

- (void)setPropertyWithNSString:(NSString *)property
                         withId:(id)value;

- (OrgApacheXmlDtmDTMAxisTraverser *)getAxisTraverserWithInt:(jint)axis;

- (id<OrgApacheXmlDtmDTMAxisIterator>)getAxisIteratorWithInt:(jint)axis;

- (id<OrgApacheXmlDtmDTMAxisIterator>)getTypedAxisIteratorWithInt:(jint)axis
                                                          withInt:(jint)type;

- (jboolean)hasChildNodesWithInt:(jint)nodeHandle;

- (jint)getFirstChildWithInt:(jint)nodeHandle;

- (jint)getLastChildWithInt:(jint)nodeHandle;

- (jint)getAttributeNodeWithInt:(jint)elementHandle
                   withNSString:(NSString *)namespaceURI
                   withNSString:(NSString *)name;

- (jint)getFirstAttributeWithInt:(jint)nodeHandle;

- (jint)getFirstNamespaceNodeWithInt:(jint)nodeHandle
                         withBoolean:(jboolean)inScope;

- (jint)getNextSiblingWithInt:(jint)nodeHandle;

- (jint)getPreviousSiblingWithInt:(jint)nodeHandle;

- (jint)getNextAttributeWithInt:(jint)nodeHandle;

- (jint)getNextNamespaceNodeWithInt:(jint)baseHandle
                            withInt:(jint)namespaceHandle
                        withBoolean:(jboolean)inScope;

- (jint)getParentWithInt:(jint)nodeHandle;

- (jint)getDocument;

- (jint)getOwnerDocumentWithInt:(jint)nodeHandle;

- (jint)getDocumentRootWithInt:(jint)nodeHandle;

- (id<OrgApacheXmlUtilsXMLString>)getStringValueWithInt:(jint)nodeHandle;

- (jint)getStringValueChunkCountWithInt:(jint)nodeHandle;

- (IOSCharArray *)getStringValueChunkWithInt:(jint)nodeHandle
                                     withInt:(jint)chunkIndex
                                withIntArray:(IOSIntArray *)startAndLen;

- (jint)getExpandedTypeIDWithInt:(jint)nodeHandle;

- (jint)getExpandedTypeIDWithNSString:(NSString *)namespace_
                         withNSString:(NSString *)localName
                              withInt:(jint)type;

- (NSString *)getLocalNameFromExpandedNameIDWithInt:(jint)ExpandedNameID;

- (NSString *)getNamespaceFromExpandedNameIDWithInt:(jint)ExpandedNameID;

- (NSString *)getNodeNameWithInt:(jint)nodeHandle;

- (NSString *)getNodeNameXWithInt:(jint)nodeHandle;

- (NSString *)getLocalNameWithInt:(jint)nodeHandle;

- (NSString *)getPrefixWithInt:(jint)nodeHandle;

- (NSString *)getNamespaceURIWithInt:(jint)nodeHandle;

- (NSString *)getNodeValueWithInt:(jint)nodeHandle;

- (jshort)getNodeTypeWithInt:(jint)nodeHandle;

- (jshort)getLevelWithInt:(jint)nodeHandle;

- (jboolean)isSupportedWithNSString:(NSString *)feature
                       withNSString:(NSString *)version_;

- (NSString *)getDocumentBaseURI;

- (void)setDocumentBaseURIWithNSString:(NSString *)baseURI;

- (NSString *)getDocumentSystemIdentifierWithInt:(jint)nodeHandle;

- (NSString *)getDocumentEncodingWithInt:(jint)nodeHandle;

- (NSString *)getDocumentStandaloneWithInt:(jint)nodeHandle;

- (NSString *)getDocumentVersionWithInt:(jint)documentHandle;

- (jboolean)getDocumentAllDeclarationsProcessed;

- (NSString *)getDocumentTypeDeclarationSystemIdentifier;

- (NSString *)getDocumentTypeDeclarationPublicIdentifier;

- (jint)getElementByIdWithNSString:(NSString *)elementId;

- (NSString *)getUnparsedEntityURIWithNSString:(NSString *)name;

- (jboolean)supportsPreStripping;

- (jboolean)isNodeAfterWithInt:(jint)firstNodeHandle
                       withInt:(jint)secondNodeHandle;

- (jboolean)isCharacterElementContentWhitespaceWithInt:(jint)nodeHandle;

- (jboolean)isDocumentAllDeclarationsProcessedWithInt:(jint)documentHandle;

- (jboolean)isAttributeSpecifiedWithInt:(jint)attributeHandle;

- (void)dispatchCharactersEventsWithInt:(jint)nodeHandle
            withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch
                            withBoolean:(jboolean)normalize;

- (void)dispatchToEventsWithInt:(jint)nodeHandle
    withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch;

- (id<OrgW3cDomNode>)getNodeWithInt:(jint)nodeHandle;

- (jboolean)needsTwoThreads;

- (id<OrgXmlSaxContentHandler>)getContentHandler;

- (id<OrgXmlSaxExtLexicalHandler>)getLexicalHandler;

- (id<OrgXmlSaxEntityResolver>)getEntityResolver;

- (id<OrgXmlSaxDTDHandler>)getDTDHandler;

- (id<OrgXmlSaxErrorHandler>)getErrorHandler;

- (id<OrgXmlSaxExtDeclHandler>)getDeclHandler;

- (void)appendChildWithInt:(jint)newChild
               withBoolean:(jboolean)clone
               withBoolean:(jboolean)cloneDepth;

- (void)appendTextChildWithNSString:(NSString *)str;

- (id<JavaxXmlTransformSourceLocator>)getSourceLocatorForWithInt:(jint)node;

- (void)documentRegistration;

- (void)documentRelease;

- (void)migrateToWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)manager;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlDtmDTM)

inline jint OrgApacheXmlDtmDTM_get_NULL(void);
#define OrgApacheXmlDtmDTM_NULL -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, NULL, jint)

inline jshort OrgApacheXmlDtmDTM_get_ROOT_NODE(void);
#define OrgApacheXmlDtmDTM_ROOT_NODE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, ROOT_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_ELEMENT_NODE(void);
#define OrgApacheXmlDtmDTM_ELEMENT_NODE 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, ELEMENT_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_ATTRIBUTE_NODE(void);
#define OrgApacheXmlDtmDTM_ATTRIBUTE_NODE 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, ATTRIBUTE_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_TEXT_NODE(void);
#define OrgApacheXmlDtmDTM_TEXT_NODE 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, TEXT_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_CDATA_SECTION_NODE(void);
#define OrgApacheXmlDtmDTM_CDATA_SECTION_NODE 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, CDATA_SECTION_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_ENTITY_REFERENCE_NODE(void);
#define OrgApacheXmlDtmDTM_ENTITY_REFERENCE_NODE 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, ENTITY_REFERENCE_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_ENTITY_NODE(void);
#define OrgApacheXmlDtmDTM_ENTITY_NODE 6
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, ENTITY_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_PROCESSING_INSTRUCTION_NODE(void);
#define OrgApacheXmlDtmDTM_PROCESSING_INSTRUCTION_NODE 7
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, PROCESSING_INSTRUCTION_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_COMMENT_NODE(void);
#define OrgApacheXmlDtmDTM_COMMENT_NODE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, COMMENT_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_DOCUMENT_NODE(void);
#define OrgApacheXmlDtmDTM_DOCUMENT_NODE 9
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, DOCUMENT_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_DOCUMENT_TYPE_NODE(void);
#define OrgApacheXmlDtmDTM_DOCUMENT_TYPE_NODE 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, DOCUMENT_TYPE_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_DOCUMENT_FRAGMENT_NODE(void);
#define OrgApacheXmlDtmDTM_DOCUMENT_FRAGMENT_NODE 11
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, DOCUMENT_FRAGMENT_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_NOTATION_NODE(void);
#define OrgApacheXmlDtmDTM_NOTATION_NODE 12
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, NOTATION_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_NAMESPACE_NODE(void);
#define OrgApacheXmlDtmDTM_NAMESPACE_NODE 13
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, NAMESPACE_NODE, jshort)

inline jshort OrgApacheXmlDtmDTM_get_NTYPES(void);
#define OrgApacheXmlDtmDTM_NTYPES 14
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmDTM, NTYPES, jshort)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmDTM)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlDtmDTM")
