//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/dtm/ref/sax2dtm/SAX2DTM.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlDtmRefSax2dtmSAX2DTM")
#ifdef RESTRICT_OrgApacheXmlDtmRefSax2dtmSAX2DTM
#define INCLUDE_ALL_OrgApacheXmlDtmRefSax2dtmSAX2DTM 0
#else
#define INCLUDE_ALL_OrgApacheXmlDtmRefSax2dtmSAX2DTM 1
#endif
#undef RESTRICT_OrgApacheXmlDtmRefSax2dtmSAX2DTM

#if !defined (OrgApacheXmlDtmRefSax2dtmSAX2DTM_) && (INCLUDE_ALL_OrgApacheXmlDtmRefSax2dtmSAX2DTM || defined(INCLUDE_OrgApacheXmlDtmRefSax2dtmSAX2DTM))
#define OrgApacheXmlDtmRefSax2dtmSAX2DTM_

#define RESTRICT_OrgApacheXmlDtmRefDTMDefaultBaseIterators 1
#define INCLUDE_OrgApacheXmlDtmRefDTMDefaultBaseIterators 1
#include "org/apache/xml/dtm/ref/DTMDefaultBaseIterators.h"

#define RESTRICT_OrgXmlSaxEntityResolver 1
#define INCLUDE_OrgXmlSaxEntityResolver 1
#include "org/xml/sax/EntityResolver.h"

#define RESTRICT_OrgXmlSaxDTDHandler 1
#define INCLUDE_OrgXmlSaxDTDHandler 1
#include "org/xml/sax/DTDHandler.h"

#define RESTRICT_OrgXmlSaxContentHandler 1
#define INCLUDE_OrgXmlSaxContentHandler 1
#include "org/xml/sax/ContentHandler.h"

#define RESTRICT_OrgXmlSaxErrorHandler 1
#define INCLUDE_OrgXmlSaxErrorHandler 1
#include "org/xml/sax/ErrorHandler.h"

#define RESTRICT_OrgXmlSaxExtDeclHandler 1
#define INCLUDE_OrgXmlSaxExtDeclHandler 1
#include "org/xml/sax/ext/DeclHandler.h"

#define RESTRICT_OrgXmlSaxExtLexicalHandler 1
#define INCLUDE_OrgXmlSaxExtLexicalHandler 1
#include "org/xml/sax/ext/LexicalHandler.h"

@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaUtilHashtable;
@class JavaUtilVector;
@class OrgApacheXmlDtmDTMManager;
@class OrgApacheXmlDtmRefDTMStringPool;
@class OrgApacheXmlDtmRefDTMTreeWalker;
@class OrgApacheXmlUtilsFastStringBuffer;
@class OrgApacheXmlUtilsIntStack;
@class OrgApacheXmlUtilsIntVector;
@class OrgApacheXmlUtilsStringVector;
@class OrgApacheXmlUtilsSuballocatedIntVector;
@class OrgApacheXmlUtilsXMLStringFactory;
@class OrgXmlSaxInputSource;
@class OrgXmlSaxSAXParseException;
@protocol JavaxXmlTransformSource;
@protocol JavaxXmlTransformSourceLocator;
@protocol OrgApacheXmlDtmDTMWSFilter;
@protocol OrgApacheXmlDtmRefIncrementalSAXSource;
@protocol OrgApacheXmlUtilsXMLString;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxLocator;

@interface OrgApacheXmlDtmRefSax2dtmSAX2DTM : OrgApacheXmlDtmRefDTMDefaultBaseIterators < OrgXmlSaxEntityResolver, OrgXmlSaxDTDHandler, OrgXmlSaxContentHandler, OrgXmlSaxErrorHandler, OrgXmlSaxExtDeclHandler, OrgXmlSaxExtLexicalHandler > {
 @public
  OrgApacheXmlUtilsFastStringBuffer *m_chars_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_data_;
  OrgApacheXmlUtilsIntStack *m_parents_;
  jint m_previous_;
  JavaUtilVector *m_prefixMappings_;
  OrgApacheXmlUtilsIntStack *m_contextIndexes_;
  jint m_textType_;
  jint m_coalescedTextType_;
  id<OrgXmlSaxLocator> m_locator_;
  jboolean m_insideDTD_;
  OrgApacheXmlDtmRefDTMTreeWalker *m_walker_;
  OrgApacheXmlDtmRefDTMStringPool *m_valuesOrPrefixes_;
  jboolean m_endDocumentOccured_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_dataOrQName_;
  JavaUtilHashtable *m_idAttributes_;
  jint m_textPendingStart_;
  jboolean m_useSourceLocationProperty_;
  OrgApacheXmlUtilsStringVector *m_sourceSystemId_;
  OrgApacheXmlUtilsIntVector *m_sourceLine_;
  OrgApacheXmlUtilsIntVector *m_sourceColumn_;
  jboolean m_pastFirstElement_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)mgr
                      withJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source
                                          withInt:(jint)dtmIdentity
                   withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)whiteSpaceFilter
            withOrgApacheXmlUtilsXMLStringFactory:(OrgApacheXmlUtilsXMLStringFactory *)xstringfactory
                                      withBoolean:(jboolean)doIndexing;

- (instancetype)initWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)mgr
                      withJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source
                                          withInt:(jint)dtmIdentity
                   withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)whiteSpaceFilter
            withOrgApacheXmlUtilsXMLStringFactory:(OrgApacheXmlUtilsXMLStringFactory *)xstringfactory
                                      withBoolean:(jboolean)doIndexing
                                          withInt:(jint)blocksize
                                      withBoolean:(jboolean)usePrevsib
                                      withBoolean:(jboolean)newNameTable;

- (void)attributeDeclWithNSString:(NSString *)eName
                     withNSString:(NSString *)aName
                     withNSString:(NSString *)type
                     withNSString:(NSString *)valueDefault
                     withNSString:(NSString *)value;

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length;

- (void)clearCoRoutine;

- (void)clearCoRoutineWithBoolean:(jboolean)callDoTerminate;

- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length;

- (void)dispatchCharactersEventsWithInt:(jint)nodeHandle
            withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch
                            withBoolean:(jboolean)normalize;

- (void)dispatchToEventsWithInt:(jint)nodeHandle
    withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch;

- (void)elementDeclWithNSString:(NSString *)name
                   withNSString:(NSString *)model;

- (void)endCDATA;

- (void)endDocument;

- (void)endDTD;

- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName;

- (void)endEntityWithNSString:(NSString *)name;

- (void)endPrefixMappingWithNSString:(NSString *)prefix;

- (void)errorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

- (void)externalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)publicId
                          withNSString:(NSString *)systemId;

- (void)fatalErrorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

- (jint)getAttributeNodeWithInt:(jint)nodeHandle
                   withNSString:(NSString *)namespaceURI
                   withNSString:(NSString *)name;

- (id<OrgXmlSaxContentHandler>)getContentHandler;

- (id<OrgXmlSaxExtDeclHandler>)getDeclHandler;

- (NSString *)getDocumentTypeDeclarationPublicIdentifier;

- (NSString *)getDocumentTypeDeclarationSystemIdentifier;

- (id<OrgXmlSaxDTDHandler>)getDTDHandler;

- (jint)getElementByIdWithNSString:(NSString *)elementId;

- (id<OrgXmlSaxEntityResolver>)getEntityResolver;

- (id<OrgXmlSaxErrorHandler>)getErrorHandler;

- (NSString *)getFixedNamesWithInt:(jint)type;

- (jint)getIdForNamespaceWithNSString:(NSString *)uri;

- (id<OrgXmlSaxExtLexicalHandler>)getLexicalHandler;

- (NSString *)getLocalNameWithInt:(jint)nodeHandle;

- (NSString *)getNamespaceURIWithInt:(jint)nodeHandle;

- (NSString *)getNamespaceURIWithNSString:(NSString *)prefix;

- (NSString *)getNodeNameWithInt:(jint)nodeHandle;

- (NSString *)getNodeNameXWithInt:(jint)nodeHandle;

- (NSString *)getNodeValueWithInt:(jint)nodeHandle;

- (jint)getNumberOfNodes;

- (NSString *)getPrefixWithInt:(jint)nodeHandle;

- (NSString *)getPrefixWithNSString:(NSString *)qname
                       withNSString:(NSString *)uri;

- (id<JavaxXmlTransformSourceLocator>)getSourceLocatorForWithInt:(jint)node;

- (id<OrgApacheXmlUtilsXMLString>)getStringValueWithInt:(jint)nodeHandle;

- (NSString *)getUnparsedEntityURIWithNSString:(NSString *)name;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length;

- (void)internalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)value;

- (jboolean)isAttributeSpecifiedWithInt:(jint)attributeHandle;

- (jboolean)isWhitespaceWithInt:(jint)nodeHandle;

- (void)migrateToWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)manager;

- (jboolean)needsTwoThreads;

- (void)notationDeclWithNSString:(NSString *)name
                    withNSString:(NSString *)publicId
                    withNSString:(NSString *)systemId;

- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data;

- (OrgXmlSaxInputSource *)resolveEntityWithNSString:(NSString *)publicId
                                       withNSString:(NSString *)systemId;

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator;

- (void)setIDAttributeWithNSString:(NSString *)id_
                           withInt:(jint)elem;

- (void)setIncrementalSAXSourceWithOrgApacheXmlDtmRefIncrementalSAXSource:(id<OrgApacheXmlDtmRefIncrementalSAXSource>)incrementalSAXSource;

- (void)setPropertyWithNSString:(NSString *)property
                         withId:(id)value;

- (void)setUseSourceLocationWithBoolean:(jboolean)useSourceLocation;

- (void)skippedEntityWithNSString:(NSString *)name;

- (void)startCDATA;

- (void)startDocument;

- (void)startDTDWithNSString:(NSString *)name
                withNSString:(NSString *)publicId
                withNSString:(NSString *)systemId;

- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)attributes;

- (void)startEntityWithNSString:(NSString *)name;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

- (void)unparsedEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)publicId
                          withNSString:(NSString *)systemId
                          withNSString:(NSString *)notationName;

- (void)warningWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)e;

#pragma mark Protected

- (jint)_dataOrQNameWithInt:(jint)identity;

- (void)addNewDTMIDWithInt:(jint)nodeIndex;

- (jint)addNodeWithInt:(jint)type
               withInt:(jint)expandedTypeID
               withInt:(jint)parentIndex
               withInt:(jint)previousSibling
               withInt:(jint)dataOrPrefix
           withBoolean:(jboolean)canHaveFirstChild;

- (void)charactersFlush;

- (jboolean)declAlreadyDeclaredWithNSString:(NSString *)prefix;

- (jint)getNextNodeIdentityWithInt:(jint)identity;

- (jboolean)nextNode;

- (void)setSourceLocation;

@end

J2OBJC_STATIC_INIT(OrgApacheXmlDtmRefSax2dtmSAX2DTM)

J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_chars_, OrgApacheXmlUtilsFastStringBuffer *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_data_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_parents_, OrgApacheXmlUtilsIntStack *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_prefixMappings_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_contextIndexes_, OrgApacheXmlUtilsIntStack *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_locator_, id<OrgXmlSaxLocator>)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_walker_, OrgApacheXmlDtmRefDTMTreeWalker *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_valuesOrPrefixes_, OrgApacheXmlDtmRefDTMStringPool *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_dataOrQName_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_idAttributes_, JavaUtilHashtable *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_sourceSystemId_, OrgApacheXmlUtilsStringVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_sourceLine_, OrgApacheXmlUtilsIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefSax2dtmSAX2DTM, m_sourceColumn_, OrgApacheXmlUtilsIntVector *)

FOUNDATION_EXPORT void OrgApacheXmlDtmRefSax2dtmSAX2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_(OrgApacheXmlDtmRefSax2dtmSAX2DTM *self, OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing);

FOUNDATION_EXPORT OrgApacheXmlDtmRefSax2dtmSAX2DTM *new_OrgApacheXmlDtmRefSax2dtmSAX2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_(OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefSax2dtmSAX2DTM *create_OrgApacheXmlDtmRefSax2dtmSAX2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_(OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing);

FOUNDATION_EXPORT void OrgApacheXmlDtmRefSax2dtmSAX2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_withInt_withBoolean_withBoolean_(OrgApacheXmlDtmRefSax2dtmSAX2DTM *self, OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing, jint blocksize, jboolean usePrevsib, jboolean newNameTable);

FOUNDATION_EXPORT OrgApacheXmlDtmRefSax2dtmSAX2DTM *new_OrgApacheXmlDtmRefSax2dtmSAX2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_withInt_withBoolean_withBoolean_(OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing, jint blocksize, jboolean usePrevsib, jboolean newNameTable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefSax2dtmSAX2DTM *create_OrgApacheXmlDtmRefSax2dtmSAX2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_withInt_withBoolean_withBoolean_(OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing, jint blocksize, jboolean usePrevsib, jboolean newNameTable);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmRefSax2dtmSAX2DTM)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlDtmRefSax2dtmSAX2DTM")
