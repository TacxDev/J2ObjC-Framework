//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/MultimapSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject")
#ifdef RESTRICT_ComGoogleCommonTruthMultimapSubject
#define INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthMultimapSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthMultimapSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject || defined(INCLUDE_ComGoogleCommonTruthMultimapSubject))
#define ComGoogleCommonTruthMultimapSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "com/google/common/truth/Subject.h"

@class ComGoogleCommonTruthCorrespondence;
@class ComGoogleCommonTruthFailureMetadata;
@class ComGoogleCommonTruthIterableSubject;
@class ComGoogleCommonTruthMultimapSubject_UsingCorrespondence;
@class IOSObjectArray;
@class JavaLangInteger;
@protocol ComGoogleCommonCollectMultimap;
@protocol ComGoogleCommonTruthOrdered;

@interface ComGoogleCommonTruthMultimapSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (ComGoogleCommonTruthMultimapSubject_UsingCorrespondence *)comparingValuesUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastWithId:(id)k0
                                                  withId:(id)v0
                                       withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;

- (void)containsEntryWithId:(id)key
                     withId:(id)value;

- (id<ComGoogleCommonTruthOrdered>)containsExactly;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithId:(id)k0
                                                  withId:(id)v0
                                       withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;

- (void)containsKeyWithId:(id)key;

- (void)doesNotContainEntryWithId:(id)key
                           withId:(id)value;

- (void)doesNotContainKeyWithId:(id)key;

- (void)hasSizeWithInt:(jint)expectedSize;

- (void)isEmpty;

- (void)isEqualToWithId:(id)other;

- (void)isNotEmpty;

- (ComGoogleCommonTruthIterableSubject *)valuesForKeyWithId:(id)key;

#pragma mark Protected

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)metadata
                         withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)metadata
                         withComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)multimap
                                               withNSString:(NSString *)typeDescription;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                                     withId:(id)arg1 NS_UNAVAILABLE;

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                                     withId:(id)arg1
                                               withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonTruthMultimapSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthMultimapSubject *self, ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultimap> multimap);

FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *new_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultimap> multimap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *create_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultimap_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultimap> multimap);

FOUNDATION_EXPORT void ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultimap_withNSString_(ComGoogleCommonTruthMultimapSubject *self, ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultimap> multimap, NSString *typeDescription);

FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *new_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultimap_withNSString_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultimap> multimap, NSString *typeDescription) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *create_ComGoogleCommonTruthMultimapSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultimap_withNSString_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultimap> multimap, NSString *typeDescription);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultimapSubject)

#endif

#if !defined (ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject || defined(INCLUDE_ComGoogleCommonTruthMultimapSubject_UsingCorrespondence))
#define ComGoogleCommonTruthMultimapSubject_UsingCorrespondence_

@class IOSObjectArray;
@protocol ComGoogleCommonCollectMultimap;
@protocol ComGoogleCommonTruthOrdered;

@interface ComGoogleCommonTruthMultimapSubject_UsingCorrespondence : NSObject

#pragma mark Public

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastWithId:(id)k0
                                                  withId:(id)v0
                                       withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;

- (void)containsEntryWithId:(id)expectedKey
                     withId:(id)expectedValue;

- (id<ComGoogleCommonTruthOrdered>)containsExactly;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithId:(id)k0
                                                  withId:(id)v0
                                       withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyEntriesInWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)expectedMultimap;

- (void)doesNotContainEntryWithId:(id)excludedKey
                           withId:(id)excludedValue;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultimapSubject_UsingCorrespondence)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthMultimapSubject")
