//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/LongSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthLongSubject")
#ifdef RESTRICT_ComGoogleCommonTruthLongSubject
#define INCLUDE_ALL_ComGoogleCommonTruthLongSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthLongSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthLongSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthLongSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthLongSubject || defined(INCLUDE_ComGoogleCommonTruthLongSubject))
#define ComGoogleCommonTruthLongSubject_

#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
#include "com/google/common/truth/ComparableSubject.h"

@class ComGoogleCommonTruthFailureMetadata;
@class JavaLangInteger;
@class JavaLangLong;
@protocol JavaLangComparable;

@interface ComGoogleCommonTruthLongSubject : ComGoogleCommonTruthComparableSubject

#pragma mark Public

- (void)isAtLeastWithInt:(jint)other;

- (void)isAtMostWithInt:(jint)other;

- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangLong *)other;

- (void)isGreaterThanWithInt:(jint)other;

- (void)isLessThanWithInt:(jint)other;

#pragma mark Protected

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)metadata
                                           withJavaLangLong:(JavaLangLong *)actual;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                     withJavaLangComparable:(id<JavaLangComparable>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthLongSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangLong_(ComGoogleCommonTruthLongSubject *self, ComGoogleCommonTruthFailureMetadata *metadata, JavaLangLong *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthLongSubject *new_ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangLong_(ComGoogleCommonTruthFailureMetadata *metadata, JavaLangLong *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthLongSubject *create_ComGoogleCommonTruthLongSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangLong_(ComGoogleCommonTruthFailureMetadata *metadata, JavaLangLong *actual);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthLongSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthLongSubject")
