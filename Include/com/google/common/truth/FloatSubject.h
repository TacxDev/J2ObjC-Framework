//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/FloatSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthFloatSubject")
#ifdef RESTRICT_ComGoogleCommonTruthFloatSubject
#define INCLUDE_ALL_ComGoogleCommonTruthFloatSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthFloatSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthFloatSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthFloatSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthFloatSubject || defined(INCLUDE_ComGoogleCommonTruthFloatSubject))
#define ComGoogleCommonTruthFloatSubject_

#define RESTRICT_ComGoogleCommonTruthComparableSubject 1
#define INCLUDE_ComGoogleCommonTruthComparableSubject 1
#include "com/google/common/truth/ComparableSubject.h"

@class ComGoogleCommonTruthFailureMetadata;
@class ComGoogleCommonTruthFloatSubject_TolerantFloatComparison;
@class JavaLangFloat;
@class JavaLangInteger;
@protocol JavaLangComparable;

@interface ComGoogleCommonTruthFloatSubject : ComGoogleCommonTruthComparableSubject

#pragma mark Public

- (void)isAtLeastWithInt:(jint)other;

- (void)isAtMostWithInt:(jint)other;

- (void)isEqualToWithId:(id)other;

- (void)isEquivalentAccordingToCompareToWithJavaLangComparable:(JavaLangFloat *)other;

- (void)isFinite;

- (void)isGreaterThanWithInt:(jint)other;

- (void)isLessThanWithInt:(jint)other;

- (void)isNaN;

- (void)isNegativeInfinity;

- (void)isNonZero;

- (void)isNotEqualToWithId:(id)other;

- (void)isNotNaN;

- (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *)isNotWithinWithFloat:(jfloat)tolerance;

- (void)isPositiveInfinity;

- (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison *)isWithinWithFloat:(jfloat)tolerance;

- (void)isZero;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)metadata
                                          withJavaLangFloat:(JavaLangFloat *)actual;

+ (void)checkToleranceWithFloat:(jfloat)tolerance;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                     withJavaLangComparable:(id<JavaLangComparable>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonTruthFloatSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangFloat_(ComGoogleCommonTruthFloatSubject *self, ComGoogleCommonTruthFailureMetadata *metadata, JavaLangFloat *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthFloatSubject *new_ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangFloat_(ComGoogleCommonTruthFailureMetadata *metadata, JavaLangFloat *actual) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthFloatSubject *create_ComGoogleCommonTruthFloatSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangFloat_(ComGoogleCommonTruthFailureMetadata *metadata, JavaLangFloat *actual);

FOUNDATION_EXPORT void ComGoogleCommonTruthFloatSubject_checkToleranceWithFloat_(jfloat tolerance);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthFloatSubject)

#endif

#if !defined (ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_) && (INCLUDE_ALL_ComGoogleCommonTruthFloatSubject || defined(INCLUDE_ComGoogleCommonTruthFloatSubject_TolerantFloatComparison))
#define ComGoogleCommonTruthFloatSubject_TolerantFloatComparison_

@class JavaLangBoolean;
@class JavaLangFloat;
@class JavaLangInteger;

@interface ComGoogleCommonTruthFloatSubject_TolerantFloatComparison : NSObject

#pragma mark Public

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (void)ofWithFloat:(jfloat)expectedFloat;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthFloatSubject_TolerantFloatComparison)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthFloatSubject_TolerantFloatComparison)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthFloatSubject")
