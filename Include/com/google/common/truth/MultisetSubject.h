//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/MultisetSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject")
#ifdef RESTRICT_ComGoogleCommonTruthMultisetSubject
#define INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthMultisetSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthMultisetSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject || defined(INCLUDE_ComGoogleCommonTruthMultisetSubject))
#define ComGoogleCommonTruthMultisetSubject_

#define RESTRICT_ComGoogleCommonTruthIterableSubject 1
#define INCLUDE_ComGoogleCommonTruthIterableSubject 1
#include "com/google/common/truth/IterableSubject.h"

@class ComGoogleCommonTruthFailureMetadata;
@class JavaLangInteger;
@protocol ComGoogleCommonCollectMultiset;
@protocol JavaLangIterable;

@interface ComGoogleCommonTruthMultisetSubject : ComGoogleCommonTruthIterableSubject

#pragma mark Public

- (void)hasCountWithId:(id)element
               withInt:(jint)expectedCount;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)metadata
                         withComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)multiset;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                       withJavaLangIterable:(id<JavaLangIterable>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthMultisetSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthMultisetSubject *self, ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultiset> multiset);

FOUNDATION_EXPORT ComGoogleCommonTruthMultisetSubject *new_ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultiset> multiset) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthMultisetSubject *create_ComGoogleCommonTruthMultisetSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectMultiset_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectMultiset> multiset);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthMultisetSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthMultisetSubject")
