//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/TableSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthTableSubject")
#ifdef RESTRICT_ComGoogleCommonTruthTableSubject
#define INCLUDE_ALL_ComGoogleCommonTruthTableSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthTableSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthTableSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthTableSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthTableSubject || defined(INCLUDE_ComGoogleCommonTruthTableSubject))
#define ComGoogleCommonTruthTableSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "com/google/common/truth/Subject.h"

@class ComGoogleCommonTruthFailureMetadata;
@class JavaLangInteger;
@protocol ComGoogleCommonCollectTable;
@protocol ComGoogleCommonCollectTable_Cell;

@interface ComGoogleCommonTruthTableSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (void)containsWithId:(id)rowKey
                withId:(id)columnKey;

- (void)containsCellWithComGoogleCommonCollectTable_Cell:(id<ComGoogleCommonCollectTable_Cell>)cell;

- (void)containsCellWithId:(id)rowKey
                    withId:(id)colKey
                    withId:(id)value;

- (void)containsColumnWithId:(id)columnKey;

- (void)containsRowWithId:(id)rowKey;

- (void)containsValueWithId:(id)value;

- (void)doesNotContainWithId:(id)rowKey
                      withId:(id)columnKey;

- (void)doesNotContainCellWithComGoogleCommonCollectTable_Cell:(id<ComGoogleCommonCollectTable_Cell>)cell;

- (void)doesNotContainCellWithId:(id)rowKey
                          withId:(id)colKey
                          withId:(id)value;

- (void)hasSizeWithInt:(jint)expectedSize;

- (void)isEmpty;

- (void)isNotEmpty;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)metadata
                            withComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)table;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                                     withId:(id)arg1 NS_UNAVAILABLE;

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                                     withId:(id)arg1
                                               withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTableSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectTable_(ComGoogleCommonTruthTableSubject *self, ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectTable> table);

FOUNDATION_EXPORT ComGoogleCommonTruthTableSubject *new_ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectTable_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectTable> table) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthTableSubject *create_ComGoogleCommonTruthTableSubject_initWithComGoogleCommonTruthFailureMetadata_withComGoogleCommonCollectTable_(ComGoogleCommonTruthFailureMetadata *metadata, id<ComGoogleCommonCollectTable> table);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTableSubject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthTableSubject")
