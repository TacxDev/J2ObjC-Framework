//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/Truth.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthTruth")
#ifdef RESTRICT_ComGoogleCommonTruthTruth
#define INCLUDE_ALL_ComGoogleCommonTruthTruth 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthTruth 1
#endif
#undef RESTRICT_ComGoogleCommonTruthTruth

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthTruth_) && (INCLUDE_ALL_ComGoogleCommonTruthTruth || defined(INCLUDE_ComGoogleCommonTruthTruth))
#define ComGoogleCommonTruthTruth_

@class ComGoogleCommonBaseOptional;
@class ComGoogleCommonTruthBigDecimalSubject;
@class ComGoogleCommonTruthBooleanSubject;
@class ComGoogleCommonTruthClassSubject;
@class ComGoogleCommonTruthComparableSubject;
@class ComGoogleCommonTruthCustomSubjectBuilder;
@class ComGoogleCommonTruthDoubleSubject;
@class ComGoogleCommonTruthFloatSubject;
@class ComGoogleCommonTruthGuavaOptionalSubject;
@class ComGoogleCommonTruthIntegerSubject;
@class ComGoogleCommonTruthIterableSubject;
@class ComGoogleCommonTruthLongSubject;
@class ComGoogleCommonTruthMapSubject;
@class ComGoogleCommonTruthMultimapSubject;
@class ComGoogleCommonTruthMultisetSubject;
@class ComGoogleCommonTruthObjectArraySubject;
@class ComGoogleCommonTruthPrimitiveBooleanArraySubject;
@class ComGoogleCommonTruthPrimitiveByteArraySubject;
@class ComGoogleCommonTruthPrimitiveCharArraySubject;
@class ComGoogleCommonTruthPrimitiveDoubleArraySubject;
@class ComGoogleCommonTruthPrimitiveFloatArraySubject;
@class ComGoogleCommonTruthPrimitiveIntArraySubject;
@class ComGoogleCommonTruthPrimitiveLongArraySubject;
@class ComGoogleCommonTruthPrimitiveShortArraySubject;
@class ComGoogleCommonTruthSimpleSubjectBuilder;
@class ComGoogleCommonTruthStandardSubjectBuilder;
@class ComGoogleCommonTruthStringSubject;
@class ComGoogleCommonTruthSubject;
@class ComGoogleCommonTruthTableSubject;
@class ComGoogleCommonTruthThrowableSubject;
@class IOSBooleanArray;
@class IOSByteArray;
@class IOSCharArray;
@class IOSClass;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSLongArray;
@class IOSObjectArray;
@class IOSShortArray;
@class JavaLangBoolean;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangThrowable;
@class JavaMathBigDecimal;
@protocol ComGoogleCommonCollectMultimap;
@protocol ComGoogleCommonCollectMultiset;
@protocol ComGoogleCommonCollectTable;
@protocol ComGoogleCommonTruthCustomSubjectBuilder_Factory;
@protocol ComGoogleCommonTruthSubject_Factory;
@protocol JavaLangComparable;
@protocol JavaLangIterable;
@protocol JavaUtilMap;

@interface ComGoogleCommonTruthTruth : NSObject

#pragma mark Public

+ (ComGoogleCommonTruthStandardSubjectBuilder *)assert_;

+ (ComGoogleCommonTruthSimpleSubjectBuilder *)assertAboutWithComGoogleCommonTruthSubject_Factory:(id<ComGoogleCommonTruthSubject_Factory>)factory;

+ (ComGoogleCommonTruthCustomSubjectBuilder *)assertAboutWithComGoogleCommonTruthCustomSubjectBuilder_Factory:(id<ComGoogleCommonTruthCustomSubjectBuilder_Factory>)factory;

+ (ComGoogleCommonTruthBigDecimalSubject *)assertThatWithJavaMathBigDecimal:(JavaMathBigDecimal *)actual;

+ (ComGoogleCommonTruthBooleanSubject *)assertThatWithJavaLangBoolean:(JavaLangBoolean *)actual;

+ (ComGoogleCommonTruthPrimitiveBooleanArraySubject *)assertThatWithBooleanArray:(IOSBooleanArray *)actual;

+ (ComGoogleCommonTruthPrimitiveByteArraySubject *)assertThatWithByteArray:(IOSByteArray *)actual;

+ (ComGoogleCommonTruthPrimitiveCharArraySubject *)assertThatWithCharArray:(IOSCharArray *)actual;

+ (ComGoogleCommonTruthClassSubject *)assertThatWithIOSClass:(IOSClass *)actual;

+ (ComGoogleCommonTruthDoubleSubject *)assertThatWithJavaLangDouble:(JavaLangDouble *)actual;

+ (ComGoogleCommonTruthPrimitiveDoubleArraySubject *)assertThatWithDoubleArray:(IOSDoubleArray *)actual;

+ (ComGoogleCommonTruthFloatSubject *)assertThatWithJavaLangFloat:(JavaLangFloat *)actual;

+ (ComGoogleCommonTruthPrimitiveFloatArraySubject *)assertThatWithFloatArray:(IOSFloatArray *)actual;

+ (ComGoogleCommonTruthPrimitiveIntArraySubject *)assertThatWithIntArray:(IOSIntArray *)actual;

+ (ComGoogleCommonTruthIntegerSubject *)assertThatWithJavaLangInteger:(JavaLangInteger *)actual;

+ (ComGoogleCommonTruthIterableSubject *)assertThatWithJavaLangIterable:(id<JavaLangIterable>)actual;

+ (ComGoogleCommonTruthLongSubject *)assertThatWithJavaLangLong:(JavaLangLong *)actual;

+ (ComGoogleCommonTruthPrimitiveLongArraySubject *)assertThatWithLongArray:(IOSLongArray *)actual;

+ (ComGoogleCommonTruthMapSubject *)assertThatWithJavaUtilMap:(id<JavaUtilMap>)actual;

+ (ComGoogleCommonTruthMultimapSubject *)assertThatWithComGoogleCommonCollectMultimap:(id<ComGoogleCommonCollectMultimap>)actual;

+ (ComGoogleCommonTruthMultisetSubject *)assertThatWithComGoogleCommonCollectMultiset:(id<ComGoogleCommonCollectMultiset>)actual;

+ (ComGoogleCommonTruthSubject *)assertThatWithId:(id)actual;

+ (ComGoogleCommonTruthGuavaOptionalSubject *)assertThatWithComGoogleCommonBaseOptional:(ComGoogleCommonBaseOptional *)actual;

+ (ComGoogleCommonTruthPrimitiveShortArraySubject *)assertThatWithShortArray:(IOSShortArray *)actual;

+ (ComGoogleCommonTruthStringSubject *)assertThatWithNSString:(NSString *)actual;

+ (ComGoogleCommonTruthComparableSubject *)assertThatWithJavaLangComparable:(id<JavaLangComparable>)actual;

+ (ComGoogleCommonTruthObjectArraySubject *)assertThatWithNSObjectArray:(IOSObjectArray *)actual;

+ (ComGoogleCommonTruthTableSubject *)assertThatWithComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)actual;

+ (ComGoogleCommonTruthThrowableSubject *)assertThatWithJavaLangThrowable:(JavaLangThrowable *)actual;

+ (ComGoogleCommonTruthStandardSubjectBuilder *)assertWithMessageWithNSString:(NSString *)messageToPrepend;

+ (ComGoogleCommonTruthStandardSubjectBuilder *)assertWithMessageWithNSString:(NSString *)format
                                                            withNSObjectArray:(IOSObjectArray *)args;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonTruthTruth)

FOUNDATION_EXPORT ComGoogleCommonTruthStandardSubjectBuilder *ComGoogleCommonTruthTruth_assert_(void);

FOUNDATION_EXPORT ComGoogleCommonTruthStandardSubjectBuilder *ComGoogleCommonTruthTruth_assertWithMessageWithNSString_(NSString *messageToPrepend);

FOUNDATION_EXPORT ComGoogleCommonTruthStandardSubjectBuilder *ComGoogleCommonTruthTruth_assertWithMessageWithNSString_withNSObjectArray_(NSString *format, IOSObjectArray *args);

FOUNDATION_EXPORT ComGoogleCommonTruthSimpleSubjectBuilder *ComGoogleCommonTruthTruth_assertAboutWithComGoogleCommonTruthSubject_Factory_(id<ComGoogleCommonTruthSubject_Factory> factory);

FOUNDATION_EXPORT ComGoogleCommonTruthCustomSubjectBuilder *ComGoogleCommonTruthTruth_assertAboutWithComGoogleCommonTruthCustomSubjectBuilder_Factory_(id<ComGoogleCommonTruthCustomSubjectBuilder_Factory> factory);

FOUNDATION_EXPORT ComGoogleCommonTruthComparableSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangComparable_(id<JavaLangComparable> actual);

FOUNDATION_EXPORT ComGoogleCommonTruthBigDecimalSubject *ComGoogleCommonTruthTruth_assertThatWithJavaMathBigDecimal_(JavaMathBigDecimal *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthSubject *ComGoogleCommonTruthTruth_assertThatWithId_(id actual);

FOUNDATION_EXPORT ComGoogleCommonTruthClassSubject *ComGoogleCommonTruthTruth_assertThatWithIOSClass_(IOSClass *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthThrowableSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangThrowable_(JavaLangThrowable *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthLongSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangLong_(JavaLangLong *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthDoubleSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangDouble_(JavaLangDouble *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthFloatSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangFloat_(JavaLangFloat *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthIntegerSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangInteger_(JavaLangInteger *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthBooleanSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangBoolean_(JavaLangBoolean *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthStringSubject *ComGoogleCommonTruthTruth_assertThatWithNSString_(NSString *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject *ComGoogleCommonTruthTruth_assertThatWithJavaLangIterable_(id<JavaLangIterable> actual);

FOUNDATION_EXPORT ComGoogleCommonTruthObjectArraySubject *ComGoogleCommonTruthTruth_assertThatWithNSObjectArray_(IOSObjectArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveBooleanArraySubject *ComGoogleCommonTruthTruth_assertThatWithBooleanArray_(IOSBooleanArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveShortArraySubject *ComGoogleCommonTruthTruth_assertThatWithShortArray_(IOSShortArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveIntArraySubject *ComGoogleCommonTruthTruth_assertThatWithIntArray_(IOSIntArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveLongArraySubject *ComGoogleCommonTruthTruth_assertThatWithLongArray_(IOSLongArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveByteArraySubject *ComGoogleCommonTruthTruth_assertThatWithByteArray_(IOSByteArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveCharArraySubject *ComGoogleCommonTruthTruth_assertThatWithCharArray_(IOSCharArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveFloatArraySubject *ComGoogleCommonTruthTruth_assertThatWithFloatArray_(IOSFloatArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthPrimitiveDoubleArraySubject *ComGoogleCommonTruthTruth_assertThatWithDoubleArray_(IOSDoubleArray *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthGuavaOptionalSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonBaseOptional_(ComGoogleCommonBaseOptional *actual);

FOUNDATION_EXPORT ComGoogleCommonTruthMapSubject *ComGoogleCommonTruthTruth_assertThatWithJavaUtilMap_(id<JavaUtilMap> actual);

FOUNDATION_EXPORT ComGoogleCommonTruthMultimapSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultimap_(id<ComGoogleCommonCollectMultimap> actual);

FOUNDATION_EXPORT ComGoogleCommonTruthMultisetSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectMultiset_(id<ComGoogleCommonCollectMultiset> actual);

FOUNDATION_EXPORT ComGoogleCommonTruthTableSubject *ComGoogleCommonTruthTruth_assertThatWithComGoogleCommonCollectTable_(id<ComGoogleCommonCollectTable> actual);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTruth)

#endif

#if !defined (ComGoogleCommonTruthTruth_SimpleAssertionError_) && (INCLUDE_ALL_ComGoogleCommonTruthTruth || defined(INCLUDE_ComGoogleCommonTruthTruth_SimpleAssertionError))
#define ComGoogleCommonTruthTruth_SimpleAssertionError_

#define RESTRICT_JavaLangAssertionError 1
#define INCLUDE_JavaLangAssertionError 1
#include "java/lang/AssertionError.h"

@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangThrowable;

@interface ComGoogleCommonTruthTruth_SimpleAssertionError : JavaLangAssertionError

#pragma mark Public

- (JavaLangThrowable *)getCause;

- (NSString *)description;

#pragma mark Package-Private

+ (ComGoogleCommonTruthTruth_SimpleAssertionError *)createWithNSString:(NSString *)message
                                                 withJavaLangThrowable:(JavaLangThrowable *)cause;

+ (ComGoogleCommonTruthTruth_SimpleAssertionError *)createWithNoStackWithNSString:(NSString *)message;

+ (ComGoogleCommonTruthTruth_SimpleAssertionError *)createWithNoStackWithNSString:(NSString *)message
                                                            withJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

- (instancetype)initWithChar:(jchar)arg0 NS_UNAVAILABLE;

- (instancetype)initWithDouble:(jdouble)arg0 NS_UNAVAILABLE;

- (instancetype)initWithFloat:(jfloat)arg0 NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initWithLong:(jlong)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthTruth_SimpleAssertionError)

FOUNDATION_EXPORT ComGoogleCommonTruthTruth_SimpleAssertionError *ComGoogleCommonTruthTruth_SimpleAssertionError_createWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComGoogleCommonTruthTruth_SimpleAssertionError *ComGoogleCommonTruthTruth_SimpleAssertionError_createWithNoStackWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComGoogleCommonTruthTruth_SimpleAssertionError *ComGoogleCommonTruthTruth_SimpleAssertionError_createWithNoStackWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthTruth_SimpleAssertionError)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthTruth")
