//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/Correspondence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthCorrespondence")
#ifdef RESTRICT_ComGoogleCommonTruthCorrespondence
#define INCLUDE_ALL_ComGoogleCommonTruthCorrespondence 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthCorrespondence 1
#endif
#undef RESTRICT_ComGoogleCommonTruthCorrespondence

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthCorrespondence || defined(INCLUDE_ComGoogleCommonTruthCorrespondence))
#define ComGoogleCommonTruthCorrespondence_

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonTruthCorrespondence_ExceptionStore;
@class JavaLangBoolean;
@class JavaLangDouble;
@class JavaLangInteger;
@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonTruthCorrespondence_BinaryPredicate;
@protocol ComGoogleCommonTruthCorrespondence_DiffFormatter;

@interface ComGoogleCommonTruthCorrespondence : NSObject

#pragma mark Public

- (jboolean)compareWithId:(id)actual
                   withId:(id)expected;

- (jboolean)isEqual:(id)o;

- (NSString *)formatDiffWithId:(id)actual
                        withId:(id)expected;

- (ComGoogleCommonTruthCorrespondence *)formattingDiffsUsingWithComGoogleCommonTruthCorrespondence_DiffFormatter:(id<ComGoogleCommonTruthCorrespondence_DiffFormatter>)formatter;

+ (ComGoogleCommonTruthCorrespondence *)fromWithComGoogleCommonTruthCorrespondence_BinaryPredicate:(id<ComGoogleCommonTruthCorrespondence_BinaryPredicate>)predicate
                                                                                      withNSString:(NSString *)description_;

- (NSUInteger)hash;

+ (ComGoogleCommonTruthCorrespondence *)toleranceWithDouble:(jdouble)tolerance;

- (NSString *)description;

+ (ComGoogleCommonTruthCorrespondence *)transformingWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)actualTransform
                                                    withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)expectedTransform
                                                                       withNSString:(NSString *)description_;

+ (ComGoogleCommonTruthCorrespondence *)transformingWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)actualTransform
                                                                       withNSString:(NSString *)description_;

#pragma mark Package-Private

- (instancetype)init;

- (ComGoogleCommonCollectImmutableList *)describeForIterable;

- (ComGoogleCommonCollectImmutableList *)describeForMapValues;

+ (ComGoogleCommonTruthCorrespondence *)equality;

- (jboolean)isEquality;

- (jboolean)safeCompareWithId:(id)actual
                       withId:(id)expected
withComGoogleCommonTruthCorrespondence_ExceptionStore:(ComGoogleCommonTruthCorrespondence_ExceptionStore *)exceptions;

- (NSString *)safeFormatDiffWithId:(id)actual
                            withId:(id)expected
withComGoogleCommonTruthCorrespondence_ExceptionStore:(ComGoogleCommonTruthCorrespondence_ExceptionStore *)exceptions;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthCorrespondence)

FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthCorrespondence_fromWithComGoogleCommonTruthCorrespondence_BinaryPredicate_withNSString_(id<ComGoogleCommonTruthCorrespondence_BinaryPredicate> predicate, NSString *description_);

FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthCorrespondence_transformingWithComGoogleCommonBaseFunction_withNSString_(id<ComGoogleCommonBaseFunction> actualTransform, NSString *description_);

FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthCorrespondence_transformingWithComGoogleCommonBaseFunction_withComGoogleCommonBaseFunction_withNSString_(id<ComGoogleCommonBaseFunction> actualTransform, id<ComGoogleCommonBaseFunction> expectedTransform, NSString *description_);

FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthCorrespondence_toleranceWithDouble_(jdouble tolerance);

FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence *ComGoogleCommonTruthCorrespondence_equality(void);

FOUNDATION_EXPORT void ComGoogleCommonTruthCorrespondence_init(ComGoogleCommonTruthCorrespondence *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthCorrespondence)

#endif

#if !defined (ComGoogleCommonTruthCorrespondence_BinaryPredicate_) && (INCLUDE_ALL_ComGoogleCommonTruthCorrespondence || defined(INCLUDE_ComGoogleCommonTruthCorrespondence_BinaryPredicate))
#define ComGoogleCommonTruthCorrespondence_BinaryPredicate_

@class JavaLangBoolean;

@protocol ComGoogleCommonTruthCorrespondence_BinaryPredicate < JavaObject >

- (jboolean)applyWithId:(id)actual
                 withId:(id)expected;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthCorrespondence_BinaryPredicate)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthCorrespondence_BinaryPredicate)

#endif

#if !defined (ComGoogleCommonTruthCorrespondence_DiffFormatter_) && (INCLUDE_ALL_ComGoogleCommonTruthCorrespondence || defined(INCLUDE_ComGoogleCommonTruthCorrespondence_DiffFormatter))
#define ComGoogleCommonTruthCorrespondence_DiffFormatter_

@protocol ComGoogleCommonTruthCorrespondence_DiffFormatter < JavaObject >

- (NSString *)formatDiffWithId:(id)actual
                        withId:(id)expected;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthCorrespondence_DiffFormatter)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthCorrespondence_DiffFormatter)

#endif

#if !defined (ComGoogleCommonTruthCorrespondence_ExceptionStore_) && (INCLUDE_ALL_ComGoogleCommonTruthCorrespondence || defined(INCLUDE_ComGoogleCommonTruthCorrespondence_ExceptionStore))
#define ComGoogleCommonTruthCorrespondence_ExceptionStore_

@class ComGoogleCommonCollectImmutableList;
@class IOSClass;
@class JavaLangBoolean;
@class JavaLangException;

@interface ComGoogleCommonTruthCorrespondence_ExceptionStore : NSObject

#pragma mark Package-Private

- (void)addActualKeyFunctionExceptionWithIOSClass:(IOSClass *)callingClass
                            withJavaLangException:(JavaLangException *)exception
                                           withId:(id)actual;

- (void)addCompareExceptionWithIOSClass:(IOSClass *)callingClass
                  withJavaLangException:(JavaLangException *)exception
                                 withId:(id)actual
                                 withId:(id)expected;

- (void)addExpectedKeyFunctionExceptionWithIOSClass:(IOSClass *)callingClass
                              withJavaLangException:(JavaLangException *)exception
                                             withId:(id)expected;

- (void)addFormatDiffExceptionWithIOSClass:(IOSClass *)callingClass
                     withJavaLangException:(JavaLangException *)exception
                                    withId:(id)actual
                                    withId:(id)expected;

- (ComGoogleCommonCollectImmutableList *)describeAsAdditionalInfo;

- (ComGoogleCommonCollectImmutableList *)describeAsMainCause;

+ (ComGoogleCommonTruthCorrespondence_ExceptionStore *)forIterable;

+ (ComGoogleCommonTruthCorrespondence_ExceptionStore *)forMapValues;

- (jboolean)hasCompareException;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthCorrespondence_ExceptionStore)

FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence_ExceptionStore *ComGoogleCommonTruthCorrespondence_ExceptionStore_forIterable(void);

FOUNDATION_EXPORT ComGoogleCommonTruthCorrespondence_ExceptionStore *ComGoogleCommonTruthCorrespondence_ExceptionStore_forMapValues(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthCorrespondence_ExceptionStore)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthCorrespondence")
