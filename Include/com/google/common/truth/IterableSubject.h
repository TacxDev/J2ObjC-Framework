//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/truth/build_result/java/com/google/common/truth/IterableSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonTruthIterableSubject")
#ifdef RESTRICT_ComGoogleCommonTruthIterableSubject
#define INCLUDE_ALL_ComGoogleCommonTruthIterableSubject 0
#else
#define INCLUDE_ALL_ComGoogleCommonTruthIterableSubject 1
#endif
#undef RESTRICT_ComGoogleCommonTruthIterableSubject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonTruthIterableSubject_) && (INCLUDE_ALL_ComGoogleCommonTruthIterableSubject || defined(INCLUDE_ComGoogleCommonTruthIterableSubject))
#define ComGoogleCommonTruthIterableSubject_

#define RESTRICT_ComGoogleCommonTruthSubject 1
#define INCLUDE_ComGoogleCommonTruthSubject 1
#include "com/google/common/truth/Subject.h"

@class ComGoogleCommonTruthCorrespondence;
@class ComGoogleCommonTruthFailureMetadata;
@class ComGoogleCommonTruthIterableSubject_UsingCorrespondence;
@class IOSObjectArray;
@class JavaLangInteger;
@protocol ComGoogleCommonTruthCorrespondence_DiffFormatter;
@protocol ComGoogleCommonTruthOrdered;
@protocol JavaLangIterable;
@protocol JavaUtilComparator;

@interface ComGoogleCommonTruthIterableSubject : ComGoogleCommonTruthSubject

#pragma mark Public

- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)comparingElementsUsingWithComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;

- (void)containsWithId:(id)element;

- (void)containsAnyInWithJavaLangIterable:(id<JavaLangIterable>)expected;

- (void)containsAnyInWithNSObjectArray:(IOSObjectArray *)expected;

- (void)containsAnyOfWithId:(id)first
                     withId:(id)second
          withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastWithId:(id)firstExpected
                                                  withId:(id)secondExpected
                                       withNSObjectArray:(IOSObjectArray *)restOfExpected;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastElementsInWithJavaLangIterable:(id<JavaLangIterable>)expectedIterable;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastElementsInWithNSObjectArray:(IOSObjectArray *)expected;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSObjectArray:(IOSObjectArray *)varargs;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithNSObjectArray:(IOSObjectArray *)expected;

- (void)containsNoDuplicates;

- (void)containsNoneInWithJavaLangIterable:(id<JavaLangIterable>)excluded;

- (void)containsNoneInWithNSObjectArray:(IOSObjectArray *)excluded;

- (void)containsNoneOfWithId:(id)firstExcluded
                      withId:(id)secondExcluded
           withNSObjectArray:(IOSObjectArray *)restOfExcluded;

- (void)doesNotContainWithId:(id)element;

- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)formattingDiffsUsingWithComGoogleCommonTruthCorrespondence_DiffFormatter:(id<ComGoogleCommonTruthCorrespondence_DiffFormatter>)formatter;

- (void)hasSizeWithInt:(jint)expectedSize;

- (void)isEmpty;

- (void)isEqualToWithId:(id)expected;

- (void)isInOrder;

- (void)isInOrderWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (void)isInStrictOrder;

- (void)isInStrictOrderWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (void)isNoneOfWithId:(id)first
                withId:(id)second
     withNSObjectArray:(IOSObjectArray *)rest;

- (void)isNotEmpty;

- (void)isNotInWithJavaLangIterable:(id<JavaLangIterable>)iterable;

#pragma mark Protected

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)metadata
                                       withJavaLangIterable:(id<JavaLangIterable>)iterable;

- (NSString *)actualCustomStringRepresentation;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                                     withId:(id)arg1 NS_UNAVAILABLE;

- (instancetype)initWithComGoogleCommonTruthFailureMetadata:(ComGoogleCommonTruthFailureMetadata *)arg0
                                                     withId:(id)arg1
                                               withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonTruthIterableSubject)

FOUNDATION_EXPORT void ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangIterable_(ComGoogleCommonTruthIterableSubject *self, ComGoogleCommonTruthFailureMetadata *metadata, id<JavaLangIterable> iterable);

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject *new_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangIterable_(ComGoogleCommonTruthFailureMetadata *metadata, id<JavaLangIterable> iterable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject *create_ComGoogleCommonTruthIterableSubject_initWithComGoogleCommonTruthFailureMetadata_withJavaLangIterable_(ComGoogleCommonTruthFailureMetadata *metadata, id<JavaLangIterable> iterable);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIterableSubject)

#endif

#if !defined (ComGoogleCommonTruthIterableSubject_ElementFactGrouping_) && (INCLUDE_ALL_ComGoogleCommonTruthIterableSubject || defined(INCLUDE_ComGoogleCommonTruthIterableSubject_ElementFactGrouping))
#define ComGoogleCommonTruthIterableSubject_ElementFactGrouping_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(jint, ComGoogleCommonTruthIterableSubject_ElementFactGrouping_Enum) {
  ComGoogleCommonTruthIterableSubject_ElementFactGrouping_Enum_ALL_IN_ONE_FACT = 0,
  ComGoogleCommonTruthIterableSubject_ElementFactGrouping_Enum_FACT_PER_ELEMENT = 1,
};
#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define ComGoogleCommonTruthIterableSubject_ElementFactGrouping_ORDINAL jint
#else
#define ComGoogleCommonTruthIterableSubject_ElementFactGrouping_ORDINAL ComGoogleCommonTruthIterableSubject_ElementFactGrouping_Enum
#endif


@interface ComGoogleCommonTruthIterableSubject_ElementFactGrouping : JavaLangEnum

#pragma mark Public

+ (ComGoogleCommonTruthIterableSubject_ElementFactGrouping *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComGoogleCommonTruthIterableSubject_ElementFactGrouping_Enum)toNSEnum;

- (ComGoogleCommonTruthIterableSubject_ElementFactGrouping_ORDINAL)ordinal;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonTruthIterableSubject_ElementFactGrouping)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject_ElementFactGrouping *ComGoogleCommonTruthIterableSubject_ElementFactGrouping_values_[];

inline ComGoogleCommonTruthIterableSubject_ElementFactGrouping *ComGoogleCommonTruthIterableSubject_ElementFactGrouping_get_ALL_IN_ONE_FACT(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonTruthIterableSubject_ElementFactGrouping, ALL_IN_ONE_FACT)

inline ComGoogleCommonTruthIterableSubject_ElementFactGrouping *ComGoogleCommonTruthIterableSubject_ElementFactGrouping_get_FACT_PER_ELEMENT(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonTruthIterableSubject_ElementFactGrouping, FACT_PER_ELEMENT)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonTruthIterableSubject_ElementFactGrouping_values(void);

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject_ElementFactGrouping *ComGoogleCommonTruthIterableSubject_ElementFactGrouping_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject_ElementFactGrouping *ComGoogleCommonTruthIterableSubject_ElementFactGrouping_fromOrdinal(ComGoogleCommonTruthIterableSubject_ElementFactGrouping_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIterableSubject_ElementFactGrouping)

#endif

#if !defined (ComGoogleCommonTruthIterableSubject_UsingCorrespondence_) && (INCLUDE_ALL_ComGoogleCommonTruthIterableSubject || defined(INCLUDE_ComGoogleCommonTruthIterableSubject_UsingCorrespondence))
#define ComGoogleCommonTruthIterableSubject_UsingCorrespondence_

@class ComGoogleCommonTruthCorrespondence;
@class ComGoogleCommonTruthIterableSubject;
@class ComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer;
@class IOSObjectArray;
@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonTruthOrdered;
@protocol JavaLangIterable;

@interface ComGoogleCommonTruthIterableSubject_UsingCorrespondence : NSObject

#pragma mark Public

- (void)containsWithId:(id)expected;

- (void)containsAnyInWithNSObjectArray:(IOSObjectArray *)expected;

- (void)containsAnyInWithJavaLangIterable:(id<JavaLangIterable>)expected;

- (void)containsAnyOfWithId:(id)first
                     withId:(id)second
          withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastWithId:(id)first
                                                  withId:(id)second
                                       withNSObjectArray:(IOSObjectArray *)rest;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastElementsInWithNSObjectArray:(IOSObjectArray *)expected;

- (id<ComGoogleCommonTruthOrdered>)containsAtLeastElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyWithNSObjectArray:(IOSObjectArray *)expected;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithNSObjectArray:(IOSObjectArray *)expected;

- (id<ComGoogleCommonTruthOrdered>)containsExactlyElementsInWithJavaLangIterable:(id<JavaLangIterable>)expected;

- (void)containsNoneInWithNSObjectArray:(IOSObjectArray *)excluded;

- (void)containsNoneInWithJavaLangIterable:(id<JavaLangIterable>)excluded;

- (void)containsNoneOfWithId:(id)firstExcluded
                      withId:(id)secondExcluded
           withNSObjectArray:(IOSObjectArray *)restOfExcluded;

- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)displayingDiffsPairedByWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)keyFunction;

- (ComGoogleCommonTruthIterableSubject_UsingCorrespondence *)displayingDiffsPairedByWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)actualKeyFunction
                                                                                    withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)expectedKeyFunction;

- (void)doesNotContainWithId:(id)excluded;

#pragma mark Package-Private

- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)subject
                     withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence;

- (instancetype)initWithComGoogleCommonTruthIterableSubject:(ComGoogleCommonTruthIterableSubject *)subject
                     withComGoogleCommonTruthCorrespondence:(ComGoogleCommonTruthCorrespondence *)correspondence
withComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer:(ComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer *)pairer;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonTruthIterableSubject_UsingCorrespondence)

FOUNDATION_EXPORT void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, ComGoogleCommonTruthIterableSubject *subject, ComGoogleCommonTruthCorrespondence *correspondence);

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject_UsingCorrespondence *new_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject *subject, ComGoogleCommonTruthCorrespondence *correspondence) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject_UsingCorrespondence *create_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_(ComGoogleCommonTruthIterableSubject *subject, ComGoogleCommonTruthCorrespondence *correspondence);

FOUNDATION_EXPORT void ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_withComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer_(ComGoogleCommonTruthIterableSubject_UsingCorrespondence *self, ComGoogleCommonTruthIterableSubject *subject, ComGoogleCommonTruthCorrespondence *correspondence, ComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer *pairer);

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject_UsingCorrespondence *new_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_withComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer_(ComGoogleCommonTruthIterableSubject *subject, ComGoogleCommonTruthCorrespondence *correspondence, ComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer *pairer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonTruthIterableSubject_UsingCorrespondence *create_ComGoogleCommonTruthIterableSubject_UsingCorrespondence_initWithComGoogleCommonTruthIterableSubject_withComGoogleCommonTruthCorrespondence_withComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer_(ComGoogleCommonTruthIterableSubject *subject, ComGoogleCommonTruthCorrespondence *correspondence, ComGoogleCommonTruthIterableSubject_UsingCorrespondence_Pairer *pairer);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonTruthIterableSubject_UsingCorrespondence)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonTruthIterableSubject")
