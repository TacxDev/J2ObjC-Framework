//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/hamcrest/Condition.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgHamcrestCondition")
#ifdef RESTRICT_OrgHamcrestCondition
#define INCLUDE_ALL_OrgHamcrestCondition 0
#else
#define INCLUDE_ALL_OrgHamcrestCondition 1
#endif
#undef RESTRICT_OrgHamcrestCondition
#ifdef INCLUDE_OrgHamcrestCondition_NotMatched
#define INCLUDE_OrgHamcrestCondition 1
#endif

#if !defined (OrgHamcrestCondition_) && (INCLUDE_ALL_OrgHamcrestCondition || defined(INCLUDE_OrgHamcrestCondition))
#define OrgHamcrestCondition_

@class JavaLangBoolean;
@class OrgHamcrestCondition_NotMatched;
@protocol OrgHamcrestCondition_Step;
@protocol OrgHamcrestDescription;
@protocol OrgHamcrestMatcher;

@interface OrgHamcrestCondition : NSObject

#pragma mark Public

- (OrgHamcrestCondition *)and__WithOrgHamcrestCondition_Step:(id<OrgHamcrestCondition_Step>)mapping;

+ (OrgHamcrestCondition *)matchedWithId:(id)theValue
             withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatch;

- (jboolean)matchingWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)match;

- (jboolean)matchingWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)match
                              withNSString:(NSString *)message;

+ (OrgHamcrestCondition *)notMatched;

- (OrgHamcrestCondition *)thenWithOrgHamcrestCondition_Step:(id<OrgHamcrestCondition_Step>)mapping;

@end

J2OBJC_STATIC_INIT(OrgHamcrestCondition)

inline OrgHamcrestCondition_NotMatched *OrgHamcrestCondition_get_NOT_MATCHED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgHamcrestCondition_NotMatched *OrgHamcrestCondition_NOT_MATCHED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgHamcrestCondition, NOT_MATCHED, OrgHamcrestCondition_NotMatched *)

FOUNDATION_EXPORT OrgHamcrestCondition *OrgHamcrestCondition_notMatched(void);

FOUNDATION_EXPORT OrgHamcrestCondition *OrgHamcrestCondition_matchedWithId_withOrgHamcrestDescription_(id theValue, id<OrgHamcrestDescription> mismatch);

J2OBJC_TYPE_LITERAL_HEADER(OrgHamcrestCondition)

#endif

#if !defined (OrgHamcrestCondition_Step_) && (INCLUDE_ALL_OrgHamcrestCondition || defined(INCLUDE_OrgHamcrestCondition_Step))
#define OrgHamcrestCondition_Step_

@class OrgHamcrestCondition;
@protocol OrgHamcrestDescription;

@protocol OrgHamcrestCondition_Step < JavaObject >

- (OrgHamcrestCondition *)applyWithId:(id)value
           withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatch;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgHamcrestCondition_Step)

J2OBJC_TYPE_LITERAL_HEADER(OrgHamcrestCondition_Step)

#endif

#if !defined (OrgHamcrestCondition_NotMatched_) && (INCLUDE_ALL_OrgHamcrestCondition || defined(INCLUDE_OrgHamcrestCondition_NotMatched))
#define OrgHamcrestCondition_NotMatched_

@class JavaLangBoolean;
@class OrgHamcrestCondition;
@protocol OrgHamcrestCondition_Step;
@protocol OrgHamcrestMatcher;

@interface OrgHamcrestCondition_NotMatched : OrgHamcrestCondition

#pragma mark Public

- (OrgHamcrestCondition *)and__WithOrgHamcrestCondition_Step:(id<OrgHamcrestCondition_Step>)mapping;

- (jboolean)matchingWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)match
                              withNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgHamcrestCondition_NotMatched)

J2OBJC_TYPE_LITERAL_HEADER(OrgHamcrestCondition_NotMatched)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgHamcrestCondition")
