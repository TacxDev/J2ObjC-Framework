//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/hamcrest/core/IsCollectionContaining.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgHamcrestCoreIsCollectionContaining")
#ifdef RESTRICT_OrgHamcrestCoreIsCollectionContaining
#define INCLUDE_ALL_OrgHamcrestCoreIsCollectionContaining 0
#else
#define INCLUDE_ALL_OrgHamcrestCoreIsCollectionContaining 1
#endif
#undef RESTRICT_OrgHamcrestCoreIsCollectionContaining

#if !defined (OrgHamcrestCoreIsCollectionContaining_) && (INCLUDE_ALL_OrgHamcrestCoreIsCollectionContaining || defined(INCLUDE_OrgHamcrestCoreIsCollectionContaining))
#define OrgHamcrestCoreIsCollectionContaining_

#define RESTRICT_OrgHamcrestTypeSafeDiagnosingMatcher 1
#define INCLUDE_OrgHamcrestTypeSafeDiagnosingMatcher 1
#include "org/hamcrest/TypeSafeDiagnosingMatcher.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangBoolean;
@class OrgHamcrestInternalReflectiveTypeFinder;
@protocol JavaLangIterable;
@protocol OrgHamcrestDescription;
@protocol OrgHamcrestMatcher;

@interface OrgHamcrestCoreIsCollectionContaining : OrgHamcrestTypeSafeDiagnosingMatcher

#pragma mark Public

- (instancetype)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)elementMatcher;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

+ (id<OrgHamcrestMatcher>)hasItemWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)itemMatcher;

+ (id<OrgHamcrestMatcher>)hasItemWithId:(id)item;

+ (id<OrgHamcrestMatcher>)hasItemsWithOrgHamcrestMatcherArray:(IOSObjectArray *)itemMatchers;

+ (id<OrgHamcrestMatcher>)hasItemsWithNSObjectArray:(IOSObjectArray *)items;

#pragma mark Protected

- (jboolean)matchesSafelyWithId:(id<JavaLangIterable>)collection
     withOrgHamcrestDescription:(id<OrgHamcrestDescription>)mismatchDescription;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithOrgHamcrestInternalReflectiveTypeFinder:(OrgHamcrestInternalReflectiveTypeFinder *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgHamcrestCoreIsCollectionContaining)

FOUNDATION_EXPORT void OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(OrgHamcrestCoreIsCollectionContaining *self, id<OrgHamcrestMatcher> elementMatcher);

FOUNDATION_EXPORT OrgHamcrestCoreIsCollectionContaining *new_OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> elementMatcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgHamcrestCoreIsCollectionContaining *create_OrgHamcrestCoreIsCollectionContaining_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> elementMatcher);

FOUNDATION_EXPORT id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> itemMatcher);

FOUNDATION_EXPORT id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemWithId_(id item);

FOUNDATION_EXPORT id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemsWithOrgHamcrestMatcherArray_(IOSObjectArray *itemMatchers);

FOUNDATION_EXPORT id<OrgHamcrestMatcher> OrgHamcrestCoreIsCollectionContaining_hasItemsWithNSObjectArray_(IOSObjectArray *items);

J2OBJC_TYPE_LITERAL_HEADER(OrgHamcrestCoreIsCollectionContaining)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgHamcrestCoreIsCollectionContaining")
