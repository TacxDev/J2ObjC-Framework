//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/templates/WhiteSpaceInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTemplatesWhiteSpaceInfo")
#ifdef RESTRICT_OrgApacheXalanTemplatesWhiteSpaceInfo
#define INCLUDE_ALL_OrgApacheXalanTemplatesWhiteSpaceInfo 0
#else
#define INCLUDE_ALL_OrgApacheXalanTemplatesWhiteSpaceInfo 1
#endif
#undef RESTRICT_OrgApacheXalanTemplatesWhiteSpaceInfo

#if !defined (OrgApacheXalanTemplatesWhiteSpaceInfo_) && (INCLUDE_ALL_OrgApacheXalanTemplatesWhiteSpaceInfo || defined(INCLUDE_OrgApacheXalanTemplatesWhiteSpaceInfo))
#define OrgApacheXalanTemplatesWhiteSpaceInfo_

#define RESTRICT_OrgApacheXalanTemplatesElemTemplate 1
#define INCLUDE_OrgApacheXalanTemplatesElemTemplate 1
#include "org/apache/xalan/templates/ElemTemplate.h"

@class JavaLangBoolean;
@class JavaLangLong;
@class OrgApacheXalanTemplatesStylesheet;
@class OrgApacheXalanTemplatesStylesheetRoot;
@class OrgApacheXpathXPath;

@interface OrgApacheXalanTemplatesWhiteSpaceInfo : OrgApacheXalanTemplatesElemTemplate

#pragma mark Public

- (instancetype)initWithOrgApacheXalanTemplatesStylesheet:(OrgApacheXalanTemplatesStylesheet *)thisSheet;

- (instancetype)initWithOrgApacheXpathXPath:(OrgApacheXpathXPath *)matchPattern
                                withBoolean:(jboolean)shouldStripSpace
      withOrgApacheXalanTemplatesStylesheet:(OrgApacheXalanTemplatesStylesheet *)thisSheet;

- (jboolean)getShouldStripSpace;

- (void)recomposeWithOrgApacheXalanTemplatesStylesheetRoot:(OrgApacheXalanTemplatesStylesheetRoot *)root;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTemplatesWhiteSpaceInfo)

inline jlong OrgApacheXalanTemplatesWhiteSpaceInfo_get_serialVersionUID(void);
#define OrgApacheXalanTemplatesWhiteSpaceInfo_serialVersionUID 6389208261999943836LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXalanTemplatesWhiteSpaceInfo, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXalanTemplatesWhiteSpaceInfo_initWithOrgApacheXalanTemplatesStylesheet_(OrgApacheXalanTemplatesWhiteSpaceInfo *self, OrgApacheXalanTemplatesStylesheet *thisSheet);

FOUNDATION_EXPORT OrgApacheXalanTemplatesWhiteSpaceInfo *new_OrgApacheXalanTemplatesWhiteSpaceInfo_initWithOrgApacheXalanTemplatesStylesheet_(OrgApacheXalanTemplatesStylesheet *thisSheet) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTemplatesWhiteSpaceInfo *create_OrgApacheXalanTemplatesWhiteSpaceInfo_initWithOrgApacheXalanTemplatesStylesheet_(OrgApacheXalanTemplatesStylesheet *thisSheet);

FOUNDATION_EXPORT void OrgApacheXalanTemplatesWhiteSpaceInfo_initWithOrgApacheXpathXPath_withBoolean_withOrgApacheXalanTemplatesStylesheet_(OrgApacheXalanTemplatesWhiteSpaceInfo *self, OrgApacheXpathXPath *matchPattern, jboolean shouldStripSpace, OrgApacheXalanTemplatesStylesheet *thisSheet);

FOUNDATION_EXPORT OrgApacheXalanTemplatesWhiteSpaceInfo *new_OrgApacheXalanTemplatesWhiteSpaceInfo_initWithOrgApacheXpathXPath_withBoolean_withOrgApacheXalanTemplatesStylesheet_(OrgApacheXpathXPath *matchPattern, jboolean shouldStripSpace, OrgApacheXalanTemplatesStylesheet *thisSheet) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTemplatesWhiteSpaceInfo *create_OrgApacheXalanTemplatesWhiteSpaceInfo_initWithOrgApacheXpathXPath_withBoolean_withOrgApacheXalanTemplatesStylesheet_(OrgApacheXpathXPath *matchPattern, jboolean shouldStripSpace, OrgApacheXalanTemplatesStylesheet *thisSheet);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTemplatesWhiteSpaceInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTemplatesWhiteSpaceInfo")
