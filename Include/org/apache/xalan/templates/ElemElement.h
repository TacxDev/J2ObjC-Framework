//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/templates/ElemElement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemElement")
#ifdef RESTRICT_OrgApacheXalanTemplatesElemElement
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemElement 0
#else
#define INCLUDE_ALL_OrgApacheXalanTemplatesElemElement 1
#endif
#undef RESTRICT_OrgApacheXalanTemplatesElemElement

#if !defined (OrgApacheXalanTemplatesElemElement_) && (INCLUDE_ALL_OrgApacheXalanTemplatesElemElement || defined(INCLUDE_OrgApacheXalanTemplatesElemElement))
#define OrgApacheXalanTemplatesElemElement_

#define RESTRICT_OrgApacheXalanTemplatesElemUse 1
#define INCLUDE_OrgApacheXalanTemplatesElemUse 1
#include "org/apache/xalan/templates/ElemUse.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class OrgApacheXalanTemplatesAVT;
@class OrgApacheXalanTemplatesStylesheetRoot;
@class OrgApacheXalanTemplatesXSLTVisitor;
@class OrgApacheXalanTransformerTransformerImpl;
@protocol OrgApacheXmlSerializerSerializationHandler;

@interface OrgApacheXalanTemplatesElemElement : OrgApacheXalanTemplatesElemUse {
 @public
  OrgApacheXalanTemplatesAVT *m_name_avt_;
  OrgApacheXalanTemplatesAVT *m_namespace_avt_;
}

#pragma mark Public

- (instancetype)init;

- (void)composeWithOrgApacheXalanTemplatesStylesheetRoot:(OrgApacheXalanTemplatesStylesheetRoot *)sroot;

- (void)executeWithOrgApacheXalanTransformerTransformerImpl:(OrgApacheXalanTransformerTransformerImpl *)transformer;

- (OrgApacheXalanTemplatesAVT *)getName;

- (OrgApacheXalanTemplatesAVT *)getNamespace;

- (NSString *)getNodeName;

- (jint)getXSLToken;

- (void)setNameWithOrgApacheXalanTemplatesAVT:(OrgApacheXalanTemplatesAVT *)v;

- (void)setNamespaceWithOrgApacheXalanTemplatesAVT:(OrgApacheXalanTemplatesAVT *)v;

#pragma mark Protected

- (void)callChildVisitorsWithOrgApacheXalanTemplatesXSLTVisitor:(OrgApacheXalanTemplatesXSLTVisitor *)visitor
                                                    withBoolean:(jboolean)callAttrs;

- (NSString *)resolvePrefixWithOrgApacheXmlSerializerSerializationHandler:(id<OrgApacheXmlSerializerSerializationHandler>)rhandler
                                                             withNSString:(NSString *)prefix
                                                             withNSString:(NSString *)nodeNamespace;

#pragma mark Package-Private

- (void)constructNodeWithNSString:(NSString *)nodeName
                     withNSString:(NSString *)prefix
                     withNSString:(NSString *)nodeNamespace
withOrgApacheXalanTransformerTransformerImpl:(OrgApacheXalanTransformerTransformerImpl *)transformer;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTemplatesElemElement)

J2OBJC_FIELD_SETTER(OrgApacheXalanTemplatesElemElement, m_name_avt_, OrgApacheXalanTemplatesAVT *)
J2OBJC_FIELD_SETTER(OrgApacheXalanTemplatesElemElement, m_namespace_avt_, OrgApacheXalanTemplatesAVT *)

inline jlong OrgApacheXalanTemplatesElemElement_get_serialVersionUID(void);
#define OrgApacheXalanTemplatesElemElement_serialVersionUID -324619535592435183LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXalanTemplatesElemElement, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXalanTemplatesElemElement_init(OrgApacheXalanTemplatesElemElement *self);

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemElement *new_OrgApacheXalanTemplatesElemElement_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTemplatesElemElement *create_OrgApacheXalanTemplatesElemElement_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTemplatesElemElement)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTemplatesElemElement")
