//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/transformer/TransformerIdentityImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanTransformerTransformerIdentityImpl")
#ifdef RESTRICT_OrgApacheXalanTransformerTransformerIdentityImpl
#define INCLUDE_ALL_OrgApacheXalanTransformerTransformerIdentityImpl 0
#else
#define INCLUDE_ALL_OrgApacheXalanTransformerTransformerIdentityImpl 1
#endif
#undef RESTRICT_OrgApacheXalanTransformerTransformerIdentityImpl

#if !defined (OrgApacheXalanTransformerTransformerIdentityImpl_) && (INCLUDE_ALL_OrgApacheXalanTransformerTransformerIdentityImpl || defined(INCLUDE_OrgApacheXalanTransformerTransformerIdentityImpl))
#define OrgApacheXalanTransformerTransformerIdentityImpl_

#define RESTRICT_JavaxXmlTransformTransformer 1
#define INCLUDE_JavaxXmlTransformTransformer 1
#include "javax/xml/transform/Transformer.h"

#define RESTRICT_JavaxXmlTransformSaxTransformerHandler 1
#define INCLUDE_JavaxXmlTransformSaxTransformerHandler 1
#include "javax/xml/transform/sax/TransformerHandler.h"

#define RESTRICT_OrgXmlSaxExtDeclHandler 1
#define INCLUDE_OrgXmlSaxExtDeclHandler 1
#include "org/xml/sax/ext/DeclHandler.h"

@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaUtilProperties;
@protocol JavaxXmlTransformErrorListener;
@protocol JavaxXmlTransformResult;
@protocol JavaxXmlTransformSource;
@protocol JavaxXmlTransformURIResolver;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxLocator;

@interface OrgApacheXalanTransformerTransformerIdentityImpl : JavaxXmlTransformTransformer < JavaxXmlTransformSaxTransformerHandler, OrgXmlSaxExtDeclHandler > {
 @public
  jboolean m_flushedStartDoc_;
  id<JavaxXmlTransformURIResolver> m_URIResolver_;
  jboolean m_foundFirstElement_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)isSecureProcessing;

- (void)attributeDeclWithNSString:(NSString *)eName
                     withNSString:(NSString *)aName
                     withNSString:(NSString *)type
                     withNSString:(NSString *)valueDefault
                     withNSString:(NSString *)value;

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length;

- (void)clearParameters;

- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length;

- (void)elementDeclWithNSString:(NSString *)name
                   withNSString:(NSString *)model;

- (void)endCDATA;

- (void)endDocument;

- (void)endDTD;

- (void)endElementWithNSString:(NSString *)uri
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName;

- (void)endEntityWithNSString:(NSString *)name;

- (void)endPrefixMappingWithNSString:(NSString *)prefix;

- (void)externalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)publicId
                          withNSString:(NSString *)systemId;

- (id<JavaxXmlTransformErrorListener>)getErrorListener;

- (JavaUtilProperties *)getOutputProperties;

- (NSString *)getOutputPropertyWithNSString:(NSString *)name;

- (id)getParameterWithNSString:(NSString *)name;

- (NSString *)getSystemId;

- (JavaxXmlTransformTransformer *)getTransformer;

- (id<JavaxXmlTransformURIResolver>)getURIResolver;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length;

- (void)internalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)value;

- (void)notationDeclWithNSString:(NSString *)name
                    withNSString:(NSString *)publicId
                    withNSString:(NSString *)systemId;

- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data;

- (void)reset;

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator;

- (void)setErrorListenerWithJavaxXmlTransformErrorListener:(id<JavaxXmlTransformErrorListener>)listener;

- (void)setOutputPropertiesWithJavaUtilProperties:(JavaUtilProperties *)oformat;

- (void)setOutputPropertyWithNSString:(NSString *)name
                         withNSString:(NSString *)value;

- (void)setParameterWithNSString:(NSString *)name
                          withId:(id)value;

- (void)setResultWithJavaxXmlTransformResult:(id<JavaxXmlTransformResult>)result;

- (void)setSystemIdWithNSString:(NSString *)systemID;

- (void)setURIResolverWithJavaxXmlTransformURIResolver:(id<JavaxXmlTransformURIResolver>)resolver;

- (void)skippedEntityWithNSString:(NSString *)name;

- (void)startCDATA;

- (void)startDocument;

- (void)startDTDWithNSString:(NSString *)name
                withNSString:(NSString *)publicId
                withNSString:(NSString *)systemId;

- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)attributes;

- (void)startEntityWithNSString:(NSString *)name;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

- (void)transformWithJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source
                 withJavaxXmlTransformResult:(id<JavaxXmlTransformResult>)outputTarget;

- (void)unparsedEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)publicId
                          withNSString:(NSString *)systemId
                          withNSString:(NSString *)notationName;

#pragma mark Protected

- (void)flushStartDoc;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanTransformerTransformerIdentityImpl)

J2OBJC_FIELD_SETTER(OrgApacheXalanTransformerTransformerIdentityImpl, m_URIResolver_, id<JavaxXmlTransformURIResolver>)

FOUNDATION_EXPORT void OrgApacheXalanTransformerTransformerIdentityImpl_initWithBoolean_(OrgApacheXalanTransformerTransformerIdentityImpl *self, jboolean isSecureProcessing);

FOUNDATION_EXPORT OrgApacheXalanTransformerTransformerIdentityImpl *new_OrgApacheXalanTransformerTransformerIdentityImpl_initWithBoolean_(jboolean isSecureProcessing) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTransformerTransformerIdentityImpl *create_OrgApacheXalanTransformerTransformerIdentityImpl_initWithBoolean_(jboolean isSecureProcessing);

FOUNDATION_EXPORT void OrgApacheXalanTransformerTransformerIdentityImpl_init(OrgApacheXalanTransformerTransformerIdentityImpl *self);

FOUNDATION_EXPORT OrgApacheXalanTransformerTransformerIdentityImpl *new_OrgApacheXalanTransformerTransformerIdentityImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanTransformerTransformerIdentityImpl *create_OrgApacheXalanTransformerTransformerIdentityImpl_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanTransformerTransformerIdentityImpl)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanTransformerTransformerIdentityImpl")
