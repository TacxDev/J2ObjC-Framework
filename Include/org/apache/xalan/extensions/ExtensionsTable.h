//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/extensions/ExtensionsTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanExtensionsExtensionsTable")
#ifdef RESTRICT_OrgApacheXalanExtensionsExtensionsTable
#define INCLUDE_ALL_OrgApacheXalanExtensionsExtensionsTable 0
#else
#define INCLUDE_ALL_OrgApacheXalanExtensionsExtensionsTable 1
#endif
#undef RESTRICT_OrgApacheXalanExtensionsExtensionsTable

#if !defined (OrgApacheXalanExtensionsExtensionsTable_) && (INCLUDE_ALL_OrgApacheXalanExtensionsExtensionsTable || defined(INCLUDE_OrgApacheXalanExtensionsExtensionsTable))
#define OrgApacheXalanExtensionsExtensionsTable_

@class JavaLangBoolean;
@class JavaUtilHashtable;
@class JavaUtilVector;
@class OrgApacheXalanExtensionsExtensionHandler;
@class OrgApacheXalanTemplatesStylesheetRoot;
@class OrgApacheXpathFunctionsFuncExtFunction;
@protocol OrgApacheXalanExtensionsExpressionContext;

@interface OrgApacheXalanExtensionsExtensionsTable : NSObject {
 @public
  JavaUtilHashtable *m_extensionFunctionNamespaces_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheXalanTemplatesStylesheetRoot:(OrgApacheXalanTemplatesStylesheetRoot *)sroot;

- (void)addExtensionNamespaceWithNSString:(NSString *)uri
withOrgApacheXalanExtensionsExtensionHandler:(OrgApacheXalanExtensionsExtensionHandler *)extNS;

- (jboolean)elementAvailableWithNSString:(NSString *)ns
                            withNSString:(NSString *)elemName;

- (id)extFunctionWithOrgApacheXpathFunctionsFuncExtFunction:(OrgApacheXpathFunctionsFuncExtFunction *)extFunction
                                         withJavaUtilVector:(JavaUtilVector *)argVec
              withOrgApacheXalanExtensionsExpressionContext:(id<OrgApacheXalanExtensionsExpressionContext>)exprContext;

- (id)extFunctionWithNSString:(NSString *)ns
                 withNSString:(NSString *)funcName
           withJavaUtilVector:(JavaUtilVector *)argVec
                       withId:(id)methodKey
withOrgApacheXalanExtensionsExpressionContext:(id<OrgApacheXalanExtensionsExpressionContext>)exprContext;

- (jboolean)functionAvailableWithNSString:(NSString *)ns
                             withNSString:(NSString *)funcName;

- (OrgApacheXalanExtensionsExtensionHandler *)getWithNSString:(NSString *)extns;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanExtensionsExtensionsTable)

J2OBJC_FIELD_SETTER(OrgApacheXalanExtensionsExtensionsTable, m_extensionFunctionNamespaces_, JavaUtilHashtable *)

FOUNDATION_EXPORT void OrgApacheXalanExtensionsExtensionsTable_initWithOrgApacheXalanTemplatesStylesheetRoot_(OrgApacheXalanExtensionsExtensionsTable *self, OrgApacheXalanTemplatesStylesheetRoot *sroot);

FOUNDATION_EXPORT OrgApacheXalanExtensionsExtensionsTable *new_OrgApacheXalanExtensionsExtensionsTable_initWithOrgApacheXalanTemplatesStylesheetRoot_(OrgApacheXalanTemplatesStylesheetRoot *sroot) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanExtensionsExtensionsTable *create_OrgApacheXalanExtensionsExtensionsTable_initWithOrgApacheXalanTemplatesStylesheetRoot_(OrgApacheXalanTemplatesStylesheetRoot *sroot);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanExtensionsExtensionsTable)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanExtensionsExtensionsTable")
