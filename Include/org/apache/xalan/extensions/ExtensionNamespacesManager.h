//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xalan/extensions/ExtensionNamespacesManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXalanExtensionsExtensionNamespacesManager")
#ifdef RESTRICT_OrgApacheXalanExtensionsExtensionNamespacesManager
#define INCLUDE_ALL_OrgApacheXalanExtensionsExtensionNamespacesManager 0
#else
#define INCLUDE_ALL_OrgApacheXalanExtensionsExtensionNamespacesManager 1
#endif
#undef RESTRICT_OrgApacheXalanExtensionsExtensionNamespacesManager

#if !defined (OrgApacheXalanExtensionsExtensionNamespacesManager_) && (INCLUDE_ALL_OrgApacheXalanExtensionsExtensionNamespacesManager || defined(INCLUDE_OrgApacheXalanExtensionsExtensionNamespacesManager))
#define OrgApacheXalanExtensionsExtensionNamespacesManager_

@class JavaLangInteger;
@class JavaUtilVector;
@class OrgApacheXalanExtensionsExtensionNamespaceSupport;

@interface OrgApacheXalanExtensionsExtensionNamespacesManager : NSObject

#pragma mark Public

- (instancetype)init;

- (OrgApacheXalanExtensionsExtensionNamespaceSupport *)defineJavaNamespaceWithNSString:(NSString *)ns;

- (OrgApacheXalanExtensionsExtensionNamespaceSupport *)defineJavaNamespaceWithNSString:(NSString *)ns
                                                                          withNSString:(NSString *)classOrPackage;

- (JavaUtilVector *)getExtensions;

- (jint)namespaceIndexWithNSString:(NSString *)namespace_
                withJavaUtilVector:(JavaUtilVector *)extensions;

- (void)registerExtensionWithOrgApacheXalanExtensionsExtensionNamespaceSupport:(OrgApacheXalanExtensionsExtensionNamespaceSupport *)extNsSpt;

- (void)registerExtensionWithNSString:(NSString *)namespace_;

- (void)registerUnregisteredNamespaces;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXalanExtensionsExtensionNamespacesManager)

FOUNDATION_EXPORT void OrgApacheXalanExtensionsExtensionNamespacesManager_init(OrgApacheXalanExtensionsExtensionNamespacesManager *self);

FOUNDATION_EXPORT OrgApacheXalanExtensionsExtensionNamespacesManager *new_OrgApacheXalanExtensionsExtensionNamespacesManager_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXalanExtensionsExtensionNamespacesManager *create_OrgApacheXalanExtensionsExtensionNamespacesManager_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXalanExtensionsExtensionNamespacesManager)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXalanExtensionsExtensionNamespacesManager")
