//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/dtm/ref/IncrementalSAXSource_Filter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlDtmRefIncrementalSAXSource_Filter")
#ifdef RESTRICT_OrgApacheXmlDtmRefIncrementalSAXSource_Filter
#define INCLUDE_ALL_OrgApacheXmlDtmRefIncrementalSAXSource_Filter 0
#else
#define INCLUDE_ALL_OrgApacheXmlDtmRefIncrementalSAXSource_Filter 1
#endif
#undef RESTRICT_OrgApacheXmlDtmRefIncrementalSAXSource_Filter

#if !defined (OrgApacheXmlDtmRefIncrementalSAXSource_Filter_) && (INCLUDE_ALL_OrgApacheXmlDtmRefIncrementalSAXSource_Filter || defined(INCLUDE_OrgApacheXmlDtmRefIncrementalSAXSource_Filter))
#define OrgApacheXmlDtmRefIncrementalSAXSource_Filter_

#define RESTRICT_OrgApacheXmlDtmRefIncrementalSAXSource 1
#define INCLUDE_OrgApacheXmlDtmRefIncrementalSAXSource 1
#include "org/apache/xml/dtm/ref/IncrementalSAXSource.h"

#define RESTRICT_OrgXmlSaxContentHandler 1
#define INCLUDE_OrgXmlSaxContentHandler 1
#include "org/xml/sax/ContentHandler.h"

#define RESTRICT_OrgXmlSaxDTDHandler 1
#define INCLUDE_OrgXmlSaxDTDHandler 1
#include "org/xml/sax/DTDHandler.h"

#define RESTRICT_OrgXmlSaxExtLexicalHandler 1
#define INCLUDE_OrgXmlSaxExtLexicalHandler 1
#include "org/xml/sax/ext/LexicalHandler.h"

#define RESTRICT_OrgXmlSaxErrorHandler 1
#define INCLUDE_OrgXmlSaxErrorHandler 1
#include "org/xml/sax/ErrorHandler.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class OrgApacheXmlDtmRefCoroutineManager;
@class OrgXmlSaxInputSource;
@class OrgXmlSaxSAXParseException;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxLocator;
@protocol OrgXmlSaxXMLReader;

@interface OrgApacheXmlDtmRefIncrementalSAXSource_Filter : NSObject < OrgApacheXmlDtmRefIncrementalSAXSource, OrgXmlSaxContentHandler, OrgXmlSaxDTDHandler, OrgXmlSaxExtLexicalHandler, OrgXmlSaxErrorHandler, JavaLangRunnable > {
 @public
  jboolean DEBUG__;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgApacheXmlDtmRefCoroutineManager:(OrgApacheXmlDtmRefCoroutineManager *)co
                                                   withInt:(jint)controllerCoroutineID;

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length;

- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length;

+ (id<OrgApacheXmlDtmRefIncrementalSAXSource>)createIncrementalSAXSourceWithOrgApacheXmlDtmRefCoroutineManager:(OrgApacheXmlDtmRefCoroutineManager *)co
                                                                                                       withInt:(jint)controllerCoroutineID;

- (id)deliverMoreNodesWithBoolean:(jboolean)parsemore;

- (void)endCDATA;

- (void)endDocument;

- (void)endDTD;

- (void)endElementWithNSString:(NSString *)namespaceURI
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)qName;

- (void)endEntityWithNSString:(NSString *)name;

- (void)endPrefixMappingWithNSString:(NSString *)prefix;

- (void)errorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exception;

- (void)fatalErrorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exception;

- (jint)getControllerCoroutineID;

- (OrgApacheXmlDtmRefCoroutineManager *)getCoroutineManager;

- (jint)getSourceCoroutineID;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length;

- (void)init__WithOrgApacheXmlDtmRefCoroutineManager:(OrgApacheXmlDtmRefCoroutineManager *)co
                                             withInt:(jint)controllerCoroutineID
                                             withInt:(jint)sourceCoroutineID OBJC_METHOD_FAMILY_NONE;

- (void)notationDeclWithNSString:(NSString *)a
                    withNSString:(NSString *)b
                    withNSString:(NSString *)c;

- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data;

- (void)run;

- (void)setContentHandlerWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler;

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator;

- (void)setDTDHandlerWithOrgXmlSaxDTDHandler:(id<OrgXmlSaxDTDHandler>)handler;

- (void)setErrHandlerWithOrgXmlSaxErrorHandler:(id<OrgXmlSaxErrorHandler>)handler;

- (void)setLexicalHandlerWithOrgXmlSaxExtLexicalHandler:(id<OrgXmlSaxExtLexicalHandler>)handler;

- (void)setReturnFrequencyWithInt:(jint)events;

- (void)setXMLReaderWithOrgXmlSaxXMLReader:(id<OrgXmlSaxXMLReader>)eventsource;

- (void)skippedEntityWithNSString:(NSString *)name;

- (void)startCDATA;

- (void)startDocument;

- (void)startDTDWithNSString:(NSString *)name
                withNSString:(NSString *)publicId
                withNSString:(NSString *)systemId;

- (void)startElementWithNSString:(NSString *)namespaceURI
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts;

- (void)startEntityWithNSString:(NSString *)name;

- (void)startParseWithOrgXmlSaxInputSource:(OrgXmlSaxInputSource *)source;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

- (void)unparsedEntityDeclWithNSString:(NSString *)a
                          withNSString:(NSString *)b
                          withNSString:(NSString *)c
                          withNSString:(NSString *)d;

- (void)warningWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exception;

#pragma mark Protected

- (void)count_and_yieldWithBoolean:(jboolean)moreExpected;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlDtmRefIncrementalSAXSource_Filter)

FOUNDATION_EXPORT void OrgApacheXmlDtmRefIncrementalSAXSource_Filter_init(OrgApacheXmlDtmRefIncrementalSAXSource_Filter *self);

FOUNDATION_EXPORT OrgApacheXmlDtmRefIncrementalSAXSource_Filter *new_OrgApacheXmlDtmRefIncrementalSAXSource_Filter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefIncrementalSAXSource_Filter *create_OrgApacheXmlDtmRefIncrementalSAXSource_Filter_init(void);

FOUNDATION_EXPORT void OrgApacheXmlDtmRefIncrementalSAXSource_Filter_initWithOrgApacheXmlDtmRefCoroutineManager_withInt_(OrgApacheXmlDtmRefIncrementalSAXSource_Filter *self, OrgApacheXmlDtmRefCoroutineManager *co, jint controllerCoroutineID);

FOUNDATION_EXPORT OrgApacheXmlDtmRefIncrementalSAXSource_Filter *new_OrgApacheXmlDtmRefIncrementalSAXSource_Filter_initWithOrgApacheXmlDtmRefCoroutineManager_withInt_(OrgApacheXmlDtmRefCoroutineManager *co, jint controllerCoroutineID) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefIncrementalSAXSource_Filter *create_OrgApacheXmlDtmRefIncrementalSAXSource_Filter_initWithOrgApacheXmlDtmRefCoroutineManager_withInt_(OrgApacheXmlDtmRefCoroutineManager *co, jint controllerCoroutineID);

FOUNDATION_EXPORT id<OrgApacheXmlDtmRefIncrementalSAXSource> OrgApacheXmlDtmRefIncrementalSAXSource_Filter_createIncrementalSAXSourceWithOrgApacheXmlDtmRefCoroutineManager_withInt_(OrgApacheXmlDtmRefCoroutineManager *co, jint controllerCoroutineID);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmRefIncrementalSAXSource_Filter)

#endif

#if !defined (OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException_) && (INCLUDE_ALL_OrgApacheXmlDtmRefIncrementalSAXSource_Filter || defined(INCLUDE_OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException))
#define OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangBoolean;
@class JavaLangLong;
@class JavaLangThrowable;
@class OrgApacheXmlDtmRefIncrementalSAXSource_Filter;

@interface OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException : JavaLangRuntimeException

#pragma mark Package-Private

- (instancetype)initWithOrgApacheXmlDtmRefIncrementalSAXSource_Filter:(OrgApacheXmlDtmRefIncrementalSAXSource_Filter *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException)

inline jlong OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException_get_serialVersionUID(void);
#define OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException_serialVersionUID -1129245796185754956LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException_initWithOrgApacheXmlDtmRefIncrementalSAXSource_Filter_(OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException *self, OrgApacheXmlDtmRefIncrementalSAXSource_Filter *outer$);

FOUNDATION_EXPORT OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException *new_OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException_initWithOrgApacheXmlDtmRefIncrementalSAXSource_Filter_(OrgApacheXmlDtmRefIncrementalSAXSource_Filter *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException *create_OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException_initWithOrgApacheXmlDtmRefIncrementalSAXSource_Filter_(OrgApacheXmlDtmRefIncrementalSAXSource_Filter *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmRefIncrementalSAXSource_Filter_StopException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlDtmRefIncrementalSAXSource_Filter")
