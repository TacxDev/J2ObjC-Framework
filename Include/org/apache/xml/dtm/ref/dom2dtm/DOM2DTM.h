//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/dtm/ref/dom2dtm/DOM2DTM.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlDtmRefDom2dtmDOM2DTM")
#ifdef RESTRICT_OrgApacheXmlDtmRefDom2dtmDOM2DTM
#define INCLUDE_ALL_OrgApacheXmlDtmRefDom2dtmDOM2DTM 0
#else
#define INCLUDE_ALL_OrgApacheXmlDtmRefDom2dtmDOM2DTM 1
#endif
#undef RESTRICT_OrgApacheXmlDtmRefDom2dtmDOM2DTM

#if !defined (OrgApacheXmlDtmRefDom2dtmDOM2DTM_) && (INCLUDE_ALL_OrgApacheXmlDtmRefDom2dtmDOM2DTM || defined(INCLUDE_OrgApacheXmlDtmRefDom2dtmDOM2DTM))
#define OrgApacheXmlDtmRefDom2dtmDOM2DTM_

#define RESTRICT_OrgApacheXmlDtmRefDTMDefaultBaseIterators 1
#define INCLUDE_OrgApacheXmlDtmRefDTMDefaultBaseIterators 1
#include "org/apache/xml/dtm/ref/DTMDefaultBaseIterators.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaUtilVector;
@class JavaxXmlTransformDomDOMSource;
@class OrgApacheXmlDtmDTMManager;
@class OrgApacheXmlUtilsFastStringBuffer;
@class OrgApacheXmlUtilsTreeWalker;
@class OrgApacheXmlUtilsXMLStringFactory;
@protocol JavaxXmlTransformSource;
@protocol JavaxXmlTransformSourceLocator;
@protocol OrgApacheXmlDtmDTMWSFilter;
@protocol OrgApacheXmlDtmRefIncrementalSAXSource;
@protocol OrgApacheXmlUtilsXMLString;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxDTDHandler;
@protocol OrgXmlSaxEntityResolver;
@protocol OrgXmlSaxErrorHandler;
@protocol OrgXmlSaxExtDeclHandler;
@protocol OrgXmlSaxExtLexicalHandler;

@interface OrgApacheXmlDtmRefDom2dtmDOM2DTM : OrgApacheXmlDtmRefDTMDefaultBaseIterators {
 @public
  jboolean m_processedFirstElement_;
  JavaUtilVector *m_nodes_;
  OrgApacheXmlUtilsTreeWalker *m_walker_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)mgr
                withJavaxXmlTransformDomDOMSource:(JavaxXmlTransformDomDOMSource *)domSource
                                          withInt:(jint)dtmIdentity
                   withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)whiteSpaceFilter
            withOrgApacheXmlUtilsXMLStringFactory:(OrgApacheXmlUtilsXMLStringFactory *)xstringfactory
                                      withBoolean:(jboolean)doIndexing;

- (void)dispatchCharactersEventsWithInt:(jint)nodeHandle
            withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch
                            withBoolean:(jboolean)normalize;

- (void)dispatchToEventsWithInt:(jint)nodeHandle
    withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch;

- (jint)getAttributeNodeWithInt:(jint)nodeHandle
                   withNSString:(NSString *)namespaceURI
                   withNSString:(NSString *)name;

- (id<OrgXmlSaxContentHandler>)getContentHandler;

- (id<OrgXmlSaxExtDeclHandler>)getDeclHandler;

- (NSString *)getDocumentTypeDeclarationPublicIdentifier;

- (NSString *)getDocumentTypeDeclarationSystemIdentifier;

- (id<OrgXmlSaxDTDHandler>)getDTDHandler;

- (jint)getElementByIdWithNSString:(NSString *)elementId;

- (id<OrgXmlSaxEntityResolver>)getEntityResolver;

- (id<OrgXmlSaxErrorHandler>)getErrorHandler;

- (jint)getHandleOfNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (id<OrgXmlSaxExtLexicalHandler>)getLexicalHandler;

- (NSString *)getLocalNameWithInt:(jint)nodeHandle;

- (NSString *)getNamespaceURIWithInt:(jint)nodeHandle;

- (id<OrgW3cDomNode>)getNodeWithInt:(jint)nodeHandle;

- (NSString *)getNodeNameWithInt:(jint)nodeHandle;

- (NSString *)getNodeNameXWithInt:(jint)nodeHandle;

- (NSString *)getNodeValueWithInt:(jint)nodeHandle;

- (jint)getNumberOfNodes;

- (NSString *)getPrefixWithInt:(jint)nodeHandle;

- (id<JavaxXmlTransformSourceLocator>)getSourceLocatorForWithInt:(jint)node;

- (id<OrgApacheXmlUtilsXMLString>)getStringValueWithInt:(jint)nodeHandle;

- (NSString *)getUnparsedEntityURIWithNSString:(NSString *)name;

- (jboolean)isAttributeSpecifiedWithInt:(jint)attributeHandle;

- (jboolean)isWhitespaceWithInt:(jint)nodeHandle;

- (jboolean)needsTwoThreads;

- (void)setIncrementalSAXSourceWithOrgApacheXmlDtmRefIncrementalSAXSource:(id<OrgApacheXmlDtmRefIncrementalSAXSource>)source;

- (void)setPropertyWithNSString:(NSString *)property
                         withId:(id)value;

#pragma mark Protected

- (jint)addNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node
                         withInt:(jint)parentIndex
                         withInt:(jint)previousSibling
                         withInt:(jint)forceNodeType;

+ (void)dispatchNodeDataWithOrgW3cDomNode:(id<OrgW3cDomNode>)node
              withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch
                                  withInt:(jint)depth;

- (jint)getNextNodeIdentityWithInt:(jint)identity;

+ (void)getNodeDataWithOrgW3cDomNode:(id<OrgW3cDomNode>)node
withOrgApacheXmlUtilsFastStringBuffer:(OrgApacheXmlUtilsFastStringBuffer *)buf;

- (id<OrgW3cDomNode>)lookupNodeWithInt:(jint)nodeIdentity;

- (jboolean)nextNode;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)arg0
                      withJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)arg1
                                          withInt:(jint)arg2
                   withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)arg3
            withOrgApacheXmlUtilsXMLStringFactory:(OrgApacheXmlUtilsXMLStringFactory *)arg4
                                      withBoolean:(jboolean)arg5 NS_UNAVAILABLE;

- (instancetype)initWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)arg0
                      withJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)arg1
                                          withInt:(jint)arg2
                   withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)arg3
            withOrgApacheXmlUtilsXMLStringFactory:(OrgApacheXmlUtilsXMLStringFactory *)arg4
                                      withBoolean:(jboolean)arg5
                                          withInt:(jint)arg6
                                      withBoolean:(jboolean)arg7
                                      withBoolean:(jboolean)arg8 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlDtmRefDom2dtmDOM2DTM)

J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDom2dtmDOM2DTM, m_nodes_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDom2dtmDOM2DTM, m_walker_, OrgApacheXmlUtilsTreeWalker *)

inline jboolean OrgApacheXmlDtmRefDom2dtmDOM2DTM_get_JJK_DEBUG(void);
#define OrgApacheXmlDtmRefDom2dtmDOM2DTM_JJK_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDom2dtmDOM2DTM, JJK_DEBUG, jboolean)

inline jboolean OrgApacheXmlDtmRefDom2dtmDOM2DTM_get_JJK_NEWCODE(void);
#define OrgApacheXmlDtmRefDom2dtmDOM2DTM_JJK_NEWCODE true
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDom2dtmDOM2DTM, JJK_NEWCODE, jboolean)

inline NSString *OrgApacheXmlDtmRefDom2dtmDOM2DTM_get_NAMESPACE_DECL_NS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlDtmRefDom2dtmDOM2DTM_NAMESPACE_DECL_NS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlDtmRefDom2dtmDOM2DTM, NAMESPACE_DECL_NS, NSString *)

FOUNDATION_EXPORT void OrgApacheXmlDtmRefDom2dtmDOM2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformDomDOMSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_(OrgApacheXmlDtmRefDom2dtmDOM2DTM *self, OrgApacheXmlDtmDTMManager *mgr, JavaxXmlTransformDomDOMSource *domSource, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing);

FOUNDATION_EXPORT OrgApacheXmlDtmRefDom2dtmDOM2DTM *new_OrgApacheXmlDtmRefDom2dtmDOM2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformDomDOMSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_(OrgApacheXmlDtmDTMManager *mgr, JavaxXmlTransformDomDOMSource *domSource, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlDtmRefDom2dtmDOM2DTM *create_OrgApacheXmlDtmRefDom2dtmDOM2DTM_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformDomDOMSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_(OrgApacheXmlDtmDTMManager *mgr, JavaxXmlTransformDomDOMSource *domSource, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing);

FOUNDATION_EXPORT void OrgApacheXmlDtmRefDom2dtmDOM2DTM_getNodeDataWithOrgW3cDomNode_withOrgApacheXmlUtilsFastStringBuffer_(id<OrgW3cDomNode> node, OrgApacheXmlUtilsFastStringBuffer *buf);

FOUNDATION_EXPORT void OrgApacheXmlDtmRefDom2dtmDOM2DTM_dispatchNodeDataWithOrgW3cDomNode_withOrgXmlSaxContentHandler_withInt_(id<OrgW3cDomNode> node, id<OrgXmlSaxContentHandler> ch, jint depth);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmRefDom2dtmDOM2DTM)

#endif

#if !defined (OrgApacheXmlDtmRefDom2dtmDOM2DTM_CharacterNodeHandler_) && (INCLUDE_ALL_OrgApacheXmlDtmRefDom2dtmDOM2DTM || defined(INCLUDE_OrgApacheXmlDtmRefDom2dtmDOM2DTM_CharacterNodeHandler))
#define OrgApacheXmlDtmRefDom2dtmDOM2DTM_CharacterNodeHandler_

@protocol OrgW3cDomNode;

@protocol OrgApacheXmlDtmRefDom2dtmDOM2DTM_CharacterNodeHandler < JavaObject >

- (void)charactersWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlDtmRefDom2dtmDOM2DTM_CharacterNodeHandler)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmRefDom2dtmDOM2DTM_CharacterNodeHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlDtmRefDom2dtmDOM2DTM")
