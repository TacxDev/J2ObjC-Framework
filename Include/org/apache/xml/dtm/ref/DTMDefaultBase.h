//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/dtm/ref/DTMDefaultBase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlDtmRefDTMDefaultBase")
#ifdef RESTRICT_OrgApacheXmlDtmRefDTMDefaultBase
#define INCLUDE_ALL_OrgApacheXmlDtmRefDTMDefaultBase 0
#else
#define INCLUDE_ALL_OrgApacheXmlDtmRefDTMDefaultBase 1
#endif
#undef RESTRICT_OrgApacheXmlDtmRefDTMDefaultBase

#if !defined (OrgApacheXmlDtmRefDTMDefaultBase_) && (INCLUDE_ALL_OrgApacheXmlDtmRefDTMDefaultBase || defined(INCLUDE_OrgApacheXmlDtmRefDTMDefaultBase))
#define OrgApacheXmlDtmRefDTMDefaultBase_

#define RESTRICT_OrgApacheXmlDtmDTM 1
#define INCLUDE_OrgApacheXmlDtmDTM 1
#include "org/apache/xml/dtm/DTM.h"

@class IOSCharArray;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaIoOutputStream;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangShort;
@class JavaUtilVector;
@class OrgApacheXmlDtmDTMManager;
@class OrgApacheXmlDtmRefDTMManagerDefault;
@class OrgApacheXmlDtmRefExpandedNameTable;
@class OrgApacheXmlUtilsBoolStack;
@class OrgApacheXmlUtilsSuballocatedIntVector;
@class OrgApacheXmlUtilsXMLStringFactory;
@protocol JavaxXmlTransformSource;
@protocol OrgApacheXmlDtmDTMWSFilter;
@protocol OrgApacheXmlUtilsXMLString;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxContentHandler;

@interface OrgApacheXmlDtmRefDTMDefaultBase : NSObject < OrgApacheXmlDtmDTM > {
 @public
  jint m_size_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_exptype_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_firstch_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_nextsib_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_prevsib_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_parent_;
  JavaUtilVector *m_namespaceDeclSets_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_namespaceDeclSetElements_;
  IOSObjectArray *m_elemIndexes_;
  OrgApacheXmlDtmDTMManager *m_mgr_;
  OrgApacheXmlDtmRefDTMManagerDefault *m_mgrDefault_;
  OrgApacheXmlUtilsSuballocatedIntVector *m_dtmIdent_;
  NSString *m_documentBaseURI_;
  id<OrgApacheXmlDtmDTMWSFilter> m_wsfilter_;
  jboolean m_shouldStripWS_;
  OrgApacheXmlUtilsBoolStack *m_shouldStripWhitespaceStack_;
  OrgApacheXmlUtilsXMLStringFactory *m_xstrf_;
  OrgApacheXmlDtmRefExpandedNameTable *m_expandedNameTable_;
  jboolean m_indexing_;
  IOSObjectArray *m_traversers_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)mgr
                      withJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source
                                          withInt:(jint)dtmIdentity
                   withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)whiteSpaceFilter
            withOrgApacheXmlUtilsXMLStringFactory:(OrgApacheXmlUtilsXMLStringFactory *)xstringfactory
                                      withBoolean:(jboolean)doIndexing;

- (instancetype)initWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)mgr
                      withJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source
                                          withInt:(jint)dtmIdentity
                   withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)whiteSpaceFilter
            withOrgApacheXmlUtilsXMLStringFactory:(OrgApacheXmlUtilsXMLStringFactory *)xstringfactory
                                      withBoolean:(jboolean)doIndexing
                                          withInt:(jint)blocksize
                                      withBoolean:(jboolean)usePrevsib
                                      withBoolean:(jboolean)newNameTable;

- (void)appendChildWithInt:(jint)newChild
               withBoolean:(jboolean)clone
               withBoolean:(jboolean)cloneDepth;

- (void)appendTextChildWithNSString:(NSString *)str;

- (void)dispatchCharactersEventsWithInt:(jint)nodeHandle
            withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch
                            withBoolean:(jboolean)normalize;

- (void)dispatchToEventsWithInt:(jint)nodeHandle
    withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch;

- (void)documentRegistration;

- (void)documentRelease;

- (void)dumpDTMWithJavaIoOutputStream:(JavaIoOutputStream *)os;

- (NSString *)dumpNodeWithInt:(jint)nodeHandle;

- (jint)getAttributeNodeWithInt:(jint)nodeHandle
                   withNSString:(NSString *)namespaceURI
                   withNSString:(NSString *)name;

- (jint)getDocument;

- (jboolean)getDocumentAllDeclarationsProcessed;

- (NSString *)getDocumentBaseURI;

- (NSString *)getDocumentEncodingWithInt:(jint)nodeHandle;

- (jint)getDocumentRootWithInt:(jint)nodeHandle;

- (NSString *)getDocumentStandaloneWithInt:(jint)nodeHandle;

- (NSString *)getDocumentSystemIdentifierWithInt:(jint)nodeHandle;

- (NSString *)getDocumentTypeDeclarationPublicIdentifier;

- (NSString *)getDocumentTypeDeclarationSystemIdentifier;

- (NSString *)getDocumentVersionWithInt:(jint)documentHandle;

- (OrgApacheXmlUtilsSuballocatedIntVector *)getDTMIDs;

- (jint)getElementByIdWithNSString:(NSString *)elementId;

- (jint)getExpandedTypeIDWithInt:(jint)nodeHandle;

- (jint)getExpandedTypeIDWithNSString:(NSString *)namespace_
                         withNSString:(NSString *)localName
                              withInt:(jint)type;

- (jint)getFirstAttributeWithInt:(jint)nodeHandle;

- (jint)getFirstChildWithInt:(jint)nodeHandle;

- (jint)getFirstNamespaceNodeWithInt:(jint)nodeHandle
                         withBoolean:(jboolean)inScope;

- (jint)getLastChildWithInt:(jint)nodeHandle;

- (jshort)getLevelWithInt:(jint)nodeHandle;

- (NSString *)getLocalNameWithInt:(jint)nodeHandle;

- (NSString *)getLocalNameFromExpandedNameIDWithInt:(jint)expandedNameID;

- (OrgApacheXmlDtmDTMManager *)getManager;

- (NSString *)getNamespaceFromExpandedNameIDWithInt:(jint)expandedNameID;

- (jint)getNamespaceTypeWithInt:(jint)nodeHandle;

- (NSString *)getNamespaceURIWithInt:(jint)nodeHandle;

- (jint)getNextAttributeWithInt:(jint)nodeHandle;

- (jint)getNextNamespaceNodeWithInt:(jint)baseHandle
                            withInt:(jint)nodeHandle
                        withBoolean:(jboolean)inScope;

- (jint)getNextSiblingWithInt:(jint)nodeHandle;

- (id<OrgW3cDomNode>)getNodeWithInt:(jint)nodeHandle;

- (jint)getNodeHandleWithInt:(jint)nodeId;

- (jint)getNodeIdentWithInt:(jint)nodeHandle;

- (NSString *)getNodeNameWithInt:(jint)nodeHandle;

- (NSString *)getNodeNameXWithInt:(jint)nodeHandle;

- (jshort)getNodeTypeWithInt:(jint)nodeHandle;

- (NSString *)getNodeValueWithInt:(jint)nodeHandle;

- (jint)getOwnerDocumentWithInt:(jint)nodeHandle;

- (jint)getParentWithInt:(jint)nodeHandle;

- (NSString *)getPrefixWithInt:(jint)nodeHandle;

- (jint)getPreviousSiblingWithInt:(jint)nodeHandle;

- (id<OrgApacheXmlUtilsXMLString>)getStringValueWithInt:(jint)nodeHandle;

- (IOSCharArray *)getStringValueChunkWithInt:(jint)nodeHandle
                                     withInt:(jint)chunkIndex
                                withIntArray:(IOSIntArray *)startAndLen;

- (jint)getStringValueChunkCountWithInt:(jint)nodeHandle;

- (jint)getTypedFirstChildWithInt:(jint)nodeHandle
                          withInt:(jint)nodeType;

- (jint)getTypedNextSiblingWithInt:(jint)nodeHandle
                           withInt:(jint)nodeType;

- (NSString *)getUnparsedEntityURIWithNSString:(NSString *)name;

- (jboolean)hasChildNodesWithInt:(jint)nodeHandle;

- (jboolean)isAttributeSpecifiedWithInt:(jint)attributeHandle;

- (jboolean)isCharacterElementContentWhitespaceWithInt:(jint)nodeHandle;

- (jboolean)isDocumentAllDeclarationsProcessedWithInt:(jint)documentHandle;

- (jboolean)isNodeAfterWithInt:(jint)nodeHandle1
                       withInt:(jint)nodeHandle2;

- (jboolean)isSupportedWithNSString:(NSString *)feature
                       withNSString:(NSString *)version_;

- (jint)makeNodeHandleWithInt:(jint)nodeIdentity;

- (jint)makeNodeIdentityWithInt:(jint)nodeHandle;

- (void)migrateToWithOrgApacheXmlDtmDTMManager:(OrgApacheXmlDtmDTMManager *)mgr;

- (void)setDocumentBaseURIWithNSString:(NSString *)baseURI;

- (void)setFeatureWithNSString:(NSString *)featureId
                   withBoolean:(jboolean)state;

- (jboolean)supportsPreStripping;

#pragma mark Protected

- (jint)_exptypeWithInt:(jint)identity;

- (jint)_firstchWithInt:(jint)identity;

- (jint)_levelWithInt:(jint)identity;

- (jint)_nextsibWithInt:(jint)identity;

- (jint)_parentWithInt:(jint)identity;

- (jint)_prevsibWithInt:(jint)identity;

- (jshort)_typeWithInt:(jint)identity;

- (void)declareNamespaceInContextWithInt:(jint)elementNodeIndex
                                 withInt:(jint)namespaceNodeIndex;

- (void)ensureSizeOfIndexWithInt:(jint)namespaceID
                         withInt:(jint)LocalNameID;

- (void)errorWithNSString:(NSString *)msg;

- (jint)findGTEWithIntArray:(IOSIntArray *)list
                    withInt:(jint)start
                    withInt:(jint)len
                    withInt:(jint)value;

- (jint)findInSortedSuballocatedIntVectorWithOrgApacheXmlUtilsSuballocatedIntVector:(OrgApacheXmlUtilsSuballocatedIntVector *)vector
                                                                            withInt:(jint)lookfor;

- (OrgApacheXmlUtilsSuballocatedIntVector *)findNamespaceContextWithInt:(jint)elementNodeIndex;

- (jint)getFirstAttributeIdentityWithInt:(jint)identity;

- (jint)getNextAttributeIdentityWithInt:(jint)identity;

- (jint)getNextNodeIdentityWithInt:(jint)identity;

- (jint)getNumberOfNodes;

- (jboolean)getShouldStripWhitespace;

- (jint)getTypedAttributeWithInt:(jint)nodeHandle
                         withInt:(jint)attType;

- (void)indexNodeWithInt:(jint)expandedTypeID
                 withInt:(jint)identity;

- (jboolean)nextNode;

- (void)popShouldStripWhitespace;

- (void)pushShouldStripWhitespaceWithBoolean:(jboolean)shouldStrip;

- (void)setShouldStripWhitespaceWithBoolean:(jboolean)shouldStrip;

#pragma mark Package-Private

- (jint)findElementFromIndexWithInt:(jint)nsIndex
                            withInt:(jint)lnIndex
                            withInt:(jint)firstPotential;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlDtmRefDTMDefaultBase)

J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_exptype_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_firstch_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_nextsib_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_prevsib_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_parent_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_namespaceDeclSets_, JavaUtilVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_namespaceDeclSetElements_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_elemIndexes_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_mgr_, OrgApacheXmlDtmDTMManager *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_mgrDefault_, OrgApacheXmlDtmRefDTMManagerDefault *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_dtmIdent_, OrgApacheXmlUtilsSuballocatedIntVector *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_documentBaseURI_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_wsfilter_, id<OrgApacheXmlDtmDTMWSFilter>)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_shouldStripWhitespaceStack_, OrgApacheXmlUtilsBoolStack *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_xstrf_, OrgApacheXmlUtilsXMLStringFactory *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_expandedNameTable_, OrgApacheXmlDtmRefExpandedNameTable *)
J2OBJC_FIELD_SETTER(OrgApacheXmlDtmRefDTMDefaultBase, m_traversers_, IOSObjectArray *)

inline jboolean OrgApacheXmlDtmRefDTMDefaultBase_get_JJK_DEBUG(void);
#define OrgApacheXmlDtmRefDTMDefaultBase_JJK_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDTMDefaultBase, JJK_DEBUG, jboolean)

inline jint OrgApacheXmlDtmRefDTMDefaultBase_get_ROOTNODE(void);
#define OrgApacheXmlDtmRefDTMDefaultBase_ROOTNODE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDTMDefaultBase, ROOTNODE, jint)

inline jint OrgApacheXmlDtmRefDTMDefaultBase_get_DEFAULT_BLOCKSIZE(void);
#define OrgApacheXmlDtmRefDTMDefaultBase_DEFAULT_BLOCKSIZE 512
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDTMDefaultBase, DEFAULT_BLOCKSIZE, jint)

inline jint OrgApacheXmlDtmRefDTMDefaultBase_get_DEFAULT_NUMBLOCKS(void);
#define OrgApacheXmlDtmRefDTMDefaultBase_DEFAULT_NUMBLOCKS 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDTMDefaultBase, DEFAULT_NUMBLOCKS, jint)

inline jint OrgApacheXmlDtmRefDTMDefaultBase_get_DEFAULT_NUMBLOCKS_SMALL(void);
#define OrgApacheXmlDtmRefDTMDefaultBase_DEFAULT_NUMBLOCKS_SMALL 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDTMDefaultBase, DEFAULT_NUMBLOCKS_SMALL, jint)

inline jint OrgApacheXmlDtmRefDTMDefaultBase_get_NOTPROCESSED(void);
#define OrgApacheXmlDtmRefDTMDefaultBase_NOTPROCESSED -2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlDtmRefDTMDefaultBase, NOTPROCESSED, jint)

FOUNDATION_EXPORT void OrgApacheXmlDtmRefDTMDefaultBase_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_(OrgApacheXmlDtmRefDTMDefaultBase *self, OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing);

FOUNDATION_EXPORT void OrgApacheXmlDtmRefDTMDefaultBase_initWithOrgApacheXmlDtmDTMManager_withJavaxXmlTransformSource_withInt_withOrgApacheXmlDtmDTMWSFilter_withOrgApacheXmlUtilsXMLStringFactory_withBoolean_withInt_withBoolean_withBoolean_(OrgApacheXmlDtmRefDTMDefaultBase *self, OrgApacheXmlDtmDTMManager *mgr, id<JavaxXmlTransformSource> source, jint dtmIdentity, id<OrgApacheXmlDtmDTMWSFilter> whiteSpaceFilter, OrgApacheXmlUtilsXMLStringFactory *xstringfactory, jboolean doIndexing, jint blocksize, jboolean usePrevsib, jboolean newNameTable);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlDtmRefDTMDefaultBase)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlDtmRefDTMDefaultBase")
