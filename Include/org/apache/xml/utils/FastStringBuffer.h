//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/FastStringBuffer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsFastStringBuffer")
#ifdef RESTRICT_OrgApacheXmlUtilsFastStringBuffer
#define INCLUDE_ALL_OrgApacheXmlUtilsFastStringBuffer 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsFastStringBuffer 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsFastStringBuffer

#if !defined (OrgApacheXmlUtilsFastStringBuffer_) && (INCLUDE_ALL_OrgApacheXmlUtilsFastStringBuffer || defined(INCLUDE_OrgApacheXmlUtilsFastStringBuffer))
#define OrgApacheXmlUtilsFastStringBuffer_

@class IOSCharArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangInteger;
@class JavaLangStringBuffer;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxExtLexicalHandler;

@interface OrgApacheXmlUtilsFastStringBuffer : NSObject {
 @public
  jint m_chunkBits_;
  jint m_maxChunkBits_;
  jint m_rebundleBits_;
  jint m_chunkSize_;
  jint m_chunkMask_;
  IOSObjectArray *m_array_;
  jint m_lastChunk_;
  jint m_firstFree_;
  OrgApacheXmlUtilsFastStringBuffer *m_innerFSB_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)initChunkBits;

- (instancetype)initWithInt:(jint)initChunkBits
                    withInt:(jint)maxChunkBits;

- (instancetype)initWithInt:(jint)initChunkBits
                    withInt:(jint)maxChunkBits
                    withInt:(jint)rebundleBits;

- (void)appendWithChar:(jchar)value;

- (void)appendWithCharArray:(IOSCharArray *)chars
                    withInt:(jint)start
                    withInt:(jint)length;

- (void)appendWithOrgApacheXmlUtilsFastStringBuffer:(OrgApacheXmlUtilsFastStringBuffer *)value;

- (void)appendWithNSString:(NSString *)value;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)value;

- (jchar)charAtWithInt:(jint)pos;

- (NSString *)getStringWithInt:(jint)start
                       withInt:(jint)length;

- (jboolean)isWhitespaceWithInt:(jint)start
                        withInt:(jint)length;

- (jint)length;

- (void)reset;

+ (void)sendNormalizedSAXcharactersWithCharArray:(IOSCharArray *)ch
                                         withInt:(jint)start
                                         withInt:(jint)length
                     withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler;

- (jint)sendNormalizedSAXcharactersWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch
                                                       withInt:(jint)start
                                                       withInt:(jint)length;

- (void)sendSAXcharactersWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch
                                             withInt:(jint)start
                                             withInt:(jint)length;

- (void)sendSAXCommentWithOrgXmlSaxExtLexicalHandler:(id<OrgXmlSaxExtLexicalHandler>)ch
                                             withInt:(jint)start
                                             withInt:(jint)length;

- (void)setLengthWithInt:(jint)l;

- (jint)size;

- (NSString *)description;

#pragma mark Protected

- (NSString *)getOneChunkStringWithInt:(jint)startChunk
                               withInt:(jint)startColumn
                               withInt:(jint)length;

#pragma mark Package-Private

- (JavaLangStringBuffer *)getStringWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb
                                                    withInt:(jint)start
                                                    withInt:(jint)length;

- (JavaLangStringBuffer *)getStringWithJavaLangStringBuffer:(JavaLangStringBuffer *)sb
                                                    withInt:(jint)startChunk
                                                    withInt:(jint)startColumn
                                                    withInt:(jint)length;

+ (jint)sendNormalizedSAXcharactersWithCharArray:(IOSCharArray *)ch
                                         withInt:(jint)start
                                         withInt:(jint)length
                     withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler
                                         withInt:(jint)edgeTreatmentFlags;

@end

J2OBJC_STATIC_INIT(OrgApacheXmlUtilsFastStringBuffer)

J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsFastStringBuffer, m_array_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsFastStringBuffer, m_innerFSB_, OrgApacheXmlUtilsFastStringBuffer *)

inline jint OrgApacheXmlUtilsFastStringBuffer_get_DEBUG_FORCE_INIT_BITS(void);
#define OrgApacheXmlUtilsFastStringBuffer_DEBUG_FORCE_INIT_BITS 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsFastStringBuffer, DEBUG_FORCE_INIT_BITS, jint)

inline jboolean OrgApacheXmlUtilsFastStringBuffer_get_DEBUG_FORCE_FIXED_CHUNKSIZE(void);
#define OrgApacheXmlUtilsFastStringBuffer_DEBUG_FORCE_FIXED_CHUNKSIZE true
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsFastStringBuffer, DEBUG_FORCE_FIXED_CHUNKSIZE, jboolean)

inline jint OrgApacheXmlUtilsFastStringBuffer_get_SUPPRESS_LEADING_WS(void);
#define OrgApacheXmlUtilsFastStringBuffer_SUPPRESS_LEADING_WS 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsFastStringBuffer, SUPPRESS_LEADING_WS, jint)

inline jint OrgApacheXmlUtilsFastStringBuffer_get_SUPPRESS_TRAILING_WS(void);
#define OrgApacheXmlUtilsFastStringBuffer_SUPPRESS_TRAILING_WS 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsFastStringBuffer, SUPPRESS_TRAILING_WS, jint)

inline jint OrgApacheXmlUtilsFastStringBuffer_get_SUPPRESS_BOTH(void);
#define OrgApacheXmlUtilsFastStringBuffer_SUPPRESS_BOTH 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsFastStringBuffer, SUPPRESS_BOTH, jint)

inline IOSCharArray *OrgApacheXmlUtilsFastStringBuffer_get_SINGLE_SPACE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSCharArray *OrgApacheXmlUtilsFastStringBuffer_SINGLE_SPACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlUtilsFastStringBuffer, SINGLE_SPACE, IOSCharArray *)

FOUNDATION_EXPORT void OrgApacheXmlUtilsFastStringBuffer_initWithInt_withInt_withInt_(OrgApacheXmlUtilsFastStringBuffer *self, jint initChunkBits, jint maxChunkBits, jint rebundleBits);

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *new_OrgApacheXmlUtilsFastStringBuffer_initWithInt_withInt_withInt_(jint initChunkBits, jint maxChunkBits, jint rebundleBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *create_OrgApacheXmlUtilsFastStringBuffer_initWithInt_withInt_withInt_(jint initChunkBits, jint maxChunkBits, jint rebundleBits);

FOUNDATION_EXPORT void OrgApacheXmlUtilsFastStringBuffer_initWithInt_withInt_(OrgApacheXmlUtilsFastStringBuffer *self, jint initChunkBits, jint maxChunkBits);

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *new_OrgApacheXmlUtilsFastStringBuffer_initWithInt_withInt_(jint initChunkBits, jint maxChunkBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *create_OrgApacheXmlUtilsFastStringBuffer_initWithInt_withInt_(jint initChunkBits, jint maxChunkBits);

FOUNDATION_EXPORT void OrgApacheXmlUtilsFastStringBuffer_initWithInt_(OrgApacheXmlUtilsFastStringBuffer *self, jint initChunkBits);

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *new_OrgApacheXmlUtilsFastStringBuffer_initWithInt_(jint initChunkBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *create_OrgApacheXmlUtilsFastStringBuffer_initWithInt_(jint initChunkBits);

FOUNDATION_EXPORT void OrgApacheXmlUtilsFastStringBuffer_init(OrgApacheXmlUtilsFastStringBuffer *self);

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *new_OrgApacheXmlUtilsFastStringBuffer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsFastStringBuffer *create_OrgApacheXmlUtilsFastStringBuffer_init(void);

FOUNDATION_EXPORT jint OrgApacheXmlUtilsFastStringBuffer_sendNormalizedSAXcharactersWithCharArray_withInt_withInt_withOrgXmlSaxContentHandler_withInt_(IOSCharArray *ch, jint start, jint length, id<OrgXmlSaxContentHandler> handler, jint edgeTreatmentFlags);

FOUNDATION_EXPORT void OrgApacheXmlUtilsFastStringBuffer_sendNormalizedSAXcharactersWithCharArray_withInt_withInt_withOrgXmlSaxContentHandler_(IOSCharArray *ch, jint start, jint length, id<OrgXmlSaxContentHandler> handler);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsFastStringBuffer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsFastStringBuffer")
