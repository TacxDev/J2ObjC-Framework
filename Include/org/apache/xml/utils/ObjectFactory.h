//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/ObjectFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsObjectFactory")
#ifdef RESTRICT_OrgApacheXmlUtilsObjectFactory
#define INCLUDE_ALL_OrgApacheXmlUtilsObjectFactory 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsObjectFactory 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsObjectFactory

#if !defined (OrgApacheXmlUtilsObjectFactory_) && (INCLUDE_ALL_OrgApacheXmlUtilsObjectFactory || defined(INCLUDE_OrgApacheXmlUtilsObjectFactory))
#define OrgApacheXmlUtilsObjectFactory_

@class IOSClass;
@class JavaLangBoolean;
@class JavaLangClassLoader;

@interface OrgApacheXmlUtilsObjectFactory : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

+ (id)createObjectWithNSString:(NSString *)factoryId
                  withNSString:(NSString *)fallbackClassName;

+ (id)createObjectWithNSString:(NSString *)factoryId
                  withNSString:(NSString *)propertiesFilename
                  withNSString:(NSString *)fallbackClassName;

+ (JavaLangClassLoader *)findClassLoader;

+ (IOSClass *)findProviderClassWithNSString:(NSString *)className_
                    withJavaLangClassLoader:(JavaLangClassLoader *)cl
                                withBoolean:(jboolean)doFallback;

+ (IOSClass *)lookUpFactoryClassWithNSString:(NSString *)factoryId;

+ (IOSClass *)lookUpFactoryClassWithNSString:(NSString *)factoryId
                                withNSString:(NSString *)propertiesFilename
                                withNSString:(NSString *)fallbackClassName;

+ (NSString *)lookUpFactoryClassNameWithNSString:(NSString *)factoryId
                                    withNSString:(NSString *)propertiesFilename
                                    withNSString:(NSString *)fallbackClassName;

+ (id)newInstanceWithNSString:(NSString *)className_
      withJavaLangClassLoader:(JavaLangClassLoader *)cl
                  withBoolean:(jboolean)doFallback OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsObjectFactory)

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectFactory_initPackagePrivate(OrgApacheXmlUtilsObjectFactory *self);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectFactory *new_OrgApacheXmlUtilsObjectFactory_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectFactory *create_OrgApacheXmlUtilsObjectFactory_initPackagePrivate(void);

FOUNDATION_EXPORT id OrgApacheXmlUtilsObjectFactory_createObjectWithNSString_withNSString_(NSString *factoryId, NSString *fallbackClassName);

FOUNDATION_EXPORT id OrgApacheXmlUtilsObjectFactory_createObjectWithNSString_withNSString_withNSString_(NSString *factoryId, NSString *propertiesFilename, NSString *fallbackClassName);

FOUNDATION_EXPORT IOSClass *OrgApacheXmlUtilsObjectFactory_lookUpFactoryClassWithNSString_(NSString *factoryId);

FOUNDATION_EXPORT IOSClass *OrgApacheXmlUtilsObjectFactory_lookUpFactoryClassWithNSString_withNSString_withNSString_(NSString *factoryId, NSString *propertiesFilename, NSString *fallbackClassName);

FOUNDATION_EXPORT NSString *OrgApacheXmlUtilsObjectFactory_lookUpFactoryClassNameWithNSString_withNSString_withNSString_(NSString *factoryId, NSString *propertiesFilename, NSString *fallbackClassName);

FOUNDATION_EXPORT JavaLangClassLoader *OrgApacheXmlUtilsObjectFactory_findClassLoader(void);

FOUNDATION_EXPORT id OrgApacheXmlUtilsObjectFactory_newInstanceWithNSString_withJavaLangClassLoader_withBoolean_(NSString *className_, JavaLangClassLoader *cl, jboolean doFallback);

FOUNDATION_EXPORT IOSClass *OrgApacheXmlUtilsObjectFactory_findProviderClassWithNSString_withJavaLangClassLoader_withBoolean_(NSString *className_, JavaLangClassLoader *cl, jboolean doFallback);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsObjectFactory)

#endif

#if !defined (OrgApacheXmlUtilsObjectFactory_ConfigurationError_) && (INCLUDE_ALL_OrgApacheXmlUtilsObjectFactory || defined(INCLUDE_OrgApacheXmlUtilsObjectFactory_ConfigurationError))
#define OrgApacheXmlUtilsObjectFactory_ConfigurationError_

#define RESTRICT_JavaLangError 1
#define INCLUDE_JavaLangError 1
#include "java/lang/Error.h"

@class JavaLangBoolean;
@class JavaLangException;
@class JavaLangLong;
@class JavaLangThrowable;

@interface OrgApacheXmlUtilsObjectFactory_ConfigurationError : JavaLangError

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangException:(JavaLangException *)x;

- (JavaLangException *)getException;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsObjectFactory_ConfigurationError)

inline jlong OrgApacheXmlUtilsObjectFactory_ConfigurationError_get_serialVersionUID(void);
#define OrgApacheXmlUtilsObjectFactory_ConfigurationError_serialVersionUID 2036619216663421552LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsObjectFactory_ConfigurationError, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXmlUtilsObjectFactory_ConfigurationError_initWithNSString_withJavaLangException_(OrgApacheXmlUtilsObjectFactory_ConfigurationError *self, NSString *msg, JavaLangException *x);

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectFactory_ConfigurationError *new_OrgApacheXmlUtilsObjectFactory_ConfigurationError_initWithNSString_withJavaLangException_(NSString *msg, JavaLangException *x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsObjectFactory_ConfigurationError *create_OrgApacheXmlUtilsObjectFactory_ConfigurationError_initWithNSString_withJavaLangException_(NSString *msg, JavaLangException *x);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsObjectFactory_ConfigurationError)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsObjectFactory")
