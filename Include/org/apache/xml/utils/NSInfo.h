//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/NSInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsNSInfo")
#ifdef RESTRICT_OrgApacheXmlUtilsNSInfo
#define INCLUDE_ALL_OrgApacheXmlUtilsNSInfo 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsNSInfo 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsNSInfo

#if !defined (OrgApacheXmlUtilsNSInfo_) && (INCLUDE_ALL_OrgApacheXmlUtilsNSInfo || defined(INCLUDE_OrgApacheXmlUtilsNSInfo))
#define OrgApacheXmlUtilsNSInfo_

@class JavaLangBoolean;
@class JavaLangInteger;

@interface OrgApacheXmlUtilsNSInfo : NSObject {
 @public
  NSString *m_namespace_;
  jboolean m_hasXMLNSAttrs_;
  jboolean m_hasProcessedNS_;
  jint m_ancestorHasXMLNSAttrs_;
}

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)hasProcessedNS
                    withBoolean:(jboolean)hasXMLNSAttrs;

- (instancetype)initWithBoolean:(jboolean)hasProcessedNS
                    withBoolean:(jboolean)hasXMLNSAttrs
                        withInt:(jint)ancestorHasXMLNSAttrs;

- (instancetype)initWithNSString:(NSString *)namespace_
                     withBoolean:(jboolean)hasXMLNSAttrs;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsNSInfo)

J2OBJC_FIELD_SETTER(OrgApacheXmlUtilsNSInfo, m_namespace_, NSString *)

inline jint OrgApacheXmlUtilsNSInfo_get_ANCESTORXMLNSUNPROCESSED(void);
#define OrgApacheXmlUtilsNSInfo_ANCESTORXMLNSUNPROCESSED 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsNSInfo, ANCESTORXMLNSUNPROCESSED, jint)

inline jint OrgApacheXmlUtilsNSInfo_get_ANCESTORHASXMLNS(void);
#define OrgApacheXmlUtilsNSInfo_ANCESTORHASXMLNS 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsNSInfo, ANCESTORHASXMLNS, jint)

inline jint OrgApacheXmlUtilsNSInfo_get_ANCESTORNOXMLNS(void);
#define OrgApacheXmlUtilsNSInfo_ANCESTORNOXMLNS 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlUtilsNSInfo, ANCESTORNOXMLNS, jint)

FOUNDATION_EXPORT void OrgApacheXmlUtilsNSInfo_initWithBoolean_withBoolean_(OrgApacheXmlUtilsNSInfo *self, jboolean hasProcessedNS, jboolean hasXMLNSAttrs);

FOUNDATION_EXPORT OrgApacheXmlUtilsNSInfo *new_OrgApacheXmlUtilsNSInfo_initWithBoolean_withBoolean_(jboolean hasProcessedNS, jboolean hasXMLNSAttrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsNSInfo *create_OrgApacheXmlUtilsNSInfo_initWithBoolean_withBoolean_(jboolean hasProcessedNS, jboolean hasXMLNSAttrs);

FOUNDATION_EXPORT void OrgApacheXmlUtilsNSInfo_initWithBoolean_withBoolean_withInt_(OrgApacheXmlUtilsNSInfo *self, jboolean hasProcessedNS, jboolean hasXMLNSAttrs, jint ancestorHasXMLNSAttrs);

FOUNDATION_EXPORT OrgApacheXmlUtilsNSInfo *new_OrgApacheXmlUtilsNSInfo_initWithBoolean_withBoolean_withInt_(jboolean hasProcessedNS, jboolean hasXMLNSAttrs, jint ancestorHasXMLNSAttrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsNSInfo *create_OrgApacheXmlUtilsNSInfo_initWithBoolean_withBoolean_withInt_(jboolean hasProcessedNS, jboolean hasXMLNSAttrs, jint ancestorHasXMLNSAttrs);

FOUNDATION_EXPORT void OrgApacheXmlUtilsNSInfo_initWithNSString_withBoolean_(OrgApacheXmlUtilsNSInfo *self, NSString *namespace_, jboolean hasXMLNSAttrs);

FOUNDATION_EXPORT OrgApacheXmlUtilsNSInfo *new_OrgApacheXmlUtilsNSInfo_initWithNSString_withBoolean_(NSString *namespace_, jboolean hasXMLNSAttrs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsNSInfo *create_OrgApacheXmlUtilsNSInfo_initWithNSString_withBoolean_(NSString *namespace_, jboolean hasXMLNSAttrs);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsNSInfo)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsNSInfo")
