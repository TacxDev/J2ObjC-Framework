//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/utils/IntStack.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlUtilsIntStack")
#ifdef RESTRICT_OrgApacheXmlUtilsIntStack
#define INCLUDE_ALL_OrgApacheXmlUtilsIntStack 0
#else
#define INCLUDE_ALL_OrgApacheXmlUtilsIntStack 1
#endif
#undef RESTRICT_OrgApacheXmlUtilsIntStack

#if !defined (OrgApacheXmlUtilsIntStack_) && (INCLUDE_ALL_OrgApacheXmlUtilsIntStack || defined(INCLUDE_OrgApacheXmlUtilsIntStack))
#define OrgApacheXmlUtilsIntStack_

#define RESTRICT_OrgApacheXmlUtilsIntVector 1
#define INCLUDE_OrgApacheXmlUtilsIntVector 1
#include "org/apache/xml/utils/IntVector.h"

@class JavaLangBoolean;
@class JavaLangInteger;

@interface OrgApacheXmlUtilsIntStack : OrgApacheXmlUtilsIntVector

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)blocksize;

- (instancetype)initWithOrgApacheXmlUtilsIntStack:(OrgApacheXmlUtilsIntStack *)v;

- (id)java_clone;

- (jboolean)empty;

- (jint)peek;

- (jint)peekWithInt:(jint)n;

- (jint)pop;

- (jint)pushWithInt:(jint)i;

- (void)quickPopWithInt:(jint)n;

- (jint)searchWithInt:(jint)o;

- (void)setTopWithInt:(jint)val;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithInt:(jint)arg0
                    withInt:(jint)arg1 NS_UNAVAILABLE;

- (instancetype)initWithOrgApacheXmlUtilsIntVector:(OrgApacheXmlUtilsIntVector *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlUtilsIntStack)

FOUNDATION_EXPORT void OrgApacheXmlUtilsIntStack_init(OrgApacheXmlUtilsIntStack *self);

FOUNDATION_EXPORT OrgApacheXmlUtilsIntStack *new_OrgApacheXmlUtilsIntStack_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsIntStack *create_OrgApacheXmlUtilsIntStack_init(void);

FOUNDATION_EXPORT void OrgApacheXmlUtilsIntStack_initWithInt_(OrgApacheXmlUtilsIntStack *self, jint blocksize);

FOUNDATION_EXPORT OrgApacheXmlUtilsIntStack *new_OrgApacheXmlUtilsIntStack_initWithInt_(jint blocksize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsIntStack *create_OrgApacheXmlUtilsIntStack_initWithInt_(jint blocksize);

FOUNDATION_EXPORT void OrgApacheXmlUtilsIntStack_initWithOrgApacheXmlUtilsIntStack_(OrgApacheXmlUtilsIntStack *self, OrgApacheXmlUtilsIntStack *v);

FOUNDATION_EXPORT OrgApacheXmlUtilsIntStack *new_OrgApacheXmlUtilsIntStack_initWithOrgApacheXmlUtilsIntStack_(OrgApacheXmlUtilsIntStack *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlUtilsIntStack *create_OrgApacheXmlUtilsIntStack_initWithOrgApacheXmlUtilsIntStack_(OrgApacheXmlUtilsIntStack *v);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlUtilsIntStack)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlUtilsIntStack")
