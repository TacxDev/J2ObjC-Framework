//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/ToStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerToStream")
#ifdef RESTRICT_OrgApacheXmlSerializerToStream
#define INCLUDE_ALL_OrgApacheXmlSerializerToStream 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerToStream 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerToStream

#if !defined (OrgApacheXmlSerializerToStream_) && (INCLUDE_ALL_OrgApacheXmlSerializerToStream || defined(INCLUDE_OrgApacheXmlSerializerToStream))
#define OrgApacheXmlSerializerToStream_

#define RESTRICT_OrgApacheXmlSerializerSerializerBase 1
#define INCLUDE_OrgApacheXmlSerializerSerializerBase 1
#include "org/apache/xml/serializer/SerializerBase.h"

@class IOSCharArray;
@class JavaIoOutputStream;
@class JavaIoWriter;
@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangInteger;
@class JavaUtilProperties;
@class JavaUtilVector;
@class JavaxXmlTransformTransformer;
@class OrgApacheXmlSerializerCharInfo;
@class OrgApacheXmlSerializerEncodingInfo;
@class OrgApacheXmlSerializerToStream_BoolStack;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxContentHandler;

@interface OrgApacheXmlSerializerToStream : OrgApacheXmlSerializerSerializerBase {
 @public
  OrgApacheXmlSerializerToStream_BoolStack *m_disableOutputEscapingStates_;
  OrgApacheXmlSerializerEncodingInfo *m_encodingInfo_;
  OrgApacheXmlSerializerToStream_BoolStack *m_preserves_;
  jboolean m_ispreserve_;
  jboolean m_isprevtext_;
  IOSCharArray *m_lineSep_;
  jboolean m_lineSepUse_;
  jint m_lineSepLen_;
  OrgApacheXmlSerializerCharInfo *m_charInfo_;
  jboolean m_shouldFlush_;
  jboolean m_spaceBeforeClose_;
  jboolean m_startNewLine_;
  jboolean m_inDoctype_;
  jboolean m_isUTF8_;
  jboolean m_cdataStartCalled_;
  jboolean m_escaping_;
  JavaIoOutputStream *m_outputStream_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)addAttributeAlwaysWithNSString:(NSString *)uri
                              withNSString:(NSString *)localName
                              withNSString:(NSString *)rawName
                              withNSString:(NSString *)type
                              withNSString:(NSString *)value
                               withBoolean:(jboolean)xslAttribute;

- (void)addCdataSectionElementsWithNSString:(NSString *)URI_and_localNames;

- (void)attributeDeclWithNSString:(NSString *)eName
                     withNSString:(NSString *)aName
                     withNSString:(NSString *)type
                     withNSString:(NSString *)valueDefault
                     withNSString:(NSString *)value;

- (void)charactersWithCharArray:(IOSCharArray *)chars
                        withInt:(jint)start
                        withInt:(jint)length;

- (void)charactersWithNSString:(NSString *)s;

- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length;

- (void)elementDeclWithNSString:(NSString *)name
                   withNSString:(NSString *)model;

- (void)endCDATA;

- (void)endDTD;

- (void)endElementWithNSString:(NSString *)name;

- (void)endElementWithNSString:(NSString *)namespaceURI
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)name;

- (void)endNonEscaping;

- (void)endPrefixMappingWithNSString:(NSString *)prefix;

- (void)externalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)publicId
                          withNSString:(NSString *)systemId;

- (void)flushPending;

- (jint)getIndentAmount;

- (JavaUtilProperties *)getOutputFormat;

- (JavaIoOutputStream *)getOutputStream;

- (JavaIoWriter *)getWriter;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length;

- (void)internalEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)value;

- (void)notationDeclWithNSString:(NSString *)name
                    withNSString:(NSString *)pubID
                    withNSString:(NSString *)sysID;

- (void)processAttributesWithJavaIoWriter:(JavaIoWriter *)writer
                                  withInt:(jint)nAttrs;

- (jboolean)reset;

- (void)serializeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (void)setCdataSectionElementsWithJavaUtilVector:(JavaUtilVector *)URI_and_localNames;

- (void)setContentHandlerWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)ch;

- (void)setDTDEntityExpansionWithBoolean:(jboolean)expand;

- (void)setEncodingWithNSString:(NSString *)encoding;

- (jboolean)setEscapingWithBoolean:(jboolean)escape;

- (void)setIndentAmountWithInt:(jint)m_indentAmount;

- (jboolean)setLineSepUseWithBoolean:(jboolean)use_sytem_line_break;

- (void)setNewLineWithCharArray:(IOSCharArray *)eolChars;

- (void)setOutputFormatWithJavaUtilProperties:(JavaUtilProperties *)format;

- (void)setOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (void)setTransformerWithJavaxXmlTransformTransformer:(JavaxXmlTransformTransformer *)transformer;

- (void)setWriterWithJavaIoWriter:(JavaIoWriter *)writer;

- (void)skippedEntityWithNSString:(NSString *)name;

- (void)startCDATA;

- (void)startDTDWithNSString:(NSString *)name
                withNSString:(NSString *)publicId
                withNSString:(NSString *)systemId;

- (void)startElementWithNSString:(NSString *)elementName;

- (void)startElementWithNSString:(NSString *)elementNamespaceURI
                    withNSString:(NSString *)elementLocalName
                    withNSString:(NSString *)elementName;

- (void)startElementWithNSString:(NSString *)namespaceURI
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)name
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts;

- (void)startEntityWithNSString:(NSString *)name;

- (void)startNonEscaping;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

- (jboolean)startPrefixMappingWithNSString:(NSString *)prefix
                              withNSString:(NSString *)uri
                               withBoolean:(jboolean)shouldFlush;

- (void)unparsedEntityDeclWithNSString:(NSString *)name
                          withNSString:(NSString *)pubID
                          withNSString:(NSString *)sysID
                          withNSString:(NSString *)notationName;

- (void)writeAttrStringWithJavaIoWriter:(JavaIoWriter *)writer
                           withNSString:(NSString *)string
                           withNSString:(NSString *)encoding;

#pragma mark Protected

- (void)cdataWithCharArray:(IOSCharArray *)ch
                   withInt:(jint)start
                   withInt:(jint)length;

- (void)charactersRawWithCharArray:(IOSCharArray *)ch
                           withInt:(jint)start
                           withInt:(jint)length;

- (void)closeCDATA;

- (void)closeStartTag;

- (NSString *)ensureAttributesNamespaceIsDeclaredWithNSString:(NSString *)ns
                                                 withNSString:(NSString *)localName
                                                 withNSString:(NSString *)rawName;

- (jboolean)escapingNotNeededWithChar:(jchar)ch;

- (void)firePseudoAttributes;

- (void)flushWriter;

- (void)indent;

- (void)indentWithInt:(jint)depth;

- (void)outputLineSep;

- (jboolean)shouldIndent;

- (jint)writeUTF16SurrogateWithChar:(jchar)c
                      withCharArray:(IOSCharArray *)ch
                            withInt:(jint)i
                            withInt:(jint)end;

#pragma mark Package-Private

- (jint)accumDefaultEntityWithJavaIoWriter:(JavaIoWriter *)writer
                                  withChar:(jchar)ch
                                   withInt:(jint)i
                             withCharArray:(IOSCharArray *)chars
                                   withInt:(jint)len
                               withBoolean:(jboolean)fromTextNode
                               withBoolean:(jboolean)escLF;

- (void)ensurePrefixIsDeclaredWithNSString:(NSString *)ns
                              withNSString:(NSString *)rawName;

- (void)outputDocTypeDeclWithNSString:(NSString *)name
                          withBoolean:(jboolean)closeDecl;

- (void)outputEntityDeclWithNSString:(NSString *)name
                        withNSString:(NSString *)value;

- (void)setPropWithNSString:(NSString *)name
               withNSString:(NSString *)val
                withBoolean:(jboolean)defaultVal;

- (void)writeNormalizedCharsWithCharArray:(IOSCharArray *)ch
                                  withInt:(jint)start
                                  withInt:(jint)length
                              withBoolean:(jboolean)isCData
                              withBoolean:(jboolean)useSystemLineSeparator;

@end

J2OBJC_STATIC_INIT(OrgApacheXmlSerializerToStream)

J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToStream, m_disableOutputEscapingStates_, OrgApacheXmlSerializerToStream_BoolStack *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToStream, m_encodingInfo_, OrgApacheXmlSerializerEncodingInfo *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToStream, m_preserves_, OrgApacheXmlSerializerToStream_BoolStack *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToStream, m_lineSep_, IOSCharArray *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToStream, m_charInfo_, OrgApacheXmlSerializerCharInfo *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToStream, m_outputStream_, JavaIoOutputStream *)

FOUNDATION_EXPORT void OrgApacheXmlSerializerToStream_init(OrgApacheXmlSerializerToStream *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerToStream)

#endif

#if !defined (OrgApacheXmlSerializerToStream_BoolStack_) && (INCLUDE_ALL_OrgApacheXmlSerializerToStream || defined(INCLUDE_OrgApacheXmlSerializerToStream_BoolStack))
#define OrgApacheXmlSerializerToStream_BoolStack_

@class JavaLangBoolean;
@class JavaLangInteger;

@interface OrgApacheXmlSerializerToStream_BoolStack : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)size;

- (void)clear;

- (jboolean)isEmpty;

- (jboolean)peek;

- (jboolean)peekOrFalse;

- (jboolean)peekOrTrue;

- (jboolean)pop;

- (jboolean)popAndTop;

- (jboolean)pushWithBoolean:(jboolean)val;

- (void)setTopWithBoolean:(jboolean)b;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerToStream_BoolStack)

FOUNDATION_EXPORT void OrgApacheXmlSerializerToStream_BoolStack_init(OrgApacheXmlSerializerToStream_BoolStack *self);

FOUNDATION_EXPORT OrgApacheXmlSerializerToStream_BoolStack *new_OrgApacheXmlSerializerToStream_BoolStack_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerToStream_BoolStack *create_OrgApacheXmlSerializerToStream_BoolStack_init(void);

FOUNDATION_EXPORT void OrgApacheXmlSerializerToStream_BoolStack_initWithInt_(OrgApacheXmlSerializerToStream_BoolStack *self, jint size);

FOUNDATION_EXPORT OrgApacheXmlSerializerToStream_BoolStack *new_OrgApacheXmlSerializerToStream_BoolStack_initWithInt_(jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerToStream_BoolStack *create_OrgApacheXmlSerializerToStream_BoolStack_initWithInt_(jint size);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerToStream_BoolStack)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerToStream")
