//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/utils/WrappedRuntimeException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerUtilsWrappedRuntimeException")
#ifdef RESTRICT_OrgApacheXmlSerializerUtilsWrappedRuntimeException
#define INCLUDE_ALL_OrgApacheXmlSerializerUtilsWrappedRuntimeException 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerUtilsWrappedRuntimeException 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerUtilsWrappedRuntimeException

#if !defined (OrgApacheXmlSerializerUtilsWrappedRuntimeException_) && (INCLUDE_ALL_OrgApacheXmlSerializerUtilsWrappedRuntimeException || defined(INCLUDE_OrgApacheXmlSerializerUtilsWrappedRuntimeException))
#define OrgApacheXmlSerializerUtilsWrappedRuntimeException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangBoolean;
@class JavaLangException;
@class JavaLangLong;
@class JavaLangThrowable;

@interface OrgApacheXmlSerializerUtilsWrappedRuntimeException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithJavaLangException:(JavaLangException *)e;

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangException:(JavaLangException *)e;

- (JavaLangException *)getException;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerUtilsWrappedRuntimeException)

inline jlong OrgApacheXmlSerializerUtilsWrappedRuntimeException_get_serialVersionUID(void);
#define OrgApacheXmlSerializerUtilsWrappedRuntimeException_serialVersionUID 7140414456714658073LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXmlSerializerUtilsWrappedRuntimeException, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsWrappedRuntimeException_initWithJavaLangException_(OrgApacheXmlSerializerUtilsWrappedRuntimeException *self, JavaLangException *e);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsWrappedRuntimeException *new_OrgApacheXmlSerializerUtilsWrappedRuntimeException_initWithJavaLangException_(JavaLangException *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsWrappedRuntimeException *create_OrgApacheXmlSerializerUtilsWrappedRuntimeException_initWithJavaLangException_(JavaLangException *e);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsWrappedRuntimeException_initWithNSString_withJavaLangException_(OrgApacheXmlSerializerUtilsWrappedRuntimeException *self, NSString *msg, JavaLangException *e);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsWrappedRuntimeException *new_OrgApacheXmlSerializerUtilsWrappedRuntimeException_initWithNSString_withJavaLangException_(NSString *msg, JavaLangException *e) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsWrappedRuntimeException *create_OrgApacheXmlSerializerUtilsWrappedRuntimeException_initWithNSString_withJavaLangException_(NSString *msg, JavaLangException *e);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerUtilsWrappedRuntimeException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerUtilsWrappedRuntimeException")
