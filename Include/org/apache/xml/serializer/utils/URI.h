//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/utils/URI.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerUtilsURI")
#ifdef RESTRICT_OrgApacheXmlSerializerUtilsURI
#define INCLUDE_ALL_OrgApacheXmlSerializerUtilsURI 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerUtilsURI 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerUtilsURI

#if !defined (OrgApacheXmlSerializerUtilsURI_) && (INCLUDE_ALL_OrgApacheXmlSerializerUtilsURI || defined(INCLUDE_OrgApacheXmlSerializerUtilsURI))
#define OrgApacheXmlSerializerUtilsURI_

@class JavaLangBoolean;
@class JavaLangInteger;

@interface OrgApacheXmlSerializerUtilsURI : NSObject

#pragma mark Public

- (instancetype)initPackagePrivate;

- (instancetype)initPackagePrivateWithNSString:(NSString *)p_uriSpec;

- (instancetype)initPackagePrivateWithNSString:(NSString *)p_scheme
                                  withNSString:(NSString *)p_schemeSpecificPart;

- (instancetype)initPackagePrivateWithNSString:(NSString *)p_scheme
                                  withNSString:(NSString *)p_userinfo
                                  withNSString:(NSString *)p_host
                                       withInt:(jint)p_port
                                  withNSString:(NSString *)p_path
                                  withNSString:(NSString *)p_queryString
                                  withNSString:(NSString *)p_fragment;

- (instancetype)initPackagePrivateWithNSString:(NSString *)p_scheme
                                  withNSString:(NSString *)p_host
                                  withNSString:(NSString *)p_path
                                  withNSString:(NSString *)p_queryString
                                  withNSString:(NSString *)p_fragment;

- (instancetype)initPackagePrivateWithOrgApacheXmlSerializerUtilsURI:(OrgApacheXmlSerializerUtilsURI *)p_other;

- (instancetype)initPackagePrivateWithOrgApacheXmlSerializerUtilsURI:(OrgApacheXmlSerializerUtilsURI *)p_base
                                                        withNSString:(NSString *)p_uriSpec;

- (void)appendPathWithNSString:(NSString *)p_addToPath;

- (jboolean)isEqual:(id)p_test;

- (NSString *)getFragment;

- (NSString *)getHost;

- (NSString *)getPath;

- (NSString *)getPathWithBoolean:(jboolean)p_includeQueryString
                     withBoolean:(jboolean)p_includeFragment;

- (jint)getPort;

- (NSString *)getQueryString;

- (NSString *)getScheme;

- (NSString *)getSchemeSpecificPart;

- (NSString *)getUserinfo;

+ (jboolean)isConformantSchemeNameWithNSString:(NSString *)p_scheme;

- (jboolean)isGenericURI;

+ (jboolean)isWellFormedAddressWithNSString:(NSString *)p_address;

- (void)setFragmentWithNSString:(NSString *)p_fragment;

- (void)setHostWithNSString:(NSString *)p_host;

- (void)setPathWithNSString:(NSString *)p_path;

- (void)setPortWithInt:(jint)p_port;

- (void)setQueryStringWithNSString:(NSString *)p_queryString;

- (void)setSchemeWithNSString:(NSString *)p_scheme;

- (void)setUserinfoWithNSString:(NSString *)p_userinfo;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerUtilsURI)

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_initPackagePrivate(OrgApacheXmlSerializerUtilsURI *self);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *new_OrgApacheXmlSerializerUtilsURI_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *create_OrgApacheXmlSerializerUtilsURI_initPackagePrivate(void);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithOrgApacheXmlSerializerUtilsURI_(OrgApacheXmlSerializerUtilsURI *self, OrgApacheXmlSerializerUtilsURI *p_other);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *new_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithOrgApacheXmlSerializerUtilsURI_(OrgApacheXmlSerializerUtilsURI *p_other) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *create_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithOrgApacheXmlSerializerUtilsURI_(OrgApacheXmlSerializerUtilsURI *p_other);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_(OrgApacheXmlSerializerUtilsURI *self, NSString *p_uriSpec);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *new_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_(NSString *p_uriSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *create_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_(NSString *p_uriSpec);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithOrgApacheXmlSerializerUtilsURI_withNSString_(OrgApacheXmlSerializerUtilsURI *self, OrgApacheXmlSerializerUtilsURI *p_base, NSString *p_uriSpec);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *new_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithOrgApacheXmlSerializerUtilsURI_withNSString_(OrgApacheXmlSerializerUtilsURI *p_base, NSString *p_uriSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *create_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithOrgApacheXmlSerializerUtilsURI_withNSString_(OrgApacheXmlSerializerUtilsURI *p_base, NSString *p_uriSpec);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_(OrgApacheXmlSerializerUtilsURI *self, NSString *p_scheme, NSString *p_schemeSpecificPart);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *new_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_(NSString *p_scheme, NSString *p_schemeSpecificPart) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *create_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_(NSString *p_scheme, NSString *p_schemeSpecificPart);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_withNSString_withNSString_withNSString_(OrgApacheXmlSerializerUtilsURI *self, NSString *p_scheme, NSString *p_host, NSString *p_path, NSString *p_queryString, NSString *p_fragment);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *new_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_withNSString_withNSString_withNSString_(NSString *p_scheme, NSString *p_host, NSString *p_path, NSString *p_queryString, NSString *p_fragment) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *create_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_withNSString_withNSString_withNSString_(NSString *p_scheme, NSString *p_host, NSString *p_path, NSString *p_queryString, NSString *p_fragment);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_withNSString_withInt_withNSString_withNSString_withNSString_(OrgApacheXmlSerializerUtilsURI *self, NSString *p_scheme, NSString *p_userinfo, NSString *p_host, jint p_port, NSString *p_path, NSString *p_queryString, NSString *p_fragment);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *new_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_withNSString_withInt_withNSString_withNSString_withNSString_(NSString *p_scheme, NSString *p_userinfo, NSString *p_host, jint p_port, NSString *p_path, NSString *p_queryString, NSString *p_fragment) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI *create_OrgApacheXmlSerializerUtilsURI_initPackagePrivateWithNSString_withNSString_withNSString_withInt_withNSString_withNSString_withNSString_(NSString *p_scheme, NSString *p_userinfo, NSString *p_host, jint p_port, NSString *p_path, NSString *p_queryString, NSString *p_fragment);

FOUNDATION_EXPORT jboolean OrgApacheXmlSerializerUtilsURI_isConformantSchemeNameWithNSString_(NSString *p_scheme);

FOUNDATION_EXPORT jboolean OrgApacheXmlSerializerUtilsURI_isWellFormedAddressWithNSString_(NSString *p_address);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerUtilsURI)

#endif

#if !defined (OrgApacheXmlSerializerUtilsURI_MalformedURIException_) && (INCLUDE_ALL_OrgApacheXmlSerializerUtilsURI || defined(INCLUDE_OrgApacheXmlSerializerUtilsURI_MalformedURIException))
#define OrgApacheXmlSerializerUtilsURI_MalformedURIException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;

@interface OrgApacheXmlSerializerUtilsURI_MalformedURIException : JavaIoIOException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)p_msg;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerUtilsURI_MalformedURIException)

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_MalformedURIException_init(OrgApacheXmlSerializerUtilsURI_MalformedURIException *self);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI_MalformedURIException *new_OrgApacheXmlSerializerUtilsURI_MalformedURIException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI_MalformedURIException *create_OrgApacheXmlSerializerUtilsURI_MalformedURIException_init(void);

FOUNDATION_EXPORT void OrgApacheXmlSerializerUtilsURI_MalformedURIException_initWithNSString_(OrgApacheXmlSerializerUtilsURI_MalformedURIException *self, NSString *p_msg);

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI_MalformedURIException *new_OrgApacheXmlSerializerUtilsURI_MalformedURIException_initWithNSString_(NSString *p_msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerUtilsURI_MalformedURIException *create_OrgApacheXmlSerializerUtilsURI_MalformedURIException_initWithNSString_(NSString *p_msg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerUtilsURI_MalformedURIException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerUtilsURI")
