//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/ToTextStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerToTextStream")
#ifdef RESTRICT_OrgApacheXmlSerializerToTextStream
#define INCLUDE_ALL_OrgApacheXmlSerializerToTextStream 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerToTextStream 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerToTextStream

#if !defined (OrgApacheXmlSerializerToTextStream_) && (INCLUDE_ALL_OrgApacheXmlSerializerToTextStream || defined(INCLUDE_OrgApacheXmlSerializerToTextStream))
#define OrgApacheXmlSerializerToTextStream_

#define RESTRICT_OrgApacheXmlSerializerToStream 1
#define INCLUDE_OrgApacheXmlSerializerToStream 1
#include "org/apache/xml/serializer/ToStream.h"

@class IOSCharArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@protocol OrgXmlSaxAttributes;

@interface OrgApacheXmlSerializerToTextStream : OrgApacheXmlSerializerToStream

#pragma mark Public

- (instancetype)init;

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value;

- (void)addAttributeWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)rawName
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value
                     withBoolean:(jboolean)XSLAttribute;

- (void)addUniqueAttributeWithNSString:(NSString *)qName
                          withNSString:(NSString *)value
                               withInt:(jint)flags;

- (void)cdataWithCharArray:(IOSCharArray *)ch
                   withInt:(jint)start
                   withInt:(jint)length;

- (void)charactersWithCharArray:(IOSCharArray *)ch
                        withInt:(jint)start
                        withInt:(jint)length;

- (void)charactersWithNSString:(NSString *)characters;

- (void)charactersRawWithCharArray:(IOSCharArray *)ch
                           withInt:(jint)start
                           withInt:(jint)length;

- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length;

- (void)commentWithNSString:(NSString *)data;

- (void)endCDATA;

- (void)endDocument;

- (void)endElementWithNSString:(NSString *)elemName;

- (void)endElementWithNSString:(NSString *)namespaceURI
                  withNSString:(NSString *)localName
                  withNSString:(NSString *)name;

- (void)entityReferenceWithNSString:(NSString *)name;

- (void)flushPending;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)ch
                                 withInt:(jint)start
                                 withInt:(jint)length;

- (void)namespaceAfterStartElementWithNSString:(NSString *)prefix
                                  withNSString:(NSString *)uri;

- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data;

- (void)startElementWithNSString:(NSString *)elementNamespaceURI
                    withNSString:(NSString *)elementLocalName
                    withNSString:(NSString *)elementName;

- (void)startElementWithNSString:(NSString *)namespaceURI
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)name
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

- (jboolean)startPrefixMappingWithNSString:(NSString *)prefix
                              withNSString:(NSString *)uri
                               withBoolean:(jboolean)shouldFlush;

#pragma mark Protected

- (void)startDocumentInternal;

#pragma mark Package-Private

- (void)writeNormalizedCharsWithCharArray:(IOSCharArray *)ch
                                  withInt:(jint)start
                                  withInt:(jint)length
                              withBoolean:(jboolean)useLineSep;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerToTextStream)

FOUNDATION_EXPORT void OrgApacheXmlSerializerToTextStream_init(OrgApacheXmlSerializerToTextStream *self);

FOUNDATION_EXPORT OrgApacheXmlSerializerToTextStream *new_OrgApacheXmlSerializerToTextStream_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerToTextStream *create_OrgApacheXmlSerializerToTextStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerToTextStream)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerToTextStream")
