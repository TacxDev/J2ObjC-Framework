//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/SerializerBase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerSerializerBase")
#ifdef RESTRICT_OrgApacheXmlSerializerSerializerBase
#define INCLUDE_ALL_OrgApacheXmlSerializerSerializerBase 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerSerializerBase 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerSerializerBase

#if !defined (OrgApacheXmlSerializerSerializerBase_) && (INCLUDE_ALL_OrgApacheXmlSerializerSerializerBase || defined(INCLUDE_OrgApacheXmlSerializerSerializerBase))
#define OrgApacheXmlSerializerSerializerBase_

#define RESTRICT_OrgApacheXmlSerializerSerializationHandler 1
#define INCLUDE_OrgApacheXmlSerializerSerializationHandler 1
#include "org/apache/xml/serializer/SerializationHandler.h"

#define RESTRICT_OrgApacheXmlSerializerSerializerConstants 1
#define INCLUDE_OrgApacheXmlSerializerSerializerConstants 1
#include "org/apache/xml/serializer/SerializerConstants.h"

@class IOSCharArray;
@class JavaIoWriter;
@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangInteger;
@class JavaUtilHashtable;
@class JavaxXmlTransformTransformer;
@class OrgApacheXmlSerializerAttributesImplSerializer;
@class OrgApacheXmlSerializerElemContext;
@class OrgApacheXmlSerializerNamespaceMappings;
@class OrgXmlSaxSAXParseException;
@protocol JavaUtilSet;
@protocol JavaxXmlTransformSourceLocator;
@protocol OrgApacheXmlSerializerDOMSerializer;
@protocol OrgApacheXmlSerializerSerializerTrace;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxLocator;

@interface OrgApacheXmlSerializerSerializerBase : NSObject < OrgApacheXmlSerializerSerializationHandler, OrgApacheXmlSerializerSerializerConstants > {
 @public
  jboolean m_needToCallStartDocument_;
  jboolean m_cdataTagOpen_;
  OrgApacheXmlSerializerAttributesImplSerializer *m_attributes_;
  jboolean m_inEntityRef_;
  jboolean m_inExternalDTD_;
  NSString *m_doctypeSystem_;
  NSString *m_doctypePublic_;
  jboolean m_needToOutputDocTypeDecl_;
  jboolean m_shouldNotWriteXMLHeader_;
  jboolean m_standaloneWasSpecified_;
  jboolean m_doIndent_;
  jint m_indentAmount_;
  NSString *m_version_;
  NSString *m_mediatype_;
  OrgApacheXmlSerializerNamespaceMappings *m_prefixMap_;
  id<OrgApacheXmlSerializerSerializerTrace> m_tracer_;
  id<JavaxXmlTransformSourceLocator> m_sourceLocator_;
  JavaIoWriter *m_writer_;
  OrgApacheXmlSerializerElemContext *m_elemContext_;
  IOSCharArray *m_charsBuff_;
  IOSCharArray *m_attrBuff_;
  NSString *m_StringOfCDATASections_;
  jboolean m_docIsEmpty_;
  JavaUtilHashtable *m_CdataElems_;
}

#pragma mark Public

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value;

- (void)addAttributeWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)rawName
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value;

- (void)addAttributeWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)rawName
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value
                     withBoolean:(jboolean)XSLAttribute;

- (jboolean)addAttributeAlwaysWithNSString:(NSString *)uri
                              withNSString:(NSString *)localName
                              withNSString:(NSString *)rawName
                              withNSString:(NSString *)type
                              withNSString:(NSString *)value
                               withBoolean:(jboolean)XSLAttribute;

- (void)addAttributesWithOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)atts;

- (void)addXSLAttributeWithNSString:(NSString *)name
                       withNSString:(NSString *)value
                       withNSString:(NSString *)uri;

- (id<OrgXmlSaxContentHandler>)asContentHandler;

- (id)asDOM3Serializer;

- (id<OrgApacheXmlSerializerDOMSerializer>)asDOMSerializer;

- (void)charactersWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (void)close;

- (void)commentWithNSString:(NSString *)data;

- (jboolean)documentIsEmpty;

- (void)endEntityWithNSString:(NSString *)name;

- (void)entityReferenceWithNSString:(NSString *)name;

- (void)errorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exc;

- (void)fatalErrorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exc;

- (void)fireEndEntityWithNSString:(NSString *)name;

- (NSString *)getDoctypePublic;

- (NSString *)getDoctypeSystem;

- (NSString *)getEncoding;

- (jboolean)getIndent;

- (jint)getIndentAmount;

- (NSString *)getMediaType;

- (OrgApacheXmlSerializerNamespaceMappings *)getNamespaceMappings;

- (NSString *)getNamespaceURIWithNSString:(NSString *)qname
                              withBoolean:(jboolean)isElement;

- (NSString *)getNamespaceURIFromPrefixWithNSString:(NSString *)prefix;

- (jboolean)getOmitXMLDeclaration;

- (NSString *)getOutputPropertyWithNSString:(NSString *)name;

- (NSString *)getOutputPropertyDefaultWithNSString:(NSString *)name;

- (NSString *)getOutputPropertyNonDefaultWithNSString:(NSString *)name;

- (NSString *)getPrefixWithNSString:(NSString *)namespaceURI;

- (NSString *)getStandalone;

- (JavaxXmlTransformTransformer *)getTransformer;

- (NSString *)getVersion;

- (void)namespaceAfterStartElementWithNSString:(NSString *)uri
                                  withNSString:(NSString *)prefix;

- (void)notationDeclWithNSString:(NSString *)arg0
                    withNSString:(NSString *)arg1
                    withNSString:(NSString *)arg2;

- (jboolean)reset;

- (void)setDoctypeWithNSString:(NSString *)doctypeSystem
                  withNSString:(NSString *)doctypePublic;

- (void)setDoctypePublicWithNSString:(NSString *)doctypePublic;

- (void)setDoctypeSystemWithNSString:(NSString *)doctypeSystem;

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)locator;

- (void)setDTDEntityExpansionWithBoolean:(jboolean)expand;

- (void)setEncodingWithNSString:(NSString *)encoding;

- (void)setIndentWithBoolean:(jboolean)doIndent;

- (void)setIndentAmountWithInt:(jint)m_indentAmount;

- (void)setMediaTypeWithNSString:(NSString *)mediaType;

- (void)setNamespaceMappingsWithOrgApacheXmlSerializerNamespaceMappings:(OrgApacheXmlSerializerNamespaceMappings *)mappings;

- (void)setOmitXMLDeclarationWithBoolean:(jboolean)b;

- (void)setOutputPropertyWithNSString:(NSString *)name
                         withNSString:(NSString *)val;

- (void)setOutputPropertyDefaultWithNSString:(NSString *)name
                                withNSString:(NSString *)val;

- (void)setSourceLocatorWithJavaxXmlTransformSourceLocator:(id<JavaxXmlTransformSourceLocator>)locator;

- (void)setStandaloneWithNSString:(NSString *)standalone;

- (void)setTransformerWithJavaxXmlTransformTransformer:(JavaxXmlTransformTransformer *)t;

- (void)setVersionWithNSString:(NSString *)version_;

- (void)startDocument;

- (void)unparsedEntityDeclWithNSString:(NSString *)arg0
                          withNSString:(NSString *)arg1
                          withNSString:(NSString *)arg2
                          withNSString:(NSString *)arg3;

- (void)warningWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exc;

#pragma mark Protected

- (void)fireCDATAEventWithCharArray:(IOSCharArray *)chars
                            withInt:(jint)start
                            withInt:(jint)length;

- (void)fireCharEventWithCharArray:(IOSCharArray *)chars
                           withInt:(jint)start
                           withInt:(jint)length;

- (void)fireCommentEventWithCharArray:(IOSCharArray *)chars
                              withInt:(jint)start
                              withInt:(jint)length;

- (void)fireEndDoc;

- (void)fireEndElemWithNSString:(NSString *)name;

- (void)fireEntityReferenceWithNSString:(NSString *)name;

- (void)fireEscapingEventWithNSString:(NSString *)name
                         withNSString:(NSString *)data;

- (void)fireStartDoc;

- (void)fireStartElemWithNSString:(NSString *)elemName;

- (void)fireStartEntityWithNSString:(NSString *)name;

+ (NSString *)getLocalNameWithNSString:(NSString *)qname;

+ (NSString *)getPrefixPartWithNSString:(NSString *)qname;

- (void)initCDATA OBJC_METHOD_FAMILY_NONE;

- (jboolean)isCdataSection;

- (NSString *)patchNameWithNSString:(NSString *)qname;

- (void)setStandaloneInternalWithNSString:(NSString *)standalone;

- (void)startDocumentInternal;

#pragma mark Package-Private

- (instancetype)init;

+ (jchar)getFirstCharLocNameWithNSString:(NSString *)name;

- (id<JavaUtilSet>)getOutputPropDefaultKeys;

- (id<JavaUtilSet>)getOutputPropKeys;

- (void)initCdataElemsWithNSString:(NSString *)s OBJC_METHOD_FAMILY_NONE;

- (jboolean)inTemporaryOutputState;

- (void)setPropWithNSString:(NSString *)name
               withNSString:(NSString *)val
                withBoolean:(jboolean)defaultVal;

@end

J2OBJC_STATIC_INIT(OrgApacheXmlSerializerSerializerBase)

J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_attributes_, OrgApacheXmlSerializerAttributesImplSerializer *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_doctypeSystem_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_doctypePublic_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_version_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_mediatype_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_prefixMap_, OrgApacheXmlSerializerNamespaceMappings *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_tracer_, id<OrgApacheXmlSerializerSerializerTrace>)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_sourceLocator_, id<JavaxXmlTransformSourceLocator>)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_writer_, JavaIoWriter *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_elemContext_, OrgApacheXmlSerializerElemContext *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_charsBuff_, IOSCharArray *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_attrBuff_, IOSCharArray *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_StringOfCDATASections_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerSerializerBase, m_CdataElems_, JavaUtilHashtable *)

inline NSString *OrgApacheXmlSerializerSerializerBase_get_PKG_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerSerializerBase_PKG_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlSerializerSerializerBase, PKG_NAME, NSString *)

inline NSString *OrgApacheXmlSerializerSerializerBase_get_PKG_PATH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerSerializerBase_PKG_PATH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlSerializerSerializerBase, PKG_PATH, NSString *)

FOUNDATION_EXPORT void OrgApacheXmlSerializerSerializerBase_init(OrgApacheXmlSerializerSerializerBase *self);

FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerSerializerBase_getLocalNameWithNSString_(NSString *qname);

FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerSerializerBase_getPrefixPartWithNSString_(NSString *qname);

FOUNDATION_EXPORT jchar OrgApacheXmlSerializerSerializerBase_getFirstCharLocNameWithNSString_(NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerSerializerBase)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerSerializerBase")
