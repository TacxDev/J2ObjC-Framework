//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/dom3/NamespaceSupport.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerDom3NamespaceSupport")
#ifdef RESTRICT_OrgApacheXmlSerializerDom3NamespaceSupport
#define INCLUDE_ALL_OrgApacheXmlSerializerDom3NamespaceSupport 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerDom3NamespaceSupport 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerDom3NamespaceSupport

#if !defined (OrgApacheXmlSerializerDom3NamespaceSupport_) && (INCLUDE_ALL_OrgApacheXmlSerializerDom3NamespaceSupport || defined(INCLUDE_OrgApacheXmlSerializerDom3NamespaceSupport))
#define OrgApacheXmlSerializerDom3NamespaceSupport_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@protocol JavaUtilEnumeration;

@interface OrgApacheXmlSerializerDom3NamespaceSupport : NSObject {
 @public
  IOSObjectArray *fNamespace_;
  jint fNamespaceSize_;
  IOSIntArray *fContext_;
  jint fCurrentContext_;
  IOSObjectArray *fPrefixes_;
}

#pragma mark Public

- (instancetype)init;

- (jboolean)declarePrefixWithNSString:(NSString *)prefix
                         withNSString:(NSString *)uri;

- (id<JavaUtilEnumeration>)getAllPrefixes;

- (NSString *)getDeclaredPrefixAtWithInt:(jint)index;

- (jint)getDeclaredPrefixCount;

- (NSString *)getPrefixWithNSString:(NSString *)uri;

- (NSString *)getURIWithNSString:(NSString *)prefix;

- (void)popContext;

- (void)pushContext;

- (void)reset;

@end

J2OBJC_STATIC_INIT(OrgApacheXmlSerializerDom3NamespaceSupport)

J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerDom3NamespaceSupport, fNamespace_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerDom3NamespaceSupport, fContext_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerDom3NamespaceSupport, fPrefixes_, IOSObjectArray *)

inline NSString *OrgApacheXmlSerializerDom3NamespaceSupport_get_PREFIX_XML(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerDom3NamespaceSupport_PREFIX_XML;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlSerializerDom3NamespaceSupport, PREFIX_XML, NSString *)

inline NSString *OrgApacheXmlSerializerDom3NamespaceSupport_get_PREFIX_XMLNS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerDom3NamespaceSupport_PREFIX_XMLNS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlSerializerDom3NamespaceSupport, PREFIX_XMLNS, NSString *)

inline NSString *OrgApacheXmlSerializerDom3NamespaceSupport_get_XML_URI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerDom3NamespaceSupport_XML_URI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlSerializerDom3NamespaceSupport, XML_URI, NSString *)

inline NSString *OrgApacheXmlSerializerDom3NamespaceSupport_get_XMLNS_URI(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerDom3NamespaceSupport_XMLNS_URI;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheXmlSerializerDom3NamespaceSupport, XMLNS_URI, NSString *)

FOUNDATION_EXPORT void OrgApacheXmlSerializerDom3NamespaceSupport_init(OrgApacheXmlSerializerDom3NamespaceSupport *self);

FOUNDATION_EXPORT OrgApacheXmlSerializerDom3NamespaceSupport *new_OrgApacheXmlSerializerDom3NamespaceSupport_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerDom3NamespaceSupport *create_OrgApacheXmlSerializerDom3NamespaceSupport_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerDom3NamespaceSupport)

#endif

#if !defined (OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes_) && (INCLUDE_ALL_OrgApacheXmlSerializerDom3NamespaceSupport || defined(INCLUDE_OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes))
#define OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes_

#define RESTRICT_JavaUtilEnumeration 1
#define INCLUDE_JavaUtilEnumeration 1
#include "java/util/Enumeration.h"

@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class OrgApacheXmlSerializerDom3NamespaceSupport;

@interface OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes : NSObject < JavaUtilEnumeration >

#pragma mark Public

- (instancetype)initWithOrgApacheXmlSerializerDom3NamespaceSupport:(OrgApacheXmlSerializerDom3NamespaceSupport *)outer$
                                                 withNSStringArray:(IOSObjectArray *)prefixes
                                                           withInt:(jint)size;

- (jboolean)hasMoreElements;

- (id)nextElement;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes)

FOUNDATION_EXPORT void OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes_initWithOrgApacheXmlSerializerDom3NamespaceSupport_withNSStringArray_withInt_(OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes *self, OrgApacheXmlSerializerDom3NamespaceSupport *outer$, IOSObjectArray *prefixes, jint size);

FOUNDATION_EXPORT OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes *new_OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes_initWithOrgApacheXmlSerializerDom3NamespaceSupport_withNSStringArray_withInt_(OrgApacheXmlSerializerDom3NamespaceSupport *outer$, IOSObjectArray *prefixes, jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes *create_OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes_initWithOrgApacheXmlSerializerDom3NamespaceSupport_withNSStringArray_withInt_(OrgApacheXmlSerializerDom3NamespaceSupport *outer$, IOSObjectArray *prefixes, jint size);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerDom3NamespaceSupport_Prefixes)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerDom3NamespaceSupport")
