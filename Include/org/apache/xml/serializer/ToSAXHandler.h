//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/ToSAXHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerToSAXHandler")
#ifdef RESTRICT_OrgApacheXmlSerializerToSAXHandler
#define INCLUDE_ALL_OrgApacheXmlSerializerToSAXHandler 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerToSAXHandler 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerToSAXHandler

#if !defined (OrgApacheXmlSerializerToSAXHandler_) && (INCLUDE_ALL_OrgApacheXmlSerializerToSAXHandler || defined(INCLUDE_OrgApacheXmlSerializerToSAXHandler))
#define OrgApacheXmlSerializerToSAXHandler_

#define RESTRICT_OrgApacheXmlSerializerSerializerBase 1
#define INCLUDE_OrgApacheXmlSerializerSerializerBase 1
#include "org/apache/xml/serializer/SerializerBase.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaUtilVector;
@class OrgXmlSaxSAXParseException;
@protocol OrgApacheXmlSerializerTransformStateSetter;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxExtLexicalHandler;

@interface OrgApacheXmlSerializerToSAXHandler : OrgApacheXmlSerializerSerializerBase {
 @public
  id<OrgXmlSaxContentHandler> m_saxHandler_;
  id<OrgXmlSaxExtLexicalHandler> m_lexHandler_;
  id<OrgApacheXmlSerializerTransformStateSetter> m_state_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)hdlr
                 withOrgXmlSaxExtLexicalHandler:(id<OrgXmlSaxExtLexicalHandler>)lex
                                   withNSString:(NSString *)encoding;

- (instancetype)initWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler
                                   withNSString:(NSString *)encoding;

- (void)addUniqueAttributeWithNSString:(NSString *)qName
                          withNSString:(NSString *)value
                               withInt:(jint)flags;

- (void)charactersWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (void)charactersWithNSString:(NSString *)characters;

- (void)commentWithNSString:(NSString *)comment;

- (void)errorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exc;

- (void)fatalErrorWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exc;

- (void)flushPending;

- (void)processingInstructionWithNSString:(NSString *)target
                             withNSString:(NSString *)data;

- (jboolean)reset;

- (void)setCdataSectionElementsWithJavaUtilVector:(JavaUtilVector *)URI_and_localNames;

- (void)setContentHandlerWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)_saxHandler;

- (void)setLexHandlerWithOrgXmlSaxExtLexicalHandler:(id<OrgXmlSaxExtLexicalHandler>)_lexHandler;

- (void)setShouldOutputNSAttrWithBoolean:(jboolean)doOutputNSAttr;

- (void)setTransformStateWithOrgApacheXmlSerializerTransformStateSetter:(id<OrgApacheXmlSerializerTransformStateSetter>)ts;

- (void)startDTDWithNSString:(NSString *)arg0
                withNSString:(NSString *)arg1
                withNSString:(NSString *)arg2;

- (void)startElementWithNSString:(NSString *)qName;

- (void)startElementWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)qName;

- (void)startElementWithNSString:(NSString *)arg0
                    withNSString:(NSString *)arg1
                    withNSString:(NSString *)arg2
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)arg3;

- (void)warningWithOrgXmlSaxSAXParseException:(OrgXmlSaxSAXParseException *)exc;

#pragma mark Protected

- (void)closeCDATA;

- (void)closeStartTag;

- (void)startDocumentInternal;

#pragma mark Package-Private

- (jboolean)getShouldOutputNSAttr;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerToSAXHandler)

J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToSAXHandler, m_saxHandler_, id<OrgXmlSaxContentHandler>)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToSAXHandler, m_lexHandler_, id<OrgXmlSaxExtLexicalHandler>)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerToSAXHandler, m_state_, id<OrgApacheXmlSerializerTransformStateSetter>)

FOUNDATION_EXPORT void OrgApacheXmlSerializerToSAXHandler_init(OrgApacheXmlSerializerToSAXHandler *self);

FOUNDATION_EXPORT void OrgApacheXmlSerializerToSAXHandler_initWithOrgXmlSaxContentHandler_withOrgXmlSaxExtLexicalHandler_withNSString_(OrgApacheXmlSerializerToSAXHandler *self, id<OrgXmlSaxContentHandler> hdlr, id<OrgXmlSaxExtLexicalHandler> lex, NSString *encoding);

FOUNDATION_EXPORT void OrgApacheXmlSerializerToSAXHandler_initWithOrgXmlSaxContentHandler_withNSString_(OrgApacheXmlSerializerToSAXHandler *self, id<OrgXmlSaxContentHandler> handler, NSString *encoding);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerToSAXHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerToSAXHandler")
