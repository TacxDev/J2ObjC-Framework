//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/ToTextSAXHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerToTextSAXHandler")
#ifdef RESTRICT_OrgApacheXmlSerializerToTextSAXHandler
#define INCLUDE_ALL_OrgApacheXmlSerializerToTextSAXHandler 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerToTextSAXHandler 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerToTextSAXHandler

#if !defined (OrgApacheXmlSerializerToTextSAXHandler_) && (INCLUDE_ALL_OrgApacheXmlSerializerToTextSAXHandler || defined(INCLUDE_OrgApacheXmlSerializerToTextSAXHandler))
#define OrgApacheXmlSerializerToTextSAXHandler_

#define RESTRICT_OrgApacheXmlSerializerToSAXHandler 1
#define INCLUDE_OrgApacheXmlSerializerToSAXHandler 1
#include "org/apache/xml/serializer/ToSAXHandler.h"

@class IOSCharArray;
@class JavaIoOutputStream;
@class JavaIoWriter;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaUtilProperties;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxAttributes;
@protocol OrgXmlSaxContentHandler;
@protocol OrgXmlSaxExtLexicalHandler;
@protocol OrgXmlSaxLocator;

@interface OrgApacheXmlSerializerToTextSAXHandler : OrgApacheXmlSerializerToSAXHandler

#pragma mark Public

- (instancetype)initWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)hdlr
                 withOrgXmlSaxExtLexicalHandler:(id<OrgXmlSaxExtLexicalHandler>)lex
                                   withNSString:(NSString *)encoding;

- (instancetype)initWithOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler
                                   withNSString:(NSString *)encoding;

- (void)addAttributeWithNSString:(NSString *)name
                    withNSString:(NSString *)value;

- (void)addAttributeWithNSString:(NSString *)uri
                    withNSString:(NSString *)localName
                    withNSString:(NSString *)rawName
                    withNSString:(NSString *)type
                    withNSString:(NSString *)value
                     withBoolean:(jboolean)XSLAttribute;

- (void)attributeDeclWithNSString:(NSString *)arg0
                     withNSString:(NSString *)arg1
                     withNSString:(NSString *)arg2
                     withNSString:(NSString *)arg3
                     withNSString:(NSString *)arg4;

- (void)charactersWithCharArray:(IOSCharArray *)characters
                        withInt:(jint)offset
                        withInt:(jint)length;

- (void)charactersWithNSString:(NSString *)characters;

- (void)commentWithCharArray:(IOSCharArray *)ch
                     withInt:(jint)start
                     withInt:(jint)length;

- (void)commentWithNSString:(NSString *)data;

- (void)elementDeclWithNSString:(NSString *)arg0
                   withNSString:(NSString *)arg1;

- (void)endCDATA;

- (void)endDocument;

- (void)endDTD;

- (void)endElementWithNSString:(NSString *)elemName;

- (void)endElementWithNSString:(NSString *)arg0
                  withNSString:(NSString *)arg1
                  withNSString:(NSString *)arg2;

- (void)endPrefixMappingWithNSString:(NSString *)arg0;

- (void)externalEntityDeclWithNSString:(NSString *)arg0
                          withNSString:(NSString *)arg1
                          withNSString:(NSString *)arg2;

- (JavaUtilProperties *)getOutputFormat;

- (JavaIoOutputStream *)getOutputStream;

- (JavaIoWriter *)getWriter;

- (void)ignorableWhitespaceWithCharArray:(IOSCharArray *)arg0
                                 withInt:(jint)arg1
                                 withInt:(jint)arg2;

- (void)indentWithInt:(jint)n;

- (void)internalEntityDeclWithNSString:(NSString *)arg0
                          withNSString:(NSString *)arg1;

- (void)namespaceAfterStartElementWithNSString:(NSString *)prefix
                                  withNSString:(NSString *)uri;

- (void)processingInstructionWithNSString:(NSString *)arg0
                             withNSString:(NSString *)arg1;

- (jboolean)reset;

- (void)serializeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (void)setDocumentLocatorWithOrgXmlSaxLocator:(id<OrgXmlSaxLocator>)arg0;

- (jboolean)setEscapingWithBoolean:(jboolean)escape;

- (void)setIndentWithBoolean:(jboolean)indent;

- (void)setOutputFormatWithJavaUtilProperties:(JavaUtilProperties *)format;

- (void)setOutputStreamWithJavaIoOutputStream:(JavaIoOutputStream *)output;

- (void)setWriterWithJavaIoWriter:(JavaIoWriter *)writer;

- (void)skippedEntityWithNSString:(NSString *)arg0;

- (void)startCDATA;

- (void)startElementWithNSString:(NSString *)elementName;

- (void)startElementWithNSString:(NSString *)elementNamespaceURI
                    withNSString:(NSString *)elementLocalName
                    withNSString:(NSString *)elementName;

- (void)startElementWithNSString:(NSString *)arg0
                    withNSString:(NSString *)arg1
                    withNSString:(NSString *)arg2
         withOrgXmlSaxAttributes:(id<OrgXmlSaxAttributes>)arg3;

- (void)startEntityWithNSString:(NSString *)arg0;

- (void)startPrefixMappingWithNSString:(NSString *)prefix
                          withNSString:(NSString *)uri;

- (jboolean)startPrefixMappingWithNSString:(NSString *)prefix
                              withNSString:(NSString *)uri
                               withBoolean:(jboolean)shouldFlush;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerToTextSAXHandler)

FOUNDATION_EXPORT void OrgApacheXmlSerializerToTextSAXHandler_initWithOrgXmlSaxContentHandler_withOrgXmlSaxExtLexicalHandler_withNSString_(OrgApacheXmlSerializerToTextSAXHandler *self, id<OrgXmlSaxContentHandler> hdlr, id<OrgXmlSaxExtLexicalHandler> lex, NSString *encoding);

FOUNDATION_EXPORT OrgApacheXmlSerializerToTextSAXHandler *new_OrgApacheXmlSerializerToTextSAXHandler_initWithOrgXmlSaxContentHandler_withOrgXmlSaxExtLexicalHandler_withNSString_(id<OrgXmlSaxContentHandler> hdlr, id<OrgXmlSaxExtLexicalHandler> lex, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerToTextSAXHandler *create_OrgApacheXmlSerializerToTextSAXHandler_initWithOrgXmlSaxContentHandler_withOrgXmlSaxExtLexicalHandler_withNSString_(id<OrgXmlSaxContentHandler> hdlr, id<OrgXmlSaxExtLexicalHandler> lex, NSString *encoding);

FOUNDATION_EXPORT void OrgApacheXmlSerializerToTextSAXHandler_initWithOrgXmlSaxContentHandler_withNSString_(OrgApacheXmlSerializerToTextSAXHandler *self, id<OrgXmlSaxContentHandler> handler, NSString *encoding);

FOUNDATION_EXPORT OrgApacheXmlSerializerToTextSAXHandler *new_OrgApacheXmlSerializerToTextSAXHandler_initWithOrgXmlSaxContentHandler_withNSString_(id<OrgXmlSaxContentHandler> handler, NSString *encoding) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerToTextSAXHandler *create_OrgApacheXmlSerializerToTextSAXHandler_initWithOrgXmlSaxContentHandler_withNSString_(id<OrgXmlSaxContentHandler> handler, NSString *encoding);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerToTextSAXHandler)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerToTextSAXHandler")
