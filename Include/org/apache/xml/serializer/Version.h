//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/Version.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerVersion")
#ifdef RESTRICT_OrgApacheXmlSerializerVersion
#define INCLUDE_ALL_OrgApacheXmlSerializerVersion 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerVersion 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerVersion

#if !defined (OrgApacheXmlSerializerVersion_) && (INCLUDE_ALL_OrgApacheXmlSerializerVersion || defined(INCLUDE_OrgApacheXmlSerializerVersion))
#define OrgApacheXmlSerializerVersion_

@class IOSObjectArray;
@class JavaLangInteger;

@interface OrgApacheXmlSerializerVersion : NSObject

#pragma mark Public

- (instancetype)init;

+ (jint)getDevelopmentVersionNum;

+ (NSString *)getImplementationLanguage;

+ (jint)getMaintenanceVersionNum;

+ (jint)getMajorVersionNum;

+ (NSString *)getProduct;

+ (jint)getReleaseVersionNum;

+ (NSString *)getVersion;

+ (void)mainWithNSStringArray:(IOSObjectArray *)argv;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerVersion)

FOUNDATION_EXPORT void OrgApacheXmlSerializerVersion_init(OrgApacheXmlSerializerVersion *self);

FOUNDATION_EXPORT OrgApacheXmlSerializerVersion *new_OrgApacheXmlSerializerVersion_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerVersion *create_OrgApacheXmlSerializerVersion_init(void);

FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerVersion_getVersion(void);

FOUNDATION_EXPORT void OrgApacheXmlSerializerVersion_mainWithNSStringArray_(IOSObjectArray *argv);

FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerVersion_getProduct(void);

FOUNDATION_EXPORT NSString *OrgApacheXmlSerializerVersion_getImplementationLanguage(void);

FOUNDATION_EXPORT jint OrgApacheXmlSerializerVersion_getMajorVersionNum(void);

FOUNDATION_EXPORT jint OrgApacheXmlSerializerVersion_getReleaseVersionNum(void);

FOUNDATION_EXPORT jint OrgApacheXmlSerializerVersion_getMaintenanceVersionNum(void);

FOUNDATION_EXPORT jint OrgApacheXmlSerializerVersion_getDevelopmentVersionNum(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerVersion)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerVersion")
