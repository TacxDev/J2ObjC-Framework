//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xml/serializer/NamespaceMappings.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXmlSerializerNamespaceMappings")
#ifdef RESTRICT_OrgApacheXmlSerializerNamespaceMappings
#define INCLUDE_ALL_OrgApacheXmlSerializerNamespaceMappings 0
#else
#define INCLUDE_ALL_OrgApacheXmlSerializerNamespaceMappings 1
#endif
#undef RESTRICT_OrgApacheXmlSerializerNamespaceMappings

#if !defined (OrgApacheXmlSerializerNamespaceMappings_) && (INCLUDE_ALL_OrgApacheXmlSerializerNamespaceMappings || defined(INCLUDE_OrgApacheXmlSerializerNamespaceMappings))
#define OrgApacheXmlSerializerNamespaceMappings_

@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class OrgApacheXmlSerializerNamespaceMappings_MappingRecord;
@protocol OrgXmlSaxContentHandler;

@interface OrgApacheXmlSerializerNamespaceMappings : NSObject

#pragma mark Public

- (instancetype)init;

- (id)java_clone;

- (NSString *)generateNextPrefix;

- (IOSObjectArray *)lookupAllPrefixesWithNSString:(NSString *)uri;

- (NSString *)lookupNamespaceWithNSString:(NSString *)prefix;

- (NSString *)lookupPrefixWithNSString:(NSString *)uri;

- (jboolean)pushNamespaceWithNSString:(NSString *)prefix
                         withNSString:(NSString *)uri
                              withInt:(jint)elemDepth;

#pragma mark Package-Private

- (OrgApacheXmlSerializerNamespaceMappings_MappingRecord *)getMappingFromPrefixWithNSString:(NSString *)prefix;

- (OrgApacheXmlSerializerNamespaceMappings_MappingRecord *)getMappingFromURIWithNSString:(NSString *)uri;

- (jboolean)popNamespaceWithNSString:(NSString *)prefix;

- (void)popNamespacesWithInt:(jint)elemDepth
 withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)saxHandler;

- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerNamespaceMappings)

FOUNDATION_EXPORT void OrgApacheXmlSerializerNamespaceMappings_init(OrgApacheXmlSerializerNamespaceMappings *self);

FOUNDATION_EXPORT OrgApacheXmlSerializerNamespaceMappings *new_OrgApacheXmlSerializerNamespaceMappings_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerNamespaceMappings *create_OrgApacheXmlSerializerNamespaceMappings_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerNamespaceMappings)

#endif

#if !defined (OrgApacheXmlSerializerNamespaceMappings_MappingRecord_) && (INCLUDE_ALL_OrgApacheXmlSerializerNamespaceMappings || defined(INCLUDE_OrgApacheXmlSerializerNamespaceMappings_MappingRecord))
#define OrgApacheXmlSerializerNamespaceMappings_MappingRecord_

@class JavaLangInteger;

@interface OrgApacheXmlSerializerNamespaceMappings_MappingRecord : NSObject {
 @public
  NSString *m_prefix_;
  NSString *m_uri_;
  jint m_declarationDepth_;
}

#pragma mark Package-Private

- (instancetype)initWithNSString:(NSString *)prefix
                    withNSString:(NSString *)uri
                         withInt:(jint)depth;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXmlSerializerNamespaceMappings_MappingRecord)

J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerNamespaceMappings_MappingRecord, m_prefix_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheXmlSerializerNamespaceMappings_MappingRecord, m_uri_, NSString *)

FOUNDATION_EXPORT void OrgApacheXmlSerializerNamespaceMappings_MappingRecord_initWithNSString_withNSString_withInt_(OrgApacheXmlSerializerNamespaceMappings_MappingRecord *self, NSString *prefix, NSString *uri, jint depth);

FOUNDATION_EXPORT OrgApacheXmlSerializerNamespaceMappings_MappingRecord *new_OrgApacheXmlSerializerNamespaceMappings_MappingRecord_initWithNSString_withNSString_withInt_(NSString *prefix, NSString *uri, jint depth) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXmlSerializerNamespaceMappings_MappingRecord *create_OrgApacheXmlSerializerNamespaceMappings_MappingRecord_initWithNSString_withNSString_withInt_(NSString *prefix, NSString *uri, jint depth);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXmlSerializerNamespaceMappings_MappingRecord)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXmlSerializerNamespaceMappings")
