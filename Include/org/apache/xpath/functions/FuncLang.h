//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/functions/FuncLang.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathFunctionsFuncLang")
#ifdef RESTRICT_OrgApacheXpathFunctionsFuncLang
#define INCLUDE_ALL_OrgApacheXpathFunctionsFuncLang 0
#else
#define INCLUDE_ALL_OrgApacheXpathFunctionsFuncLang 1
#endif
#undef RESTRICT_OrgApacheXpathFunctionsFuncLang

#if !defined (OrgApacheXpathFunctionsFuncLang_) && (INCLUDE_ALL_OrgApacheXpathFunctionsFuncLang || defined(INCLUDE_OrgApacheXpathFunctionsFuncLang))
#define OrgApacheXpathFunctionsFuncLang_

#define RESTRICT_OrgApacheXpathFunctionsFunctionOneArg 1
#define INCLUDE_OrgApacheXpathFunctionsFunctionOneArg 1
#include "org/apache/xpath/functions/FunctionOneArg.h"

@class JavaLangLong;
@class OrgApacheXpathObjectsXObject;
@class OrgApacheXpathXPathContext;

@interface OrgApacheXpathFunctionsFuncLang : OrgApacheXpathFunctionsFunctionOneArg

#pragma mark Public

- (instancetype)init;

- (OrgApacheXpathObjectsXObject *)executeWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathFunctionsFuncLang)

inline jlong OrgApacheXpathFunctionsFuncLang_get_serialVersionUID(void);
#define OrgApacheXpathFunctionsFuncLang_serialVersionUID -7868705139354872185LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathFunctionsFuncLang, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXpathFunctionsFuncLang_init(OrgApacheXpathFunctionsFuncLang *self);

FOUNDATION_EXPORT OrgApacheXpathFunctionsFuncLang *new_OrgApacheXpathFunctionsFuncLang_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathFunctionsFuncLang *create_OrgApacheXpathFunctionsFuncLang_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathFunctionsFuncLang)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathFunctionsFuncLang")
