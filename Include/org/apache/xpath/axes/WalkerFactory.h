//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/WalkerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesWalkerFactory")
#ifdef RESTRICT_OrgApacheXpathAxesWalkerFactory
#define INCLUDE_ALL_OrgApacheXpathAxesWalkerFactory 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesWalkerFactory 1
#endif
#undef RESTRICT_OrgApacheXpathAxesWalkerFactory

#if !defined (OrgApacheXpathAxesWalkerFactory_) && (INCLUDE_ALL_OrgApacheXpathAxesWalkerFactory || defined(INCLUDE_OrgApacheXpathAxesWalkerFactory))
#define OrgApacheXpathAxesWalkerFactory_

@class JavaLangBoolean;
@class JavaLangInteger;
@class OrgApacheXpathAxesAxesWalker;
@class OrgApacheXpathAxesMatchPatternIterator;
@class OrgApacheXpathAxesWalkingIterator;
@class OrgApacheXpathCompilerCompiler;
@class OrgApacheXpathPatternsStepPattern;
@protocol OrgApacheXmlDtmDTMIterator;

@interface OrgApacheXpathAxesWalkerFactory : NSObject

#pragma mark Public

- (instancetype)init;

+ (jboolean)canCrissCrossWithInt:(jint)analysis;

+ (jboolean)canSkipSubtreesWithInt:(jint)analysis;

+ (void)diagnoseIteratorWithNSString:(NSString *)name
                             withInt:(jint)analysis
  withOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler;

+ (jint)getAnalysisBitFromAxesWithInt:(jint)axis;

+ (NSString *)getAnalysisStringWithInt:(jint)analysis;

+ (jint)getAxisFromStepWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                  withInt:(jint)stepOpCodePos;

+ (jint)getStepCountWithInt:(jint)analysis;

+ (jboolean)hasPredicateWithInt:(jint)analysis;

+ (jboolean)isAbsoluteWithInt:(jint)analysis;

+ (jboolean)isDownwardAxisOfManyWithInt:(jint)axis;

+ (jboolean)isNaturalDocOrderWithInt:(jint)analysis;

+ (jboolean)isOneStepWithInt:(jint)analysis;

+ (jboolean)isSetWithInt:(jint)analysis
                 withInt:(jint)bits;

+ (jboolean)isWildWithInt:(jint)analysis;

+ (jboolean)mightBeProximateWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                       withInt:(jint)opPos
                                                       withInt:(jint)stepType;

+ (id<OrgApacheXmlDtmDTMIterator>)newDTMIteratorWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                                           withInt:(jint)opPos
                                                                       withBoolean:(jboolean)isTopLevel OBJC_METHOD_FAMILY_NONE;

+ (jboolean)walksAncestorsWithInt:(jint)analysis;

+ (jboolean)walksAttributesWithInt:(jint)analysis;

+ (jboolean)walksChildrenWithInt:(jint)analysis;

+ (jboolean)walksChildrenAndExtraAndSelfOnlyWithInt:(jint)analysis;

+ (jboolean)walksChildrenOnlyWithInt:(jint)analysis;

+ (jboolean)walksDescendantsWithInt:(jint)analysis;

+ (jboolean)walksDescendantsAndExtraAndSelfOnlyWithInt:(jint)analysis;

+ (jboolean)walksDownExtraOnlyWithInt:(jint)analysis;

+ (jboolean)walksDownOnlyWithInt:(jint)analysis;

+ (jboolean)walksExtraNodesWithInt:(jint)analysis;

+ (jboolean)walksExtraNodesOnlyWithInt:(jint)analysis;

+ (jboolean)walksFilteredListWithInt:(jint)analysis;

+ (jboolean)walksFollowingOnlyMaybeAbsoluteWithInt:(jint)analysis;

+ (jboolean)walksInDocOrderWithInt:(jint)analysis;

+ (jboolean)walksNamespacesWithInt:(jint)analysis;

+ (jboolean)walksSelfOnlyWithInt:(jint)analysis;

+ (jboolean)walksSidewaysWithInt:(jint)analysis;

+ (jboolean)walksSubtreeWithInt:(jint)analysis;

+ (jboolean)walksSubtreeOnlyWithInt:(jint)analysis;

+ (jboolean)walksSubtreeOnlyFromRootOrContextWithInt:(jint)analysis;

+ (jboolean)walksSubtreeOnlyMaybeAbsoluteWithInt:(jint)analysis;

+ (jboolean)walksUpWithInt:(jint)analysis;

+ (jboolean)walksUpOnlyWithInt:(jint)analysis;

#pragma mark Package-Private

+ (jboolean)analyzePredicateWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                       withInt:(jint)opPos
                                                       withInt:(jint)stepType;

+ (jboolean)functionProximateOrContainsProximateWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                                           withInt:(jint)opPos;

+ (jboolean)isProximateInnerExprWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                           withInt:(jint)opPos;

+ (OrgApacheXpathAxesAxesWalker *)loadOneWalkerWithOrgApacheXpathAxesWalkingIterator:(OrgApacheXpathAxesWalkingIterator *)lpi
                                                  withOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                                             withInt:(jint)stepOpCodePos;

+ (OrgApacheXpathPatternsStepPattern *)loadStepsWithOrgApacheXpathAxesMatchPatternIterator:(OrgApacheXpathAxesMatchPatternIterator *)mpi
                                                        withOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                                                   withInt:(jint)stepOpCodePos
                                                                                   withInt:(jint)stepIndex;

+ (OrgApacheXpathAxesAxesWalker *)loadWalkersWithOrgApacheXpathAxesWalkingIterator:(OrgApacheXpathAxesWalkingIterator *)lpi
                                                withOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                                                           withInt:(jint)stepOpCodePos
                                                                           withInt:(jint)stepIndex;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesWalkerFactory)

inline jboolean OrgApacheXpathAxesWalkerFactory_get_DEBUG_PATTERN_CREATION(void);
#define OrgApacheXpathAxesWalkerFactory_DEBUG_PATTERN_CREATION false
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, DEBUG_PATTERN_CREATION, jboolean)

inline jboolean OrgApacheXpathAxesWalkerFactory_get_DEBUG_WALKER_CREATION(void);
#define OrgApacheXpathAxesWalkerFactory_DEBUG_WALKER_CREATION false
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, DEBUG_WALKER_CREATION, jboolean)

inline jboolean OrgApacheXpathAxesWalkerFactory_get_DEBUG_ITERATOR_CREATION(void);
#define OrgApacheXpathAxesWalkerFactory_DEBUG_ITERATOR_CREATION false
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, DEBUG_ITERATOR_CREATION, jboolean)

inline jint OrgApacheXpathAxesWalkerFactory_get_BITS_COUNT(void);
#define OrgApacheXpathAxesWalkerFactory_BITS_COUNT 255
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BITS_COUNT, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BITS_RESERVED(void);
#define OrgApacheXpathAxesWalkerFactory_BITS_RESERVED 3840
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BITS_RESERVED, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_PREDICATE(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_PREDICATE 4096
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_PREDICATE, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_ANCESTOR(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_ANCESTOR 8192
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_ANCESTOR, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_ANCESTOR_OR_SELF(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_ANCESTOR_OR_SELF 16384
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_ANCESTOR_OR_SELF, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_ATTRIBUTE(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_ATTRIBUTE 32768
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_ATTRIBUTE, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_CHILD(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_CHILD 65536
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_CHILD, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_DESCENDANT(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_DESCENDANT 131072
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_DESCENDANT, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_DESCENDANT_OR_SELF(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_DESCENDANT_OR_SELF 262144
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_DESCENDANT_OR_SELF, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_FOLLOWING(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_FOLLOWING 524288
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_FOLLOWING, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_FOLLOWING_SIBLING(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_FOLLOWING_SIBLING 1048576
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_FOLLOWING_SIBLING, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_NAMESPACE(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_NAMESPACE 2097152
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_NAMESPACE, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_PARENT(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_PARENT 4194304
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_PARENT, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_PRECEDING(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_PRECEDING 8388608
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_PRECEDING, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_PRECEDING_SIBLING(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_PRECEDING_SIBLING 16777216
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_PRECEDING_SIBLING, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_SELF(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_SELF 33554432
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_SELF, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_FILTER(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_FILTER 67108864
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_FILTER, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_ROOT(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_ROOT 134217728
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_ROOT, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BITMASK_TRAVERSES_OUTSIDE_SUBTREE(void);
#define OrgApacheXpathAxesWalkerFactory_BITMASK_TRAVERSES_OUTSIDE_SUBTREE 234381312
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BITMASK_TRAVERSES_OUTSIDE_SUBTREE, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_BACKWARDS_SELF(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_BACKWARDS_SELF 268435456
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_BACKWARDS_SELF, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_ANY_DESCENDANT_FROM_ROOT(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_ANY_DESCENDANT_FROM_ROOT 536870912
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_ANY_DESCENDANT_FROM_ROOT, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_NODETEST_ANY(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_NODETEST_ANY 1073741824
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_NODETEST_ANY, jint)

inline jint OrgApacheXpathAxesWalkerFactory_get_BIT_MATCH_PATTERN(void);
#define OrgApacheXpathAxesWalkerFactory_BIT_MATCH_PATTERN ((jint) 0x80000000)
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesWalkerFactory, BIT_MATCH_PATTERN, jint)

FOUNDATION_EXPORT void OrgApacheXpathAxesWalkerFactory_init(OrgApacheXpathAxesWalkerFactory *self);

FOUNDATION_EXPORT OrgApacheXpathAxesWalkerFactory *new_OrgApacheXpathAxesWalkerFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesWalkerFactory *create_OrgApacheXpathAxesWalkerFactory_init(void);

FOUNDATION_EXPORT OrgApacheXpathAxesAxesWalker *OrgApacheXpathAxesWalkerFactory_loadOneWalkerWithOrgApacheXpathAxesWalkingIterator_withOrgApacheXpathCompilerCompiler_withInt_(OrgApacheXpathAxesWalkingIterator *lpi, OrgApacheXpathCompilerCompiler *compiler, jint stepOpCodePos);

FOUNDATION_EXPORT OrgApacheXpathAxesAxesWalker *OrgApacheXpathAxesWalkerFactory_loadWalkersWithOrgApacheXpathAxesWalkingIterator_withOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathAxesWalkingIterator *lpi, OrgApacheXpathCompilerCompiler *compiler, jint stepOpCodePos, jint stepIndex);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_isSetWithInt_withInt_(jint analysis, jint bits);

FOUNDATION_EXPORT void OrgApacheXpathAxesWalkerFactory_diagnoseIteratorWithNSString_withInt_withOrgApacheXpathCompilerCompiler_(NSString *name, jint analysis, OrgApacheXpathCompilerCompiler *compiler);

FOUNDATION_EXPORT id<OrgApacheXmlDtmDTMIterator> OrgApacheXpathAxesWalkerFactory_newDTMIteratorWithOrgApacheXpathCompilerCompiler_withInt_withBoolean_(OrgApacheXpathCompilerCompiler *compiler, jint opPos, jboolean isTopLevel);

FOUNDATION_EXPORT jint OrgApacheXpathAxesWalkerFactory_getAxisFromStepWithOrgApacheXpathCompilerCompiler_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint stepOpCodePos);

FOUNDATION_EXPORT jint OrgApacheXpathAxesWalkerFactory_getAnalysisBitFromAxesWithInt_(jint axis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_functionProximateOrContainsProximateWithOrgApacheXpathCompilerCompiler_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_isProximateInnerExprWithOrgApacheXpathCompilerCompiler_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_mightBeProximateWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint stepType);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_isDownwardAxisOfManyWithInt_(jint axis);

FOUNDATION_EXPORT OrgApacheXpathPatternsStepPattern *OrgApacheXpathAxesWalkerFactory_loadStepsWithOrgApacheXpathAxesMatchPatternIterator_withOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathAxesMatchPatternIterator *mpi, OrgApacheXpathCompilerCompiler *compiler, jint stepOpCodePos, jint stepIndex);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_analyzePredicateWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint stepType);

FOUNDATION_EXPORT NSString *OrgApacheXpathAxesWalkerFactory_getAnalysisStringWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_hasPredicateWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_isWildWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksAncestorsWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksAttributesWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksNamespacesWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksChildrenWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksDescendantsWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksSubtreeWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksSubtreeOnlyMaybeAbsoluteWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksSubtreeOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksFilteredListWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksSubtreeOnlyFromRootOrContextWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksInDocOrderWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksFollowingOnlyMaybeAbsoluteWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksUpWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksSidewaysWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksExtraNodesWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksExtraNodesOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_isAbsoluteWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksChildrenOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksChildrenAndExtraAndSelfOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksDescendantsAndExtraAndSelfOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksSelfOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksUpOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksDownOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_walksDownExtraOnlyWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_canSkipSubtreesWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_canCrissCrossWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_isNaturalDocOrderWithInt_(jint analysis);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesWalkerFactory_isOneStepWithInt_(jint analysis);

FOUNDATION_EXPORT jint OrgApacheXpathAxesWalkerFactory_getStepCountWithInt_(jint analysis);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesWalkerFactory)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesWalkerFactory")
