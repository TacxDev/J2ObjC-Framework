//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/LocPathIterator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesLocPathIterator")
#ifdef RESTRICT_OrgApacheXpathAxesLocPathIterator
#define INCLUDE_ALL_OrgApacheXpathAxesLocPathIterator 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesLocPathIterator 1
#endif
#undef RESTRICT_OrgApacheXpathAxesLocPathIterator

#if !defined (OrgApacheXpathAxesLocPathIterator_) && (INCLUDE_ALL_OrgApacheXpathAxesLocPathIterator || defined(INCLUDE_OrgApacheXpathAxesLocPathIterator))
#define OrgApacheXpathAxesLocPathIterator_

#define RESTRICT_OrgApacheXpathAxesPredicatedNodeTest 1
#define INCLUDE_OrgApacheXpathAxesPredicatedNodeTest 1
#include "org/apache/xpath/axes/PredicatedNodeTest.h"

#define RESTRICT_OrgApacheXmlDtmDTMIterator 1
#define INCLUDE_OrgApacheXmlDtmDTMIterator 1
#include "org/apache/xml/dtm/DTMIterator.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

#define RESTRICT_OrgApacheXpathAxesPathComponent 1
#define INCLUDE_OrgApacheXpathAxesPathComponent 1
#include "org/apache/xpath/axes/PathComponent.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class OrgApacheXmlDtmDTMManager;
@class OrgApacheXpathAxesIteratorPool;
@class OrgApacheXpathCompilerCompiler;
@class OrgApacheXpathObjectsXObject;
@class OrgApacheXpathXPathContext;
@class OrgApacheXpathXPathVisitor;
@protocol OrgApacheXmlDtmDTM;
@protocol OrgApacheXmlDtmDTMFilter;
@protocol OrgApacheXmlUtilsPrefixResolver;
@protocol OrgApacheXpathExpressionOwner;
@protocol OrgXmlSaxContentHandler;

@interface OrgApacheXpathAxesLocPathIterator : OrgApacheXpathAxesPredicatedNodeTest < NSCopying, OrgApacheXmlDtmDTMIterator, JavaIoSerializable, OrgApacheXpathAxesPathComponent > {
 @public
  jboolean m_allowDetach_;
  OrgApacheXpathAxesIteratorPool *m_clones_;
  id<OrgApacheXmlDtmDTM> m_cdtm_;
  jint m_stackFrame_;
  jint m_lastFetched_;
  jint m_context_;
  jint m_currentContextNode_;
  jint m_pos_;
  jint m_length_;
  OrgApacheXpathXPathContext *m_execContext_;
}

#pragma mark Public

- (void)allowDetachToReleaseWithBoolean:(jboolean)allowRelease;

- (id<OrgApacheXmlDtmDTMIterator>)asIteratorWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                                                   withInt:(jint)contextNode;

- (jint)asNodeWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

- (jboolean)bool__WithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

- (void)callVisitorsWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                       withOrgApacheXpathXPathVisitor:(OrgApacheXpathXPathVisitor *)visitor;

- (id<OrgApacheXmlDtmDTMIterator>)cloneWithReset;

- (void)detach;

- (OrgApacheXpathObjectsXObject *)executeWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

- (void)executeCharsToContentHandlerWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt
                                       withOrgXmlSaxContentHandler:(id<OrgXmlSaxContentHandler>)handler;

- (jint)getAnalysisBits;

- (jint)getAxis;

- (jint)getContext;

- (jint)getCurrentContextNode;

- (jint)getCurrentNode;

- (jint)getCurrentPos;

- (id<OrgApacheXmlDtmDTM>)getDTMWithInt:(jint)nodeHandle;

- (OrgApacheXmlDtmDTMManager *)getDTMManager;

- (jboolean)getExpandEntityReferences;

- (id<OrgApacheXmlDtmDTMFilter>)getFilter;

- (jboolean)getFoundLast;

- (jboolean)getIsTopLevel;

- (jint)getLastPosWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

- (jint)getLength;

- (id<OrgApacheXmlUtilsPrefixResolver>)getPrefixResolver;

- (jint)getRoot;

- (jint)getWhatToShow;

- (OrgApacheXpathXPathContext *)getXPathContext;

- (void)incrementCurrentPos;

- (jboolean)isDocOrdered;

- (jboolean)isFresh;

- (jboolean)isMutable;

- (jboolean)isNodesetExpr;

- (jint)itemWithInt:(jint)index;

- (jint)nextNode;

- (jint)previousNode;

- (void)reset;

- (void)runToWithInt:(jint)index;

- (void)setCurrentContextNodeWithInt:(jint)n;

- (void)setCurrentPosWithInt:(jint)i;

- (void)setEnvironmentWithId:(id)environment;

- (void)setIsTopLevelWithBoolean:(jboolean)b;

- (void)setItemWithInt:(jint)node
               withInt:(jint)index;

- (void)setRootWithInt:(jint)context
                withId:(id)environment;

- (void)setShouldCacheNodesWithBoolean:(jboolean)b;

- (jint)size;

#pragma mark Protected

- (instancetype)init;

- (instancetype)initWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                               withInt:(jint)opPos
                                               withInt:(jint)analysis;

- (instancetype)initWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                               withInt:(jint)opPos
                                               withInt:(jint)analysis
                                           withBoolean:(jboolean)shouldLoadWalkers;

- (instancetype)initWithOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)nscontext;

- (jint)returnNextNodeWithInt:(jint)nextNode;

- (void)setNextPositionWithInt:(jint)next;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithOrgApacheXpathAxesLocPathIterator:(OrgApacheXpathAxesLocPathIterator *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesLocPathIterator)

J2OBJC_FIELD_SETTER(OrgApacheXpathAxesLocPathIterator, m_clones_, OrgApacheXpathAxesIteratorPool *)
J2OBJC_FIELD_SETTER(OrgApacheXpathAxesLocPathIterator, m_cdtm_, id<OrgApacheXmlDtmDTM>)
J2OBJC_FIELD_SETTER(OrgApacheXpathAxesLocPathIterator, m_execContext_, OrgApacheXpathXPathContext *)

inline jlong OrgApacheXpathAxesLocPathIterator_get_serialVersionUID(void);
#define OrgApacheXpathAxesLocPathIterator_serialVersionUID -4602476357268405754LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesLocPathIterator, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXpathAxesLocPathIterator_init(OrgApacheXpathAxesLocPathIterator *self);

FOUNDATION_EXPORT void OrgApacheXpathAxesLocPathIterator_initWithOrgApacheXmlUtilsPrefixResolver_(OrgApacheXpathAxesLocPathIterator *self, id<OrgApacheXmlUtilsPrefixResolver> nscontext);

FOUNDATION_EXPORT void OrgApacheXpathAxesLocPathIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathAxesLocPathIterator *self, OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis);

FOUNDATION_EXPORT void OrgApacheXpathAxesLocPathIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_withBoolean_(OrgApacheXpathAxesLocPathIterator *self, OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis, jboolean shouldLoadWalkers);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesLocPathIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesLocPathIterator")
