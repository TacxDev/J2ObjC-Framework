//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/MatchPatternIterator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator")
#ifdef RESTRICT_OrgApacheXpathAxesMatchPatternIterator
#define INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator 1
#endif
#undef RESTRICT_OrgApacheXpathAxesMatchPatternIterator

#if !defined (OrgApacheXpathAxesMatchPatternIterator_) && (INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator || defined(INCLUDE_OrgApacheXpathAxesMatchPatternIterator))
#define OrgApacheXpathAxesMatchPatternIterator_

#define RESTRICT_OrgApacheXpathAxesLocPathIterator 1
#define INCLUDE_OrgApacheXpathAxesLocPathIterator 1
#include "org/apache/xpath/axes/LocPathIterator.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangShort;
@class OrgApacheXmlDtmDTMAxisTraverser;
@class OrgApacheXpathCompilerCompiler;
@class OrgApacheXpathPatternsStepPattern;
@class OrgApacheXpathXPathContext;
@protocol OrgApacheXmlUtilsPrefixResolver;

@interface OrgApacheXpathAxesMatchPatternIterator : OrgApacheXpathAxesLocPathIterator {
 @public
  OrgApacheXpathPatternsStepPattern *m_pattern_;
  jint m_superAxis_;
  OrgApacheXmlDtmDTMAxisTraverser *m_traverser_;
}

#pragma mark Public

- (jshort)acceptNodeWithInt:(jint)n
withOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

- (void)detach;

- (jint)nextNode;

- (void)setRootWithInt:(jint)context
                withId:(id)environment;

#pragma mark Protected

- (jint)getNextNode;

#pragma mark Package-Private

- (instancetype)initWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                               withInt:(jint)opPos
                                               withInt:(jint)analysis;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)arg0 NS_UNAVAILABLE;

- (instancetype)initWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)arg0
                                               withInt:(jint)arg1
                                               withInt:(jint)arg2
                                           withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesMatchPatternIterator)

J2OBJC_FIELD_SETTER(OrgApacheXpathAxesMatchPatternIterator, m_pattern_, OrgApacheXpathPatternsStepPattern *)
J2OBJC_FIELD_SETTER(OrgApacheXpathAxesMatchPatternIterator, m_traverser_, OrgApacheXmlDtmDTMAxisTraverser *)

inline jlong OrgApacheXpathAxesMatchPatternIterator_get_serialVersionUID(void);
#define OrgApacheXpathAxesMatchPatternIterator_serialVersionUID -5201153767396296474LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesMatchPatternIterator, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXpathAxesMatchPatternIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathAxesMatchPatternIterator *self, OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis);

FOUNDATION_EXPORT OrgApacheXpathAxesMatchPatternIterator *new_OrgApacheXpathAxesMatchPatternIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesMatchPatternIterator *create_OrgApacheXpathAxesMatchPatternIterator_initWithOrgApacheXpathCompilerCompiler_withInt_withInt_(OrgApacheXpathCompilerCompiler *compiler, jint opPos, jint analysis);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesMatchPatternIterator)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesMatchPatternIterator")
