//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/HasPositionalPredChecker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesHasPositionalPredChecker")
#ifdef RESTRICT_OrgApacheXpathAxesHasPositionalPredChecker
#define INCLUDE_ALL_OrgApacheXpathAxesHasPositionalPredChecker 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesHasPositionalPredChecker 1
#endif
#undef RESTRICT_OrgApacheXpathAxesHasPositionalPredChecker

#if !defined (OrgApacheXpathAxesHasPositionalPredChecker_) && (INCLUDE_ALL_OrgApacheXpathAxesHasPositionalPredChecker || defined(INCLUDE_OrgApacheXpathAxesHasPositionalPredChecker))
#define OrgApacheXpathAxesHasPositionalPredChecker_

#define RESTRICT_OrgApacheXpathXPathVisitor 1
#define INCLUDE_OrgApacheXpathXPathVisitor 1
#include "org/apache/xpath/XPathVisitor.h"

@class JavaLangBoolean;
@class OrgApacheXpathAxesLocPathIterator;
@class OrgApacheXpathExpression;
@class OrgApacheXpathFunctionsFunction;
@protocol OrgApacheXpathExpressionOwner;

@interface OrgApacheXpathAxesHasPositionalPredChecker : OrgApacheXpathXPathVisitor

#pragma mark Public

- (instancetype)init;

+ (jboolean)checkWithOrgApacheXpathAxesLocPathIterator:(OrgApacheXpathAxesLocPathIterator *)path;

- (jboolean)visitFunctionWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                       withOrgApacheXpathFunctionsFunction:(OrgApacheXpathFunctionsFunction *)func;

- (jboolean)visitPredicateWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                               withOrgApacheXpathExpression:(OrgApacheXpathExpression *)pred;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesHasPositionalPredChecker)

FOUNDATION_EXPORT void OrgApacheXpathAxesHasPositionalPredChecker_init(OrgApacheXpathAxesHasPositionalPredChecker *self);

FOUNDATION_EXPORT OrgApacheXpathAxesHasPositionalPredChecker *new_OrgApacheXpathAxesHasPositionalPredChecker_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesHasPositionalPredChecker *create_OrgApacheXpathAxesHasPositionalPredChecker_init(void);

FOUNDATION_EXPORT jboolean OrgApacheXpathAxesHasPositionalPredChecker_checkWithOrgApacheXpathAxesLocPathIterator_(OrgApacheXpathAxesLocPathIterator *path);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesHasPositionalPredChecker)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesHasPositionalPredChecker")
