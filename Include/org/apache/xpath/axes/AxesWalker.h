//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/AxesWalker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesAxesWalker")
#ifdef RESTRICT_OrgApacheXpathAxesAxesWalker
#define INCLUDE_ALL_OrgApacheXpathAxesAxesWalker 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesAxesWalker 1
#endif
#undef RESTRICT_OrgApacheXpathAxesAxesWalker

#if !defined (OrgApacheXpathAxesAxesWalker_) && (INCLUDE_ALL_OrgApacheXpathAxesAxesWalker || defined(INCLUDE_OrgApacheXpathAxesAxesWalker))
#define OrgApacheXpathAxesAxesWalker_

#define RESTRICT_OrgApacheXpathAxesPredicatedNodeTest 1
#define INCLUDE_OrgApacheXpathAxesPredicatedNodeTest 1
#include "org/apache/xpath/axes/PredicatedNodeTest.h"

#define RESTRICT_OrgApacheXpathAxesPathComponent 1
#define INCLUDE_OrgApacheXpathAxesPathComponent 1
#include "org/apache/xpath/axes/PathComponent.h"

#define RESTRICT_OrgApacheXpathExpressionOwner 1
#define INCLUDE_OrgApacheXpathExpressionOwner 1
#include "org/apache/xpath/ExpressionOwner.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaUtilVector;
@class OrgApacheXmlDtmDTMAxisTraverser;
@class OrgApacheXpathAxesLocPathIterator;
@class OrgApacheXpathAxesWalkingIterator;
@class OrgApacheXpathCompilerCompiler;
@class OrgApacheXpathExpression;
@class OrgApacheXpathXPathContext;
@class OrgApacheXpathXPathVisitor;
@protocol OrgApacheXmlDtmDTM;

@interface OrgApacheXpathAxesAxesWalker : OrgApacheXpathAxesPredicatedNodeTest < NSCopying, OrgApacheXpathAxesPathComponent, OrgApacheXpathExpressionOwner > {
 @public
  jint m_root_;
  jboolean m_isFresh_;
  OrgApacheXpathAxesAxesWalker *m_nextWalker_;
  OrgApacheXpathAxesAxesWalker *m_prevWalker_;
  jint m_axis_;
  OrgApacheXmlDtmDTMAxisTraverser *m_traverser_;
}

#pragma mark Public

- (instancetype)initWithOrgApacheXpathAxesLocPathIterator:(OrgApacheXpathAxesLocPathIterator *)locPathIterator
                                                  withInt:(jint)axis;

- (void)callVisitorsWithOrgApacheXpathExpressionOwner:(id<OrgApacheXpathExpressionOwner>)owner
                       withOrgApacheXpathXPathVisitor:(OrgApacheXpathXPathVisitor *)visitor;

- (id)java_clone;

- (jboolean)deepEqualsWithOrgApacheXpathExpression:(OrgApacheXpathExpression *)expr;

- (void)detach;

- (jint)getAnalysisBits;

- (jint)getAxis;

- (jint)getCurrentNode;

- (id<OrgApacheXmlDtmDTM>)getDTMWithInt:(jint)node;

- (OrgApacheXpathExpression *)getExpression;

- (jint)getLastPosWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)xctxt;

- (OrgApacheXpathAxesAxesWalker *)getNextWalker;

- (OrgApacheXpathAxesAxesWalker *)getPrevWalker;

- (jint)getRoot;

- (void)init__WithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                         withInt:(jint)opPos
                                         withInt:(jint)stepType OBJC_METHOD_FAMILY_NONE;

- (jboolean)isDocOrdered;

- (jint)nextNode;

- (void)setDefaultDTMWithOrgApacheXmlDtmDTM:(id<OrgApacheXmlDtmDTM>)dtm;

- (void)setExpressionWithOrgApacheXpathExpression:(OrgApacheXpathExpression *)exp;

- (void)setNextWalkerWithOrgApacheXpathAxesAxesWalker:(OrgApacheXpathAxesAxesWalker *)walker;

- (void)setPrevWalkerWithOrgApacheXpathAxesAxesWalker:(OrgApacheXpathAxesAxesWalker *)walker;

- (void)setRootWithInt:(jint)root;

- (OrgApacheXpathAxesWalkingIterator *)wi;

#pragma mark Protected

- (jint)getNextNode;

#pragma mark Package-Private

- (OrgApacheXpathAxesAxesWalker *)cloneDeepWithOrgApacheXpathAxesWalkingIterator:(OrgApacheXpathAxesWalkingIterator *)cloneOwner
                                                              withJavaUtilVector:(JavaUtilVector *)cloneList;

+ (OrgApacheXpathAxesAxesWalker *)findCloneWithOrgApacheXpathAxesAxesWalker:(OrgApacheXpathAxesAxesWalker *)key
                                                         withJavaUtilVector:(JavaUtilVector *)cloneList;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithOrgApacheXpathAxesLocPathIterator:(OrgApacheXpathAxesLocPathIterator *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesAxesWalker)

J2OBJC_FIELD_SETTER(OrgApacheXpathAxesAxesWalker, m_nextWalker_, OrgApacheXpathAxesAxesWalker *)
J2OBJC_FIELD_SETTER(OrgApacheXpathAxesAxesWalker, m_prevWalker_, OrgApacheXpathAxesAxesWalker *)
J2OBJC_FIELD_SETTER(OrgApacheXpathAxesAxesWalker, m_traverser_, OrgApacheXmlDtmDTMAxisTraverser *)

inline jlong OrgApacheXpathAxesAxesWalker_get_serialVersionUID(void);
#define OrgApacheXpathAxesAxesWalker_serialVersionUID -2966031951306601247LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesAxesWalker, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXpathAxesAxesWalker_initWithOrgApacheXpathAxesLocPathIterator_withInt_(OrgApacheXpathAxesAxesWalker *self, OrgApacheXpathAxesLocPathIterator *locPathIterator, jint axis);

FOUNDATION_EXPORT OrgApacheXpathAxesAxesWalker *new_OrgApacheXpathAxesAxesWalker_initWithOrgApacheXpathAxesLocPathIterator_withInt_(OrgApacheXpathAxesLocPathIterator *locPathIterator, jint axis) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesAxesWalker *create_OrgApacheXpathAxesAxesWalker_initWithOrgApacheXpathAxesLocPathIterator_withInt_(OrgApacheXpathAxesLocPathIterator *locPathIterator, jint axis);

FOUNDATION_EXPORT OrgApacheXpathAxesAxesWalker *OrgApacheXpathAxesAxesWalker_findCloneWithOrgApacheXpathAxesAxesWalker_withJavaUtilVector_(OrgApacheXpathAxesAxesWalker *key, JavaUtilVector *cloneList);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesAxesWalker)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesAxesWalker")
