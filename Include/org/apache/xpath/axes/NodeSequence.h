//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/axes/NodeSequence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathAxesNodeSequence")
#ifdef RESTRICT_OrgApacheXpathAxesNodeSequence
#define INCLUDE_ALL_OrgApacheXpathAxesNodeSequence 0
#else
#define INCLUDE_ALL_OrgApacheXpathAxesNodeSequence 1
#endif
#undef RESTRICT_OrgApacheXpathAxesNodeSequence

#if !defined (OrgApacheXpathAxesNodeSequence_) && (INCLUDE_ALL_OrgApacheXpathAxesNodeSequence || defined(INCLUDE_OrgApacheXpathAxesNodeSequence))
#define OrgApacheXpathAxesNodeSequence_

#define RESTRICT_OrgApacheXpathObjectsXObject 1
#define INCLUDE_OrgApacheXpathObjectsXObject 1
#include "org/apache/xpath/objects/XObject.h"

#define RESTRICT_OrgApacheXmlDtmDTMIterator 1
#define INCLUDE_OrgApacheXmlDtmDTMIterator 1
#include "org/apache/xml/dtm/DTMIterator.h"

#define RESTRICT_OrgApacheXpathAxesPathComponent 1
#define INCLUDE_OrgApacheXpathAxesPathComponent 1
#include "org/apache/xpath/axes/PathComponent.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaUtilVector;
@class OrgApacheXmlDtmDTMManager;
@class OrgApacheXmlUtilsNodeVector;
@class OrgApacheXpathAxesNodeSequence_IteratorCache;
@protocol OrgApacheXmlDtmDTM;

@interface OrgApacheXpathAxesNodeSequence : OrgApacheXpathObjectsXObject < OrgApacheXmlDtmDTMIterator, NSCopying, OrgApacheXpathAxesPathComponent > {
 @public
  jint m_last_;
  jint m_next_;
  id<OrgApacheXmlDtmDTMIterator> m_iter_;
  OrgApacheXmlDtmDTMManager *m_dtmMgr_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithId:(id)nodeVector;

- (void)allowDetachToReleaseWithBoolean:(jboolean)allowRelease;

- (id)java_clone;

- (id<OrgApacheXmlDtmDTMIterator>)cloneWithReset;

- (void)detach;

- (void)fixupVariablesWithJavaUtilVector:(JavaUtilVector *)vars
                                 withInt:(jint)globalsSize;

- (jint)getAnalysisBits;

- (jint)getAxis;

- (id<OrgApacheXmlDtmDTMIterator>)getContainedIter;

- (jint)getCurrentNode;

- (jint)getCurrentPos;

- (id<OrgApacheXmlDtmDTM>)getDTMWithInt:(jint)nodeHandle;

- (OrgApacheXmlDtmDTMManager *)getDTMManager;

- (jboolean)getExpandEntityReferences;

- (jint)getLength;

- (jint)getRoot;

- (jint)getWhatToShow;

- (jboolean)hasCache;

- (jboolean)isDocOrdered;

- (jboolean)isFresh;

- (jboolean)isMutable;

- (jint)itemWithInt:(jint)index;

- (jint)nextNode;

- (jint)previousNode;

- (void)reset;

- (void)runToWithInt:(jint)index;

- (void)setCurrentPosWithInt:(jint)i;

- (void)setItemWithInt:(jint)node
               withInt:(jint)index;

- (void)setIterWithOrgApacheXmlDtmDTMIterator:(id<OrgApacheXmlDtmDTMIterator>)iter;

- (void)setRootWithInt:(jint)nodeHandle
                withId:(id)environment;

- (void)setShouldCacheNodesWithBoolean:(jboolean)b;

#pragma mark Protected

- (jint)addNodeInDocOrderWithInt:(jint)node;

- (OrgApacheXpathAxesNodeSequence_IteratorCache *)getIteratorCache;

- (OrgApacheXmlUtilsNodeVector *)getVector;

- (void)setObjectWithId:(id)obj;

- (void)SetVectorWithOrgApacheXmlUtilsNodeVector:(OrgApacheXmlUtilsNodeVector *)v;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesNodeSequence)

J2OBJC_FIELD_SETTER(OrgApacheXpathAxesNodeSequence, m_iter_, id<OrgApacheXmlDtmDTMIterator>)
J2OBJC_FIELD_SETTER(OrgApacheXpathAxesNodeSequence, m_dtmMgr_, OrgApacheXmlDtmDTMManager *)

inline jlong OrgApacheXpathAxesNodeSequence_get_serialVersionUID(void);
#define OrgApacheXpathAxesNodeSequence_serialVersionUID 3866261934726581044LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathAxesNodeSequence, serialVersionUID, jlong)

FOUNDATION_EXPORT void OrgApacheXpathAxesNodeSequence_initWithId_(OrgApacheXpathAxesNodeSequence *self, id nodeVector);

FOUNDATION_EXPORT OrgApacheXpathAxesNodeSequence *new_OrgApacheXpathAxesNodeSequence_initWithId_(id nodeVector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesNodeSequence *create_OrgApacheXpathAxesNodeSequence_initWithId_(id nodeVector);

FOUNDATION_EXPORT void OrgApacheXpathAxesNodeSequence_init(OrgApacheXpathAxesNodeSequence *self);

FOUNDATION_EXPORT OrgApacheXpathAxesNodeSequence *new_OrgApacheXpathAxesNodeSequence_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesNodeSequence *create_OrgApacheXpathAxesNodeSequence_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesNodeSequence)

#endif

#if !defined (OrgApacheXpathAxesNodeSequence_IteratorCache_) && (INCLUDE_ALL_OrgApacheXpathAxesNodeSequence || defined(INCLUDE_OrgApacheXpathAxesNodeSequence_IteratorCache))
#define OrgApacheXpathAxesNodeSequence_IteratorCache_

@interface OrgApacheXpathAxesNodeSequence_IteratorCache : NSObject

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathAxesNodeSequence_IteratorCache)

FOUNDATION_EXPORT void OrgApacheXpathAxesNodeSequence_IteratorCache_init(OrgApacheXpathAxesNodeSequence_IteratorCache *self);

FOUNDATION_EXPORT OrgApacheXpathAxesNodeSequence_IteratorCache *new_OrgApacheXpathAxesNodeSequence_IteratorCache_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathAxesNodeSequence_IteratorCache *create_OrgApacheXpathAxesNodeSequence_IteratorCache_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathAxesNodeSequence_IteratorCache)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathAxesNodeSequence")
