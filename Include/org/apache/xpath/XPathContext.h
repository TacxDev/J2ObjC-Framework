//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/XPathContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathXPathContext")
#ifdef RESTRICT_OrgApacheXpathXPathContext
#define INCLUDE_ALL_OrgApacheXpathXPathContext 0
#else
#define INCLUDE_ALL_OrgApacheXpathXPathContext 1
#endif
#undef RESTRICT_OrgApacheXpathXPathContext

#if !defined (OrgApacheXpathXPathContext_) && (INCLUDE_ALL_OrgApacheXpathXPathContext || defined(INCLUDE_OrgApacheXpathXPathContext))
#define OrgApacheXpathXPathContext_

#define RESTRICT_OrgApacheXmlDtmDTMManager 1
#define INCLUDE_OrgApacheXmlDtmDTMManager 1
#include "org/apache/xml/dtm/DTMManager.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaUtilStack;
@class OrgApacheXmlUtilsIntStack;
@class OrgApacheXmlUtilsObjectStack;
@class OrgApacheXpathObjectsDTMXRTreeFrag;
@class OrgApacheXpathSourceTreeManager;
@class OrgApacheXpathVariableStack;
@class OrgApacheXpathXPathContext_XPathExpressionContext;
@protocol JavaxXmlTransformErrorListener;
@protocol JavaxXmlTransformSource;
@protocol JavaxXmlTransformSourceLocator;
@protocol JavaxXmlTransformURIResolver;
@protocol OrgApacheXalanExtensionsExpressionContext;
@protocol OrgApacheXmlDtmDTM;
@protocol OrgApacheXmlDtmDTMFilter;
@protocol OrgApacheXmlDtmDTMIterator;
@protocol OrgApacheXmlDtmDTMWSFilter;
@protocol OrgApacheXmlUtilsPrefixResolver;
@protocol OrgApacheXpathAxesSubContextList;
@protocol OrgW3cDomNode;
@protocol OrgXmlSaxXMLReader;

@interface OrgApacheXpathXPathContext : OrgApacheXmlDtmDTMManager {
 @public
  OrgApacheXmlUtilsIntStack *m_last_pushed_rtfdtm_;
  OrgApacheXmlDtmDTMManager *m_dtmManager_;
  OrgApacheXmlUtilsObjectStack *m_saxLocations_;
  id<OrgXmlSaxXMLReader> m_primaryReader_;
  OrgApacheXpathXPathContext_XPathExpressionContext *expressionContext_;
}

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithBoolean:(jboolean)recursiveVarContext;

- (instancetype)initWithId:(id)owner;

- (instancetype)initWithId:(id)owner
               withBoolean:(jboolean)recursiveVarContext;

- (id<OrgApacheXmlDtmDTM>)createDocumentFragment;

- (id<OrgApacheXmlDtmDTMIterator>)createDTMIteratorWithInt:(jint)node;

- (id<OrgApacheXmlDtmDTMIterator>)createDTMIteratorWithInt:(jint)whatToShow
                              withOrgApacheXmlDtmDTMFilter:(id<OrgApacheXmlDtmDTMFilter>)filter
                                               withBoolean:(jboolean)entityReferenceExpansion;

- (id<OrgApacheXmlDtmDTMIterator>)createDTMIteratorWithId:(id)xpathCompiler
                                                  withInt:(jint)pos;

- (id<OrgApacheXmlDtmDTMIterator>)createDTMIteratorWithNSString:(NSString *)xpathString
                            withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)presolver;

- (JavaUtilStack *)getAxesIteratorStackStacks;

- (jint)getContextNode;

- (id<OrgApacheXmlDtmDTMIterator>)getContextNodeList;

- (JavaUtilStack *)getContextNodeListsStack;

- (id<OrgApacheXmlDtmDTMIterator>)getContextNodes;

- (jint)getCurrentExpressionNode;

- (OrgApacheXmlUtilsIntStack *)getCurrentExpressionNodeStack;

- (jint)getCurrentNode;

- (id<OrgApacheXpathAxesSubContextList>)getCurrentNodeList;

- (OrgApacheXmlUtilsIntStack *)getCurrentNodeStack;

- (id<OrgApacheXmlDtmDTM>)getDTMWithInt:(jint)nodeHandle;

- (id<OrgApacheXmlDtmDTM>)getDTMWithJavaxXmlTransformSource:(id<JavaxXmlTransformSource>)source
                                                withBoolean:(jboolean)unique
                             withOrgApacheXmlDtmDTMWSFilter:(id<OrgApacheXmlDtmDTMWSFilter>)wsfilter
                                                withBoolean:(jboolean)incremental
                                                withBoolean:(jboolean)doIndexing;

- (jint)getDTMHandleFromNodeWithOrgW3cDomNode:(id<OrgW3cDomNode>)node;

- (jint)getDTMIdentityWithOrgApacheXmlDtmDTM:(id<OrgApacheXmlDtmDTM>)dtm;

- (OrgApacheXmlDtmDTMManager *)getDTMManager;

- (OrgApacheXpathObjectsDTMXRTreeFrag *)getDTMXRTreeFragWithInt:(jint)dtmIdentity;

- (id<JavaxXmlTransformErrorListener>)getErrorListener;

- (id<OrgApacheXalanExtensionsExpressionContext>)getExpressionContext;

- (id<OrgApacheXmlDtmDTM>)getGlobalRTFDTM;

- (jint)getIteratorRoot;

- (id<OrgApacheXmlUtilsPrefixResolver>)getNamespaceContext;

- (id)getOwnerObject;

- (jint)getPredicatePos;

- (jint)getPredicateRoot;

- (id<OrgXmlSaxXMLReader>)getPrimaryReader;

- (id<OrgApacheXmlDtmDTM>)getRTFDTM;

- (id<JavaxXmlTransformSourceLocator>)getSAXLocator;

- (OrgApacheXpathSourceTreeManager *)getSourceTreeManager;

- (id<OrgApacheXpathAxesSubContextList>)getSubContextList;

- (id<JavaxXmlTransformURIResolver>)getURIResolver;

- (OrgApacheXpathVariableStack *)getVarStack;

- (jboolean)isSecureProcessing;

- (void)popContextNodeList;

- (void)popCurrentExpressionNode;

- (void)popCurrentNode;

- (void)popCurrentNodeAndExpression;

- (void)popExpressionState;

- (void)popIteratorRoot;

- (void)popNamespaceContext;

- (void)popPredicatePos;

- (void)popPredicateRoot;

- (void)popRTFContext;

- (void)popSAXLocator;

- (void)popSubContextList;

- (void)pushContextNodeListWithOrgApacheXmlDtmDTMIterator:(id<OrgApacheXmlDtmDTMIterator>)nl;

- (void)pushCurrentExpressionNodeWithInt:(jint)n;

- (void)pushCurrentNodeWithInt:(jint)n;

- (void)pushCurrentNodeAndExpressionWithInt:(jint)cn
                                    withInt:(jint)en;

- (void)pushExpressionStateWithInt:(jint)cn
                           withInt:(jint)en
withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)nc;

- (void)pushIteratorRootWithInt:(jint)n;

- (void)pushNamespaceContextWithOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)pr;

- (void)pushNamespaceContextNull;

- (void)pushPredicatePosWithInt:(jint)n;

- (void)pushPredicateRootWithInt:(jint)n;

- (void)pushRTFContext;

- (void)pushSAXLocatorWithJavaxXmlTransformSourceLocator:(id<JavaxXmlTransformSourceLocator>)location;

- (void)pushSAXLocatorNull;

- (void)pushSubContextListWithOrgApacheXpathAxesSubContextList:(id<OrgApacheXpathAxesSubContextList>)iter;

- (jboolean)release__WithOrgApacheXmlDtmDTM:(id<OrgApacheXmlDtmDTM>)dtm
                                withBoolean:(jboolean)shouldHardDelete;

- (void)reset;

- (void)setAxesIteratorStackStacksWithJavaUtilStack:(JavaUtilStack *)s;

- (void)setContextNodeListsStackWithJavaUtilStack:(JavaUtilStack *)s;

- (void)setCurrentExpressionNodeStackWithOrgApacheXmlUtilsIntStack:(OrgApacheXmlUtilsIntStack *)nv;

- (void)setCurrentNodeStackWithOrgApacheXmlUtilsIntStack:(OrgApacheXmlUtilsIntStack *)nv;

- (void)setErrorListenerWithJavaxXmlTransformErrorListener:(id<JavaxXmlTransformErrorListener>)listener;

- (void)setNamespaceContextWithOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)pr;

- (void)setPrimaryReaderWithOrgXmlSaxXMLReader:(id<OrgXmlSaxXMLReader>)reader;

- (void)setSAXLocatorWithJavaxXmlTransformSourceLocator:(id<JavaxXmlTransformSourceLocator>)location;

- (void)setSecureProcessingWithBoolean:(jboolean)flag;

- (void)setSourceTreeManagerWithOrgApacheXpathSourceTreeManager:(OrgApacheXpathSourceTreeManager *)mgr;

- (void)setURIResolverWithJavaxXmlTransformURIResolver:(id<JavaxXmlTransformURIResolver>)resolver;

- (void)setVarStackWithOrgApacheXpathVariableStack:(OrgApacheXpathVariableStack *)varStack;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathXPathContext)

J2OBJC_FIELD_SETTER(OrgApacheXpathXPathContext, m_last_pushed_rtfdtm_, OrgApacheXmlUtilsIntStack *)
J2OBJC_FIELD_SETTER(OrgApacheXpathXPathContext, m_dtmManager_, OrgApacheXmlDtmDTMManager *)
J2OBJC_FIELD_SETTER(OrgApacheXpathXPathContext, m_saxLocations_, OrgApacheXmlUtilsObjectStack *)
J2OBJC_FIELD_SETTER(OrgApacheXpathXPathContext, m_primaryReader_, id<OrgXmlSaxXMLReader>)
J2OBJC_FIELD_SETTER(OrgApacheXpathXPathContext, expressionContext_, OrgApacheXpathXPathContext_XPathExpressionContext *)

inline jint OrgApacheXpathXPathContext_get_RECURSIONLIMIT(void);
#define OrgApacheXpathXPathContext_RECURSIONLIMIT 4096
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathXPathContext, RECURSIONLIMIT, jint)

FOUNDATION_EXPORT void OrgApacheXpathXPathContext_init(OrgApacheXpathXPathContext *self);

FOUNDATION_EXPORT OrgApacheXpathXPathContext *new_OrgApacheXpathXPathContext_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPathContext *create_OrgApacheXpathXPathContext_init(void);

FOUNDATION_EXPORT void OrgApacheXpathXPathContext_initWithBoolean_(OrgApacheXpathXPathContext *self, jboolean recursiveVarContext);

FOUNDATION_EXPORT OrgApacheXpathXPathContext *new_OrgApacheXpathXPathContext_initWithBoolean_(jboolean recursiveVarContext) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPathContext *create_OrgApacheXpathXPathContext_initWithBoolean_(jboolean recursiveVarContext);

FOUNDATION_EXPORT void OrgApacheXpathXPathContext_initWithId_(OrgApacheXpathXPathContext *self, id owner);

FOUNDATION_EXPORT OrgApacheXpathXPathContext *new_OrgApacheXpathXPathContext_initWithId_(id owner) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPathContext *create_OrgApacheXpathXPathContext_initWithId_(id owner);

FOUNDATION_EXPORT void OrgApacheXpathXPathContext_initWithId_withBoolean_(OrgApacheXpathXPathContext *self, id owner, jboolean recursiveVarContext);

FOUNDATION_EXPORT OrgApacheXpathXPathContext *new_OrgApacheXpathXPathContext_initWithId_withBoolean_(id owner, jboolean recursiveVarContext) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPathContext *create_OrgApacheXpathXPathContext_initWithId_withBoolean_(id owner, jboolean recursiveVarContext);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathXPathContext)

#endif

#if !defined (OrgApacheXpathXPathContext_XPathExpressionContext_) && (INCLUDE_ALL_OrgApacheXpathXPathContext || defined(INCLUDE_OrgApacheXpathXPathContext_XPathExpressionContext))
#define OrgApacheXpathXPathContext_XPathExpressionContext_

#define RESTRICT_OrgApacheXalanExtensionsExpressionContext 1
#define INCLUDE_OrgApacheXalanExtensionsExpressionContext 1
#include "org/apache/xalan/extensions/ExpressionContext.h"

@class JavaLangDouble;
@class OrgApacheXmlDtmDTMManager;
@class OrgApacheXmlUtilsQName;
@class OrgApacheXpathObjectsXObject;
@class OrgApacheXpathXPathContext;
@protocol JavaxXmlTransformErrorListener;
@protocol OrgW3cDomNode;
@protocol OrgW3cDomTraversalNodeIterator;

@interface OrgApacheXpathXPathContext_XPathExpressionContext : NSObject < OrgApacheXalanExtensionsExpressionContext >

#pragma mark Public

- (instancetype)initWithOrgApacheXpathXPathContext:(OrgApacheXpathXPathContext *)outer$;

- (id<OrgW3cDomNode>)getContextNode;

- (id<OrgW3cDomTraversalNodeIterator>)getContextNodes;

- (OrgApacheXmlDtmDTMManager *)getDTMManager;

- (id<JavaxXmlTransformErrorListener>)getErrorListener;

- (OrgApacheXpathObjectsXObject *)getVariableOrParamWithOrgApacheXmlUtilsQName:(OrgApacheXmlUtilsQName *)qname;

- (OrgApacheXpathXPathContext *)getXPathContext;

- (jdouble)toNumberWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

- (NSString *)toStringWithOrgW3cDomNode:(id<OrgW3cDomNode>)n;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathXPathContext_XPathExpressionContext)

FOUNDATION_EXPORT void OrgApacheXpathXPathContext_XPathExpressionContext_initWithOrgApacheXpathXPathContext_(OrgApacheXpathXPathContext_XPathExpressionContext *self, OrgApacheXpathXPathContext *outer$);

FOUNDATION_EXPORT OrgApacheXpathXPathContext_XPathExpressionContext *new_OrgApacheXpathXPathContext_XPathExpressionContext_initWithOrgApacheXpathXPathContext_(OrgApacheXpathXPathContext *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathXPathContext_XPathExpressionContext *create_OrgApacheXpathXPathContext_XPathExpressionContext_initWithOrgApacheXpathXPathContext_(OrgApacheXpathXPathContext *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathXPathContext_XPathExpressionContext)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathXPathContext")
