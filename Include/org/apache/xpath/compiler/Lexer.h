//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/xalan/third_party/android/platform/external/apache-xml/src/main/java/org/apache/xpath/compiler/Lexer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheXpathCompilerLexer")
#ifdef RESTRICT_OrgApacheXpathCompilerLexer
#define INCLUDE_ALL_OrgApacheXpathCompilerLexer 0
#else
#define INCLUDE_ALL_OrgApacheXpathCompilerLexer 1
#endif
#undef RESTRICT_OrgApacheXpathCompilerLexer

#if !defined (OrgApacheXpathCompilerLexer_) && (INCLUDE_ALL_OrgApacheXpathCompilerLexer || defined(INCLUDE_OrgApacheXpathCompilerLexer))
#define OrgApacheXpathCompilerLexer_

@class JavaLangInteger;
@class JavaUtilVector;
@class OrgApacheXpathCompilerCompiler;
@class OrgApacheXpathCompilerXPathParser;
@protocol OrgApacheXmlUtilsPrefixResolver;

@interface OrgApacheXpathCompilerLexer : NSObject {
 @public
  id<OrgApacheXmlUtilsPrefixResolver> m_namespaceContext_;
  OrgApacheXpathCompilerXPathParser *m_processor_;
}

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithOrgApacheXpathCompilerCompiler:(OrgApacheXpathCompilerCompiler *)compiler
                                 withOrgApacheXmlUtilsPrefixResolver:(id<OrgApacheXmlUtilsPrefixResolver>)resolver
                               withOrgApacheXpathCompilerXPathParser:(OrgApacheXpathCompilerXPathParser *)xpathProcessor;

- (jint)getKeywordTokenWithNSString:(NSString *)key;

- (void)tokenizeWithNSString:(NSString *)pat;

- (void)tokenizeWithNSString:(NSString *)pat
          withJavaUtilVector:(JavaUtilVector *)targetStrings;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheXpathCompilerLexer)

J2OBJC_FIELD_SETTER(OrgApacheXpathCompilerLexer, m_namespaceContext_, id<OrgApacheXmlUtilsPrefixResolver>)
J2OBJC_FIELD_SETTER(OrgApacheXpathCompilerLexer, m_processor_, OrgApacheXpathCompilerXPathParser *)

inline jint OrgApacheXpathCompilerLexer_get_TARGETEXTRA(void);
#define OrgApacheXpathCompilerLexer_TARGETEXTRA 10000
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheXpathCompilerLexer, TARGETEXTRA, jint)

FOUNDATION_EXPORT void OrgApacheXpathCompilerLexer_initPackagePrivateWithOrgApacheXpathCompilerCompiler_withOrgApacheXmlUtilsPrefixResolver_withOrgApacheXpathCompilerXPathParser_(OrgApacheXpathCompilerLexer *self, OrgApacheXpathCompilerCompiler *compiler, id<OrgApacheXmlUtilsPrefixResolver> resolver, OrgApacheXpathCompilerXPathParser *xpathProcessor);

FOUNDATION_EXPORT OrgApacheXpathCompilerLexer *new_OrgApacheXpathCompilerLexer_initPackagePrivateWithOrgApacheXpathCompilerCompiler_withOrgApacheXmlUtilsPrefixResolver_withOrgApacheXpathCompilerXPathParser_(OrgApacheXpathCompilerCompiler *compiler, id<OrgApacheXmlUtilsPrefixResolver> resolver, OrgApacheXpathCompilerXPathParser *xpathProcessor) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheXpathCompilerLexer *create_OrgApacheXpathCompilerLexer_initPackagePrivateWithOrgApacheXpathCompilerCompiler_withOrgApacheXmlUtilsPrefixResolver_withOrgApacheXpathCompilerXPathParser_(OrgApacheXpathCompilerCompiler *compiler, id<OrgApacheXmlUtilsPrefixResolver> resolver, OrgApacheXpathCompilerXPathParser *xpathProcessor);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheXpathCompilerLexer)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgApacheXpathCompilerLexer")
