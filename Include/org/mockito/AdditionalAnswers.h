//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/AdditionalAnswers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoAdditionalAnswers")
#ifdef RESTRICT_OrgMockitoAdditionalAnswers
#define INCLUDE_ALL_OrgMockitoAdditionalAnswers 0
#else
#define INCLUDE_ALL_OrgMockitoAdditionalAnswers 1
#endif
#undef RESTRICT_OrgMockitoAdditionalAnswers

#if !defined (OrgMockitoAdditionalAnswers_) && (INCLUDE_ALL_OrgMockitoAdditionalAnswers || defined(INCLUDE_OrgMockitoAdditionalAnswers))
#define OrgMockitoAdditionalAnswers_

@class JavaLangInteger;
@class JavaLangLong;
@protocol JavaUtilCollection;
@protocol OrgMockitoStubbingAnswer1;
@protocol OrgMockitoStubbingAnswer2;
@protocol OrgMockitoStubbingAnswer3;
@protocol OrgMockitoStubbingAnswer4;
@protocol OrgMockitoStubbingAnswer5;
@protocol OrgMockitoStubbingAnswer;
@protocol OrgMockitoStubbingVoidAnswer1;
@protocol OrgMockitoStubbingVoidAnswer2;
@protocol OrgMockitoStubbingVoidAnswer3;
@protocol OrgMockitoStubbingVoidAnswer4;
@protocol OrgMockitoStubbingVoidAnswer5;

@interface OrgMockitoAdditionalAnswers : NSObject

#pragma mark Public

- (instancetype)init;

+ (id<OrgMockitoStubbingAnswer>)answerWithOrgMockitoStubbingAnswer1:(id<OrgMockitoStubbingAnswer1>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerWithOrgMockitoStubbingAnswer2:(id<OrgMockitoStubbingAnswer2>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerWithOrgMockitoStubbingAnswer3:(id<OrgMockitoStubbingAnswer3>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerWithOrgMockitoStubbingAnswer4:(id<OrgMockitoStubbingAnswer4>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerWithOrgMockitoStubbingAnswer5:(id<OrgMockitoStubbingAnswer5>)answer;

+ (id<OrgMockitoStubbingAnswer>)answersWithDelayWithLong:(jlong)sleepyTime
                            withOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerVoidWithOrgMockitoStubbingVoidAnswer1:(id<OrgMockitoStubbingVoidAnswer1>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerVoidWithOrgMockitoStubbingVoidAnswer2:(id<OrgMockitoStubbingVoidAnswer2>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerVoidWithOrgMockitoStubbingVoidAnswer3:(id<OrgMockitoStubbingVoidAnswer3>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerVoidWithOrgMockitoStubbingVoidAnswer4:(id<OrgMockitoStubbingVoidAnswer4>)answer;

+ (id<OrgMockitoStubbingAnswer>)answerVoidWithOrgMockitoStubbingVoidAnswer5:(id<OrgMockitoStubbingVoidAnswer5>)answer;

+ (id<OrgMockitoStubbingAnswer>)delegatesToWithId:(id)delegate;

+ (id<OrgMockitoStubbingAnswer>)returnsArgAtWithInt:(jint)position;

+ (id<OrgMockitoStubbingAnswer>)returnsElementsOfWithJavaUtilCollection:(id<JavaUtilCollection>)elements;

+ (id<OrgMockitoStubbingAnswer>)returnsFirstArg;

+ (id<OrgMockitoStubbingAnswer>)returnsLastArg;

+ (id<OrgMockitoStubbingAnswer>)returnsSecondArg;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoAdditionalAnswers)

FOUNDATION_EXPORT void OrgMockitoAdditionalAnswers_init(OrgMockitoAdditionalAnswers *self);

FOUNDATION_EXPORT OrgMockitoAdditionalAnswers *new_OrgMockitoAdditionalAnswers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoAdditionalAnswers *create_OrgMockitoAdditionalAnswers_init(void);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_returnsFirstArg(void);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_returnsSecondArg(void);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_returnsLastArg(void);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_returnsArgAtWithInt_(jint position);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_delegatesToWithId_(id delegate);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_returnsElementsOfWithJavaUtilCollection_(id<JavaUtilCollection> elements);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answersWithDelayWithLong_withOrgMockitoStubbingAnswer_(jlong sleepyTime, id<OrgMockitoStubbingAnswer> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerWithOrgMockitoStubbingAnswer1_(id<OrgMockitoStubbingAnswer1> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerVoidWithOrgMockitoStubbingVoidAnswer1_(id<OrgMockitoStubbingVoidAnswer1> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerWithOrgMockitoStubbingAnswer2_(id<OrgMockitoStubbingAnswer2> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerVoidWithOrgMockitoStubbingVoidAnswer2_(id<OrgMockitoStubbingVoidAnswer2> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerWithOrgMockitoStubbingAnswer3_(id<OrgMockitoStubbingAnswer3> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerVoidWithOrgMockitoStubbingVoidAnswer3_(id<OrgMockitoStubbingVoidAnswer3> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerWithOrgMockitoStubbingAnswer4_(id<OrgMockitoStubbingAnswer4> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerVoidWithOrgMockitoStubbingVoidAnswer4_(id<OrgMockitoStubbingVoidAnswer4> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerWithOrgMockitoStubbingAnswer5_(id<OrgMockitoStubbingAnswer5> answer);

FOUNDATION_EXPORT id<OrgMockitoStubbingAnswer> OrgMockitoAdditionalAnswers_answerVoidWithOrgMockitoStubbingVoidAnswer5_(id<OrgMockitoStubbingVoidAnswer5> answer);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoAdditionalAnswers)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoAdditionalAnswers")
