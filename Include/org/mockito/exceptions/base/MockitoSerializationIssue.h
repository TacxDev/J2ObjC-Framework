//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/exceptions/base/MockitoSerializationIssue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoExceptionsBaseMockitoSerializationIssue")
#ifdef RESTRICT_OrgMockitoExceptionsBaseMockitoSerializationIssue
#define INCLUDE_ALL_OrgMockitoExceptionsBaseMockitoSerializationIssue 0
#else
#define INCLUDE_ALL_OrgMockitoExceptionsBaseMockitoSerializationIssue 1
#endif
#undef RESTRICT_OrgMockitoExceptionsBaseMockitoSerializationIssue

#if !defined (OrgMockitoExceptionsBaseMockitoSerializationIssue_) && (INCLUDE_ALL_OrgMockitoExceptionsBaseMockitoSerializationIssue || defined(INCLUDE_OrgMockitoExceptionsBaseMockitoSerializationIssue))
#define OrgMockitoExceptionsBaseMockitoSerializationIssue_

#define RESTRICT_JavaIoObjectStreamException 1
#define INCLUDE_JavaIoObjectStreamException 1
#include "java/io/ObjectStreamException.h"

@class IOSObjectArray;
@class JavaLangException;

@interface OrgMockitoExceptionsBaseMockitoSerializationIssue : JavaIoObjectStreamException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangException:(JavaLangException *)cause;

- (IOSObjectArray *)getUnfilteredStackTrace;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgMockitoExceptionsBaseMockitoSerializationIssue)

FOUNDATION_EXPORT void OrgMockitoExceptionsBaseMockitoSerializationIssue_initWithNSString_withJavaLangException_(OrgMockitoExceptionsBaseMockitoSerializationIssue *self, NSString *message, JavaLangException *cause);

FOUNDATION_EXPORT OrgMockitoExceptionsBaseMockitoSerializationIssue *new_OrgMockitoExceptionsBaseMockitoSerializationIssue_initWithNSString_withJavaLangException_(NSString *message, JavaLangException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoExceptionsBaseMockitoSerializationIssue *create_OrgMockitoExceptionsBaseMockitoSerializationIssue_initWithNSString_withJavaLangException_(NSString *message, JavaLangException *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoExceptionsBaseMockitoSerializationIssue)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoExceptionsBaseMockitoSerializationIssue")
