//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/plugins/MockMaker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoPluginsMockMaker")
#ifdef RESTRICT_OrgMockitoPluginsMockMaker
#define INCLUDE_ALL_OrgMockitoPluginsMockMaker 0
#else
#define INCLUDE_ALL_OrgMockitoPluginsMockMaker 1
#endif
#undef RESTRICT_OrgMockitoPluginsMockMaker

#if !defined (OrgMockitoPluginsMockMaker_) && (INCLUDE_ALL_OrgMockitoPluginsMockMaker || defined(INCLUDE_OrgMockitoPluginsMockMaker))
#define OrgMockitoPluginsMockMaker_

@class IOSClass;
@protocol OrgMockitoInvocationMockHandler;
@protocol OrgMockitoMockMockCreationSettings;
@protocol OrgMockitoPluginsMockMaker_TypeMockability;

@protocol OrgMockitoPluginsMockMaker < JavaObject >

- (id)createMockWithOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)settings
                   withOrgMockitoInvocationMockHandler:(id<OrgMockitoInvocationMockHandler>)handler;

- (id<OrgMockitoInvocationMockHandler>)getHandlerWithId:(id)mock;

- (void)resetMockWithId:(id)mock
withOrgMockitoInvocationMockHandler:(id<OrgMockitoInvocationMockHandler>)newHandler
withOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)settings;

- (id<OrgMockitoPluginsMockMaker_TypeMockability>)isTypeMockableWithIOSClass:(IOSClass *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoPluginsMockMaker)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoPluginsMockMaker)

#endif

#if !defined (OrgMockitoPluginsMockMaker_TypeMockability_) && (INCLUDE_ALL_OrgMockitoPluginsMockMaker || defined(INCLUDE_OrgMockitoPluginsMockMaker_TypeMockability))
#define OrgMockitoPluginsMockMaker_TypeMockability_

@class JavaLangBoolean;

@protocol OrgMockitoPluginsMockMaker_TypeMockability < JavaObject >

- (jboolean)mockable;

- (NSString *)nonMockableReason;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoPluginsMockMaker_TypeMockability)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoPluginsMockMaker_TypeMockability)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoPluginsMockMaker")
