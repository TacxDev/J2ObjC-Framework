//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/MockitoAnnotations.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoMockitoAnnotations")
#ifdef RESTRICT_OrgMockitoMockitoAnnotations
#define INCLUDE_ALL_OrgMockitoMockitoAnnotations 0
#else
#define INCLUDE_ALL_OrgMockitoMockitoAnnotations 1
#endif
#undef RESTRICT_OrgMockitoMockitoAnnotations

#if !defined (OrgMockitoMockitoAnnotations_) && (INCLUDE_ALL_OrgMockitoMockitoAnnotations || defined(INCLUDE_OrgMockitoMockitoAnnotations))
#define OrgMockitoMockitoAnnotations_

@interface OrgMockitoMockitoAnnotations : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)initMocksWithId:(id)testClass OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoMockitoAnnotations)

FOUNDATION_EXPORT void OrgMockitoMockitoAnnotations_init(OrgMockitoMockitoAnnotations *self);

FOUNDATION_EXPORT OrgMockitoMockitoAnnotations *new_OrgMockitoMockitoAnnotations_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoMockitoAnnotations *create_OrgMockitoMockitoAnnotations_init(void);

FOUNDATION_EXPORT void OrgMockitoMockitoAnnotations_initMocksWithId_(id testClass);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoMockitoAnnotations)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoMockitoAnnotations")
