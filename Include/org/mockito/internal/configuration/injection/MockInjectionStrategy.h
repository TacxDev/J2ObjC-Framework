//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/configuration/injection/MockInjectionStrategy.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy")
#ifdef RESTRICT_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy
#define INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy 0
#else
#define INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy 1
#endif
#undef RESTRICT_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy

#if !defined (OrgMockitoInternalConfigurationInjectionMockInjectionStrategy_) && (INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy || defined(INCLUDE_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy))
#define OrgMockitoInternalConfigurationInjectionMockInjectionStrategy_

@class JavaLangBoolean;
@class JavaLangReflectField;
@protocol JavaUtilSet;

@interface OrgMockitoInternalConfigurationInjectionMockInjectionStrategy : NSObject

#pragma mark Public

- (instancetype)init;

+ (OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *)nop;

- (jboolean)processWithJavaLangReflectField:(JavaLangReflectField *)onField
                                     withId:(id)fieldOwnedBy
                            withJavaUtilSet:(id<JavaUtilSet>)mockCandidates;

- (OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *)thenTryWithOrgMockitoInternalConfigurationInjectionMockInjectionStrategy:(OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *)strategy;

#pragma mark Protected

- (jboolean)processInjectionWithJavaLangReflectField:(JavaLangReflectField *)field
                                              withId:(id)fieldOwner
                                     withJavaUtilSet:(id<JavaUtilSet>)mockCandidates;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalConfigurationInjectionMockInjectionStrategy)

FOUNDATION_EXPORT void OrgMockitoInternalConfigurationInjectionMockInjectionStrategy_init(OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *self);

FOUNDATION_EXPORT OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *OrgMockitoInternalConfigurationInjectionMockInjectionStrategy_nop(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalConfigurationInjectionMockInjectionStrategy)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationInjectionMockInjectionStrategy")
