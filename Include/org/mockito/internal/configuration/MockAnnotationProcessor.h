//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/configuration/MockAnnotationProcessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationMockAnnotationProcessor")
#ifdef RESTRICT_OrgMockitoInternalConfigurationMockAnnotationProcessor
#define INCLUDE_ALL_OrgMockitoInternalConfigurationMockAnnotationProcessor 0
#else
#define INCLUDE_ALL_OrgMockitoInternalConfigurationMockAnnotationProcessor 1
#endif
#undef RESTRICT_OrgMockitoInternalConfigurationMockAnnotationProcessor

#if !defined (OrgMockitoInternalConfigurationMockAnnotationProcessor_) && (INCLUDE_ALL_OrgMockitoInternalConfigurationMockAnnotationProcessor || defined(INCLUDE_OrgMockitoInternalConfigurationMockAnnotationProcessor))
#define OrgMockitoInternalConfigurationMockAnnotationProcessor_

#define RESTRICT_OrgMockitoInternalConfigurationFieldAnnotationProcessor 1
#define INCLUDE_OrgMockitoInternalConfigurationFieldAnnotationProcessor 1
#include "org/mockito/internal/configuration/FieldAnnotationProcessor.h"

@class IOSClass;
@class JavaLangReflectField;
@protocol OrgMockitoMock;

@interface OrgMockitoInternalConfigurationMockAnnotationProcessor : NSObject < OrgMockitoInternalConfigurationFieldAnnotationProcessor >

#pragma mark Public

- (instancetype)init;

- (id)processWithJavaLangAnnotationAnnotation:(id<OrgMockitoMock>)annotation
                     withJavaLangReflectField:(JavaLangReflectField *)field;

+ (id)processAnnotationForMockWithOrgMockitoMock:(id<OrgMockitoMock>)annotation
                                    withIOSClass:(IOSClass *)type
                                    withNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalConfigurationMockAnnotationProcessor)

FOUNDATION_EXPORT void OrgMockitoInternalConfigurationMockAnnotationProcessor_init(OrgMockitoInternalConfigurationMockAnnotationProcessor *self);

FOUNDATION_EXPORT OrgMockitoInternalConfigurationMockAnnotationProcessor *new_OrgMockitoInternalConfigurationMockAnnotationProcessor_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalConfigurationMockAnnotationProcessor *create_OrgMockitoInternalConfigurationMockAnnotationProcessor_init(void);

FOUNDATION_EXPORT id OrgMockitoInternalConfigurationMockAnnotationProcessor_processAnnotationForMockWithOrgMockitoMock_withIOSClass_withNSString_(id<OrgMockitoMock> annotation, IOSClass *type, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalConfigurationMockAnnotationProcessor)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationMockAnnotationProcessor")
