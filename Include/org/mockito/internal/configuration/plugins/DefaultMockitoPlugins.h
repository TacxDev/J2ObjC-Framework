//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/configuration/plugins/DefaultMockitoPlugins.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins")
#ifdef RESTRICT_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins
#define INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins 0
#else
#define INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins 1
#endif
#undef RESTRICT_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins

#if !defined (OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins_) && (INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins || defined(INCLUDE_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins))
#define OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins_

#define RESTRICT_OrgMockitoPluginsMockitoPlugins 1
#define INCLUDE_OrgMockitoPluginsMockitoPlugins 1
#include "org/mockito/plugins/MockitoPlugins.h"

@class IOSClass;
@protocol OrgMockitoPluginsMockMaker;

@interface OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins : NSObject < OrgMockitoPluginsMockitoPlugins >

#pragma mark Public

- (id)getDefaultPluginWithIOSClass:(IOSClass *)pluginType;

- (id<OrgMockitoPluginsMockMaker>)getInlineMockMaker;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

- (NSString *)getDefaultPluginClassWithNSString:(NSString *)classOrAlias;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins)

inline NSString *OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins_get_INLINE_ALIAS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins_INLINE_ALIAS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins, INLINE_ALIAS, NSString *)

FOUNDATION_EXPORT void OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins_initPackagePrivate(OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins *self);

FOUNDATION_EXPORT OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins *new_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins *create_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalConfigurationPluginsDefaultMockitoPlugins")
