//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/junit/ArgMismatchFinder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalJunitArgMismatchFinder")
#ifdef RESTRICT_OrgMockitoInternalJunitArgMismatchFinder
#define INCLUDE_ALL_OrgMockitoInternalJunitArgMismatchFinder 0
#else
#define INCLUDE_ALL_OrgMockitoInternalJunitArgMismatchFinder 1
#endif
#undef RESTRICT_OrgMockitoInternalJunitArgMismatchFinder

#if !defined (OrgMockitoInternalJunitArgMismatchFinder_) && (INCLUDE_ALL_OrgMockitoInternalJunitArgMismatchFinder || defined(INCLUDE_OrgMockitoInternalJunitArgMismatchFinder))
#define OrgMockitoInternalJunitArgMismatchFinder_

@class OrgMockitoInternalJunitStubbingArgMismatches;
@protocol JavaLangIterable;

@interface OrgMockitoInternalJunitArgMismatchFinder : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

- (OrgMockitoInternalJunitStubbingArgMismatches *)getStubbingArgMismatchesWithJavaLangIterable:(id<JavaLangIterable>)mocks;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalJunitArgMismatchFinder)

FOUNDATION_EXPORT void OrgMockitoInternalJunitArgMismatchFinder_initPackagePrivate(OrgMockitoInternalJunitArgMismatchFinder *self);

FOUNDATION_EXPORT OrgMockitoInternalJunitArgMismatchFinder *new_OrgMockitoInternalJunitArgMismatchFinder_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalJunitArgMismatchFinder *create_OrgMockitoInternalJunitArgMismatchFinder_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalJunitArgMismatchFinder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalJunitArgMismatchFinder")
