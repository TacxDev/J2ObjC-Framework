//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/util/collections/HashCodeAndEqualsMockWrapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper")
#ifdef RESTRICT_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper
#define INCLUDE_ALL_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper 0
#else
#define INCLUDE_ALL_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper 1
#endif
#undef RESTRICT_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper

#if !defined (OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper_) && (INCLUDE_ALL_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper || defined(INCLUDE_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper))
#define OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper_

@class JavaLangBoolean;
@class JavaLangInteger;

@interface OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper : NSObject

#pragma mark Public

- (instancetype)initWithId:(id)mockInstance;

- (jboolean)isEqual:(id)o;

- (id)get;

- (NSUInteger)hash;

+ (OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper *)ofWithId:(id)mock;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper)

FOUNDATION_EXPORT void OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper_initWithId_(OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper *self, id mockInstance);

FOUNDATION_EXPORT OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper *new_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper_initWithId_(id mockInstance) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper *create_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper_initWithId_(id mockInstance);

FOUNDATION_EXPORT OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper *OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper_ofWithId_(id mock);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalUtilCollectionsHashCodeAndEqualsMockWrapper")
