//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/util/reflection/BeanPropertySetter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionBeanPropertySetter")
#ifdef RESTRICT_OrgMockitoInternalUtilReflectionBeanPropertySetter
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionBeanPropertySetter 0
#else
#define INCLUDE_ALL_OrgMockitoInternalUtilReflectionBeanPropertySetter 1
#endif
#undef RESTRICT_OrgMockitoInternalUtilReflectionBeanPropertySetter

#if !defined (OrgMockitoInternalUtilReflectionBeanPropertySetter_) && (INCLUDE_ALL_OrgMockitoInternalUtilReflectionBeanPropertySetter || defined(INCLUDE_OrgMockitoInternalUtilReflectionBeanPropertySetter))
#define OrgMockitoInternalUtilReflectionBeanPropertySetter_

@class JavaLangBoolean;
@class JavaLangReflectField;

@interface OrgMockitoInternalUtilReflectionBeanPropertySetter : NSObject

#pragma mark Public

- (instancetype)initWithId:(id)target
  withJavaLangReflectField:(JavaLangReflectField *)propertyField;

- (instancetype)initWithId:(id)target
  withJavaLangReflectField:(JavaLangReflectField *)propertyField
               withBoolean:(jboolean)reportNoSetterFound;

- (jboolean)setWithId:(id)value;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilReflectionBeanPropertySetter)

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionBeanPropertySetter_initWithId_withJavaLangReflectField_withBoolean_(OrgMockitoInternalUtilReflectionBeanPropertySetter *self, id target, JavaLangReflectField *propertyField, jboolean reportNoSetterFound);

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionBeanPropertySetter *new_OrgMockitoInternalUtilReflectionBeanPropertySetter_initWithId_withJavaLangReflectField_withBoolean_(id target, JavaLangReflectField *propertyField, jboolean reportNoSetterFound) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionBeanPropertySetter *create_OrgMockitoInternalUtilReflectionBeanPropertySetter_initWithId_withJavaLangReflectField_withBoolean_(id target, JavaLangReflectField *propertyField, jboolean reportNoSetterFound);

FOUNDATION_EXPORT void OrgMockitoInternalUtilReflectionBeanPropertySetter_initWithId_withJavaLangReflectField_(OrgMockitoInternalUtilReflectionBeanPropertySetter *self, id target, JavaLangReflectField *propertyField);

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionBeanPropertySetter *new_OrgMockitoInternalUtilReflectionBeanPropertySetter_initWithId_withJavaLangReflectField_(id target, JavaLangReflectField *propertyField) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilReflectionBeanPropertySetter *create_OrgMockitoInternalUtilReflectionBeanPropertySetter_initWithId_withJavaLangReflectField_(id target, JavaLangReflectField *propertyField);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilReflectionBeanPropertySetter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalUtilReflectionBeanPropertySetter")
