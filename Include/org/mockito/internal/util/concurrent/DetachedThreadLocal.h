//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/util/concurrent/DetachedThreadLocal.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalUtilConcurrentDetachedThreadLocal")
#ifdef RESTRICT_OrgMockitoInternalUtilConcurrentDetachedThreadLocal
#define INCLUDE_ALL_OrgMockitoInternalUtilConcurrentDetachedThreadLocal 0
#else
#define INCLUDE_ALL_OrgMockitoInternalUtilConcurrentDetachedThreadLocal 1
#endif
#undef RESTRICT_OrgMockitoInternalUtilConcurrentDetachedThreadLocal

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoInternalUtilConcurrentDetachedThreadLocal_) && (INCLUDE_ALL_OrgMockitoInternalUtilConcurrentDetachedThreadLocal || defined(INCLUDE_OrgMockitoInternalUtilConcurrentDetachedThreadLocal))
#define OrgMockitoInternalUtilConcurrentDetachedThreadLocal_

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

@class JavaLangThread;
@class OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner;
@class OrgMockitoInternalUtilConcurrentWeakConcurrentMap;

@interface OrgMockitoInternalUtilConcurrentDetachedThreadLocal : NSObject < JavaLangRunnable > {
 @public
  OrgMockitoInternalUtilConcurrentWeakConcurrentMap *map_;
}

#pragma mark Public

- (instancetype)initWithOrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner:(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *)cleaner;

- (void)clear;

- (void)clearAll;

- (void)defineWithJavaLangThread:(JavaLangThread *)thread
                          withId:(id)value;

- (id)fetchFromWithJavaLangThread:(JavaLangThread *)thread;

- (id)get;

- (id)getWithJavaLangThread:(JavaLangThread *)thread;

- (OrgMockitoInternalUtilConcurrentWeakConcurrentMap *)getBackingMap;

- (id)pushToWithJavaLangThread:(JavaLangThread *)thread;

- (void)run;

- (void)setWithId:(id)value;

#pragma mark Protected

- (id)inheritValueWithId:(id)value;

- (id)initialValueWithJavaLangThread:(JavaLangThread *)thread OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilConcurrentDetachedThreadLocal)

J2OBJC_FIELD_SETTER(OrgMockitoInternalUtilConcurrentDetachedThreadLocal, map_, OrgMockitoInternalUtilConcurrentWeakConcurrentMap *)

FOUNDATION_EXPORT void OrgMockitoInternalUtilConcurrentDetachedThreadLocal_initWithOrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_(OrgMockitoInternalUtilConcurrentDetachedThreadLocal *self, OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *cleaner);

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentDetachedThreadLocal *new_OrgMockitoInternalUtilConcurrentDetachedThreadLocal_initWithOrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *cleaner) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentDetachedThreadLocal *create_OrgMockitoInternalUtilConcurrentDetachedThreadLocal_initWithOrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *cleaner);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilConcurrentDetachedThreadLocal)

#endif

#if !defined (OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_) && (INCLUDE_ALL_OrgMockitoInternalUtilConcurrentDetachedThreadLocal || defined(INCLUDE_OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner))
#define OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(jint, OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_Enum) {
  OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_Enum_THREAD = 0,
  OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_Enum_INLINE = 1,
  OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_Enum_MANUAL = 2,
};
#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_ORDINAL jint
#else
#define OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_ORDINAL OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_Enum
#endif


@interface OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner : JavaLangEnum

#pragma mark Public

+ (OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_Enum)toNSEnum;

- (OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_ORDINAL)ordinal;

@end

J2OBJC_STATIC_INIT(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_values_[];

inline OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_get_THREAD(void);
J2OBJC_ENUM_CONSTANT(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner, THREAD)

inline OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_get_INLINE(void);
J2OBJC_ENUM_CONSTANT(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner, INLINE)

inline OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_get_MANUAL(void);
J2OBJC_ENUM_CONSTANT(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner, MANUAL)

FOUNDATION_EXPORT IOSObjectArray *OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_values(void);

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner *OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_fromOrdinal(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilConcurrentDetachedThreadLocal_Cleaner)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalUtilConcurrentDetachedThreadLocal")
