//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/util/concurrent/WeakConcurrentMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalUtilConcurrentWeakConcurrentMap")
#ifdef RESTRICT_OrgMockitoInternalUtilConcurrentWeakConcurrentMap
#define INCLUDE_ALL_OrgMockitoInternalUtilConcurrentWeakConcurrentMap 0
#else
#define INCLUDE_ALL_OrgMockitoInternalUtilConcurrentWeakConcurrentMap 1
#endif
#undef RESTRICT_OrgMockitoInternalUtilConcurrentWeakConcurrentMap
#ifdef INCLUDE_OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction
#define INCLUDE_OrgMockitoInternalUtilConcurrentWeakConcurrentMap 1
#endif

#if !defined (OrgMockitoInternalUtilConcurrentWeakConcurrentMap_) && (INCLUDE_ALL_OrgMockitoInternalUtilConcurrentWeakConcurrentMap || defined(INCLUDE_OrgMockitoInternalUtilConcurrentWeakConcurrentMap))
#define OrgMockitoInternalUtilConcurrentWeakConcurrentMap_

#define RESTRICT_JavaLangRefReferenceQueue 1
#define INCLUDE_JavaLangRefReferenceQueue 1
#include "java/lang/ref/ReferenceQueue.h"

#define RESTRICT_JavaLangRunnable 1
#define INCLUDE_JavaLangRunnable 1
#include "java/lang/Runnable.h"

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangThread;
@protocol JavaUtilConcurrentConcurrentMap;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

@interface OrgMockitoInternalUtilConcurrentWeakConcurrentMap : JavaLangRefReferenceQueue < JavaLangRunnable, JavaLangIterable > {
 @public
  id<JavaUtilConcurrentConcurrentMap> target_;
}

#pragma mark Public

- (instancetype)initWithBoolean:(jboolean)cleanerThread;

- (jint)approximateSize;

- (void)clear;

- (jboolean)containsKeyWithId:(id)key;

- (void)expungeStaleEntries;

- (id)getWithId:(id)key;

- (JavaLangThread *)getCleanerThread;

- (id<JavaUtilIterator>)iterator;

- (id)putWithId:(id)key
         withId:(id)value;

- (id)removeWithId:(id)key;

- (void)run;

#pragma mark Protected

- (id)defaultValueWithId:(id)key;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgMockitoInternalUtilConcurrentWeakConcurrentMap)

J2OBJC_FIELD_SETTER(OrgMockitoInternalUtilConcurrentWeakConcurrentMap, target_, id<JavaUtilConcurrentConcurrentMap>)

FOUNDATION_EXPORT void OrgMockitoInternalUtilConcurrentWeakConcurrentMap_initWithBoolean_(OrgMockitoInternalUtilConcurrentWeakConcurrentMap *self, jboolean cleanerThread);

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentWeakConcurrentMap *new_OrgMockitoInternalUtilConcurrentWeakConcurrentMap_initWithBoolean_(jboolean cleanerThread) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentWeakConcurrentMap *create_OrgMockitoInternalUtilConcurrentWeakConcurrentMap_initWithBoolean_(jboolean cleanerThread);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilConcurrentWeakConcurrentMap)

#endif

#if !defined (OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction_) && (INCLUDE_ALL_OrgMockitoInternalUtilConcurrentWeakConcurrentMap || defined(INCLUDE_OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction))
#define OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction_

@class JavaLangBoolean;
@class JavaLangInteger;
@protocol JavaUtilIterator;

@interface OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction : OrgMockitoInternalUtilConcurrentWeakConcurrentMap

#pragma mark Public

- (instancetype)init;

- (jint)approximateSize;

- (jboolean)containsKeyWithId:(id)key;

- (id)getWithId:(id)key;

- (id<JavaUtilIterator>)iterator;

- (id)putWithId:(id)key
         withId:(id)value;

- (id)removeWithId:(id)key;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction)

FOUNDATION_EXPORT void OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction_init(OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction *self);

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction *new_OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction *create_OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalUtilConcurrentWeakConcurrentMap_WithInlinedExpunction)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalUtilConcurrentWeakConcurrentMap")
