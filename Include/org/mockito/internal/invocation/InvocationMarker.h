//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/invocation/InvocationMarker.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalInvocationInvocationMarker")
#ifdef RESTRICT_OrgMockitoInternalInvocationInvocationMarker
#define INCLUDE_ALL_OrgMockitoInternalInvocationInvocationMarker 0
#else
#define INCLUDE_ALL_OrgMockitoInternalInvocationInvocationMarker 1
#endif
#undef RESTRICT_OrgMockitoInternalInvocationInvocationMarker

#if !defined (OrgMockitoInternalInvocationInvocationMarker_) && (INCLUDE_ALL_OrgMockitoInternalInvocationInvocationMarker || defined(INCLUDE_OrgMockitoInternalInvocationInvocationMarker))
#define OrgMockitoInternalInvocationInvocationMarker_

@protocol JavaUtilList;
@protocol OrgMockitoInternalVerificationApiInOrderContext;
@protocol OrgMockitoInvocationInvocation;
@protocol OrgMockitoInvocationMatchableInvocation;

@interface OrgMockitoInternalInvocationInvocationMarker : NSObject

#pragma mark Public

+ (void)markVerifiedWithOrgMockitoInvocationInvocation:(id<OrgMockitoInvocationInvocation>)invocation
           withOrgMockitoInvocationMatchableInvocation:(id<OrgMockitoInvocationMatchableInvocation>)wanted;

+ (void)markVerifiedWithJavaUtilList:(id<JavaUtilList>)invocations
withOrgMockitoInvocationMatchableInvocation:(id<OrgMockitoInvocationMatchableInvocation>)wanted;

+ (void)markVerifiedInOrderWithJavaUtilList:(id<JavaUtilList>)chunk
withOrgMockitoInvocationMatchableInvocation:(id<OrgMockitoInvocationMatchableInvocation>)wanted
withOrgMockitoInternalVerificationApiInOrderContext:(id<OrgMockitoInternalVerificationApiInOrderContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalInvocationInvocationMarker)

FOUNDATION_EXPORT void OrgMockitoInternalInvocationInvocationMarker_markVerifiedWithJavaUtilList_withOrgMockitoInvocationMatchableInvocation_(id<JavaUtilList> invocations, id<OrgMockitoInvocationMatchableInvocation> wanted);

FOUNDATION_EXPORT void OrgMockitoInternalInvocationInvocationMarker_markVerifiedWithOrgMockitoInvocationInvocation_withOrgMockitoInvocationMatchableInvocation_(id<OrgMockitoInvocationInvocation> invocation, id<OrgMockitoInvocationMatchableInvocation> wanted);

FOUNDATION_EXPORT void OrgMockitoInternalInvocationInvocationMarker_markVerifiedInOrderWithJavaUtilList_withOrgMockitoInvocationMatchableInvocation_withOrgMockitoInternalVerificationApiInOrderContext_(id<JavaUtilList> chunk, id<OrgMockitoInvocationMatchableInvocation> wanted, id<OrgMockitoInternalVerificationApiInOrderContext> context);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalInvocationInvocationMarker)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalInvocationInvocationMarker")
