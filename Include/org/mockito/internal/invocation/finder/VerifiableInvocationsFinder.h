//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/invocation/finder/VerifiableInvocationsFinder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder")
#ifdef RESTRICT_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder
#define INCLUDE_ALL_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder 0
#else
#define INCLUDE_ALL_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder 1
#endif
#undef RESTRICT_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder

#if !defined (OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder_) && (INCLUDE_ALL_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder || defined(INCLUDE_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder))
#define OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder_

@protocol JavaUtilList;

@interface OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder : NSObject

#pragma mark Public

+ (id<JavaUtilList>)findWithJavaUtilList:(id<JavaUtilList>)mocks;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder)

FOUNDATION_EXPORT id<JavaUtilList> OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder_findWithJavaUtilList_(id<JavaUtilList> mocks);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalInvocationFinderVerifiableInvocationsFinder")
