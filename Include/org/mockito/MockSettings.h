//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/MockSettings.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoMockSettings")
#ifdef RESTRICT_OrgMockitoMockSettings
#define INCLUDE_ALL_OrgMockitoMockSettings 0
#else
#define INCLUDE_ALL_OrgMockitoMockSettings 1
#endif
#undef RESTRICT_OrgMockitoMockSettings

#if !defined (OrgMockitoMockSettings_) && (INCLUDE_ALL_OrgMockitoMockSettings || defined(INCLUDE_OrgMockitoMockSettings))
#define OrgMockitoMockSettings_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgMockitoMockSerializableMode;
@protocol OrgMockitoMockMockCreationSettings;
@protocol OrgMockitoStubbingAnswer;

@protocol OrgMockitoMockSettings < JavaIoSerializable, JavaObject >

- (id<OrgMockitoMockSettings>)extraInterfacesWithIOSClassArray:(IOSObjectArray *)interfaces;

- (id<OrgMockitoMockSettings>)nameWithNSString:(NSString *)name;

- (id<OrgMockitoMockSettings>)spiedInstanceWithId:(id)instance;

- (id<OrgMockitoMockSettings>)defaultAnswerWithOrgMockitoStubbingAnswer:(id<OrgMockitoStubbingAnswer>)defaultAnswer;

- (id<OrgMockitoMockSettings>)serializable;

- (id<OrgMockitoMockSettings>)serializableWithOrgMockitoMockSerializableMode:(OrgMockitoMockSerializableMode *)mode;

- (id<OrgMockitoMockSettings>)verboseLogging;

- (id<OrgMockitoMockSettings>)invocationListenersWithOrgMockitoListenersInvocationListenerArray:(IOSObjectArray *)listeners;

- (id<OrgMockitoMockSettings>)verificationStartedListenersWithOrgMockitoListenersVerificationStartedListenerArray:(IOSObjectArray *)listeners;

- (id<OrgMockitoMockSettings>)stubOnly;

- (id<OrgMockitoMockSettings>)useConstructorWithNSObjectArray:(IOSObjectArray *)args;

- (id<OrgMockitoMockSettings>)outerInstanceWithId:(id)outerClassInstance;

- (id<OrgMockitoMockSettings>)withoutAnnotations;

- (id<OrgMockitoMockMockCreationSettings>)buildWithIOSClass:(IOSClass *)typeToMock;

- (id<OrgMockitoMockSettings>)lenient;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoMockSettings)

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoMockSettings)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoMockSettings")
