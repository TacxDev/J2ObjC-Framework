//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/configuration/DefaultMockitoConfiguration.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoConfigurationDefaultMockitoConfiguration")
#ifdef RESTRICT_OrgMockitoConfigurationDefaultMockitoConfiguration
#define INCLUDE_ALL_OrgMockitoConfigurationDefaultMockitoConfiguration 0
#else
#define INCLUDE_ALL_OrgMockitoConfigurationDefaultMockitoConfiguration 1
#endif
#undef RESTRICT_OrgMockitoConfigurationDefaultMockitoConfiguration

#if !defined (OrgMockitoConfigurationDefaultMockitoConfiguration_) && (INCLUDE_ALL_OrgMockitoConfigurationDefaultMockitoConfiguration || defined(INCLUDE_OrgMockitoConfigurationDefaultMockitoConfiguration))
#define OrgMockitoConfigurationDefaultMockitoConfiguration_

#define RESTRICT_OrgMockitoConfigurationIMockitoConfiguration 1
#define INCLUDE_OrgMockitoConfigurationIMockitoConfiguration 1
#include "org/mockito/configuration/IMockitoConfiguration.h"

@class JavaLangBoolean;
@protocol OrgMockitoConfigurationAnnotationEngine;
@protocol OrgMockitoStubbingAnswer;

@interface OrgMockitoConfigurationDefaultMockitoConfiguration : NSObject < OrgMockitoConfigurationIMockitoConfiguration >

#pragma mark Public

- (instancetype)init;

- (jboolean)cleansStackTrace;

- (jboolean)enableClassCache;

- (id<OrgMockitoConfigurationAnnotationEngine>)getAnnotationEngine;

- (id<OrgMockitoStubbingAnswer>)getDefaultAnswer;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoConfigurationDefaultMockitoConfiguration)

FOUNDATION_EXPORT void OrgMockitoConfigurationDefaultMockitoConfiguration_init(OrgMockitoConfigurationDefaultMockitoConfiguration *self);

FOUNDATION_EXPORT OrgMockitoConfigurationDefaultMockitoConfiguration *new_OrgMockitoConfigurationDefaultMockitoConfiguration_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoConfigurationDefaultMockitoConfiguration *create_OrgMockitoConfigurationDefaultMockitoConfiguration_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoConfigurationDefaultMockitoConfiguration)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoConfigurationDefaultMockitoConfiguration")
