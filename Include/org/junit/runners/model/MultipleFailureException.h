//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/runners/model/MultipleFailureException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnersModelMultipleFailureException")
#ifdef RESTRICT_OrgJunitRunnersModelMultipleFailureException
#define INCLUDE_ALL_OrgJunitRunnersModelMultipleFailureException 0
#else
#define INCLUDE_ALL_OrgJunitRunnersModelMultipleFailureException 1
#endif
#undef RESTRICT_OrgJunitRunnersModelMultipleFailureException

#if !defined (OrgJunitRunnersModelMultipleFailureException_) && (INCLUDE_ALL_OrgJunitRunnersModelMultipleFailureException || defined(INCLUDE_OrgJunitRunnersModelMultipleFailureException))
#define OrgJunitRunnersModelMultipleFailureException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaIoPrintStream;
@class JavaIoPrintWriter;
@class JavaLangBoolean;
@class JavaLangThrowable;
@protocol JavaUtilList;

@interface OrgJunitRunnersModelMultipleFailureException : JavaLangException

#pragma mark Public

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)errors;

+ (void)assertEmptyWithJavaUtilList:(id<JavaUtilList>)errors;

- (id<JavaUtilList>)getFailures;

- (NSString *)getMessage;

- (void)printStackTrace;

- (void)printStackTraceWithJavaIoPrintStream:(JavaIoPrintStream *)s;

- (void)printStackTraceWithJavaIoPrintWriter:(JavaIoPrintWriter *)s;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnersModelMultipleFailureException)

FOUNDATION_EXPORT void OrgJunitRunnersModelMultipleFailureException_initWithJavaUtilList_(OrgJunitRunnersModelMultipleFailureException *self, id<JavaUtilList> errors);

FOUNDATION_EXPORT OrgJunitRunnersModelMultipleFailureException *new_OrgJunitRunnersModelMultipleFailureException_initWithJavaUtilList_(id<JavaUtilList> errors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnersModelMultipleFailureException *create_OrgJunitRunnersModelMultipleFailureException_initWithJavaUtilList_(id<JavaUtilList> errors);

FOUNDATION_EXPORT void OrgJunitRunnersModelMultipleFailureException_assertEmptyWithJavaUtilList_(id<JavaUtilList> errors);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnersModelMultipleFailureException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnersModelMultipleFailureException")
