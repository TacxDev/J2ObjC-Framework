//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/internal/matchers/ThrowableCauseMatcher.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitInternalMatchersThrowableCauseMatcher")
#ifdef RESTRICT_OrgJunitInternalMatchersThrowableCauseMatcher
#define INCLUDE_ALL_OrgJunitInternalMatchersThrowableCauseMatcher 0
#else
#define INCLUDE_ALL_OrgJunitInternalMatchersThrowableCauseMatcher 1
#endif
#undef RESTRICT_OrgJunitInternalMatchersThrowableCauseMatcher

#if !defined (OrgJunitInternalMatchersThrowableCauseMatcher_) && (INCLUDE_ALL_OrgJunitInternalMatchersThrowableCauseMatcher || defined(INCLUDE_OrgJunitInternalMatchersThrowableCauseMatcher))
#define OrgJunitInternalMatchersThrowableCauseMatcher_

#define RESTRICT_OrgHamcrestTypeSafeMatcher 1
#define INCLUDE_OrgHamcrestTypeSafeMatcher 1
#include "org/hamcrest/TypeSafeMatcher.h"

@class IOSClass;
@class JavaLangBoolean;
@class JavaLangThrowable;
@class OrgHamcrestInternalReflectiveTypeFinder;
@protocol OrgHamcrestDescription;
@protocol OrgHamcrestMatcher;

@interface OrgJunitInternalMatchersThrowableCauseMatcher : OrgHamcrestTypeSafeMatcher

#pragma mark Public

- (instancetype)initWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)causeMatcher;

- (void)describeToWithOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

+ (id<OrgHamcrestMatcher>)hasCauseWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

#pragma mark Protected

- (void)describeMismatchSafelyWithId:(JavaLangThrowable *)item
          withOrgHamcrestDescription:(id<OrgHamcrestDescription>)description_;

- (jboolean)matchesSafelyWithId:(JavaLangThrowable *)item;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

- (instancetype)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype)initWithOrgHamcrestInternalReflectiveTypeFinder:(OrgHamcrestInternalReflectiveTypeFinder *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitInternalMatchersThrowableCauseMatcher)

FOUNDATION_EXPORT void OrgJunitInternalMatchersThrowableCauseMatcher_initWithOrgHamcrestMatcher_(OrgJunitInternalMatchersThrowableCauseMatcher *self, id<OrgHamcrestMatcher> causeMatcher);

FOUNDATION_EXPORT OrgJunitInternalMatchersThrowableCauseMatcher *new_OrgJunitInternalMatchersThrowableCauseMatcher_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> causeMatcher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitInternalMatchersThrowableCauseMatcher *create_OrgJunitInternalMatchersThrowableCauseMatcher_initWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> causeMatcher);

FOUNDATION_EXPORT id<OrgHamcrestMatcher> OrgJunitInternalMatchersThrowableCauseMatcher_hasCauseWithOrgHamcrestMatcher_(id<OrgHamcrestMatcher> matcher);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitInternalMatchersThrowableCauseMatcher)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitInternalMatchersThrowableCauseMatcher")
