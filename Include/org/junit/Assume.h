//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/Assume.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitAssume")
#ifdef RESTRICT_OrgJunitAssume
#define INCLUDE_ALL_OrgJunitAssume 0
#else
#define INCLUDE_ALL_OrgJunitAssume 1
#endif
#undef RESTRICT_OrgJunitAssume

#if !defined (OrgJunitAssume_) && (INCLUDE_ALL_OrgJunitAssume || defined(INCLUDE_OrgJunitAssume))
#define OrgJunitAssume_

@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangThrowable;
@protocol OrgHamcrestMatcher;

@interface OrgJunitAssume : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)assumeFalseWithBoolean:(jboolean)b;

+ (void)assumeFalseWithNSString:(NSString *)message
                    withBoolean:(jboolean)b;

+ (void)assumeNoExceptionWithNSString:(NSString *)message
                withJavaLangThrowable:(JavaLangThrowable *)e;

+ (void)assumeNoExceptionWithJavaLangThrowable:(JavaLangThrowable *)e;

+ (void)assumeNotNullWithNSObjectArray:(IOSObjectArray *)objects;

+ (void)assumeThatWithNSString:(NSString *)message
                        withId:(id)actual
        withOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (void)assumeThatWithId:(id)actual
  withOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

+ (void)assumeTrueWithBoolean:(jboolean)b;

+ (void)assumeTrueWithNSString:(NSString *)message
                   withBoolean:(jboolean)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitAssume)

FOUNDATION_EXPORT void OrgJunitAssume_init(OrgJunitAssume *self);

FOUNDATION_EXPORT OrgJunitAssume *new_OrgJunitAssume_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitAssume *create_OrgJunitAssume_init(void);

FOUNDATION_EXPORT void OrgJunitAssume_assumeTrueWithBoolean_(jboolean b);

FOUNDATION_EXPORT void OrgJunitAssume_assumeFalseWithBoolean_(jboolean b);

FOUNDATION_EXPORT void OrgJunitAssume_assumeTrueWithNSString_withBoolean_(NSString *message, jboolean b);

FOUNDATION_EXPORT void OrgJunitAssume_assumeFalseWithNSString_withBoolean_(NSString *message, jboolean b);

FOUNDATION_EXPORT void OrgJunitAssume_assumeNotNullWithNSObjectArray_(IOSObjectArray *objects);

FOUNDATION_EXPORT void OrgJunitAssume_assumeThatWithId_withOrgHamcrestMatcher_(id actual, id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT void OrgJunitAssume_assumeThatWithNSString_withId_withOrgHamcrestMatcher_(NSString *message, id actual, id<OrgHamcrestMatcher> matcher);

FOUNDATION_EXPORT void OrgJunitAssume_assumeNoExceptionWithJavaLangThrowable_(JavaLangThrowable *e);

FOUNDATION_EXPORT void OrgJunitAssume_assumeNoExceptionWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *e);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitAssume)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitAssume")
