//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/experimental/max/MaxCore.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitExperimentalMaxMaxCore")
#ifdef RESTRICT_OrgJunitExperimentalMaxMaxCore
#define INCLUDE_ALL_OrgJunitExperimentalMaxMaxCore 0
#else
#define INCLUDE_ALL_OrgJunitExperimentalMaxMaxCore 1
#endif
#undef RESTRICT_OrgJunitExperimentalMaxMaxCore

#if !defined (OrgJunitExperimentalMaxMaxCore_) && (INCLUDE_ALL_OrgJunitExperimentalMaxMaxCore || defined(INCLUDE_OrgJunitExperimentalMaxMaxCore))
#define OrgJunitExperimentalMaxMaxCore_

@class IOSClass;
@class JavaIoFile;
@class OrgJunitRunnerJUnitCore;
@class OrgJunitRunnerRequest;
@class OrgJunitRunnerResult;
@protocol JavaUtilList;

@interface OrgJunitExperimentalMaxMaxCore : NSObject

#pragma mark Public

+ (OrgJunitExperimentalMaxMaxCore *)forFolderWithNSString:(NSString *)folderName;

- (OrgJunitRunnerResult *)runWithIOSClass:(IOSClass *)testClass;

- (OrgJunitRunnerResult *)runWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request;

- (OrgJunitRunnerResult *)runWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request
                           withOrgJunitRunnerJUnitCore:(OrgJunitRunnerJUnitCore *)core;

- (id<JavaUtilList>)sortedLeavesForTestWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request;

- (OrgJunitRunnerRequest *)sortRequestWithOrgJunitRunnerRequest:(OrgJunitRunnerRequest *)request;

+ (OrgJunitExperimentalMaxMaxCore *)storedLocallyWithJavaIoFile:(JavaIoFile *)storedResults;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalMaxMaxCore)

FOUNDATION_EXPORT OrgJunitExperimentalMaxMaxCore *OrgJunitExperimentalMaxMaxCore_forFolderWithNSString_(NSString *folderName);

FOUNDATION_EXPORT OrgJunitExperimentalMaxMaxCore *OrgJunitExperimentalMaxMaxCore_storedLocallyWithJavaIoFile_(JavaIoFile *storedResults);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalMaxMaxCore)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitExperimentalMaxMaxCore")
