//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/experimental/categories/IncludeCategories.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitExperimentalCategoriesIncludeCategories")
#ifdef RESTRICT_OrgJunitExperimentalCategoriesIncludeCategories
#define INCLUDE_ALL_OrgJunitExperimentalCategoriesIncludeCategories 0
#else
#define INCLUDE_ALL_OrgJunitExperimentalCategoriesIncludeCategories 1
#endif
#undef RESTRICT_OrgJunitExperimentalCategoriesIncludeCategories

#if !defined (OrgJunitExperimentalCategoriesIncludeCategories_) && (INCLUDE_ALL_OrgJunitExperimentalCategoriesIncludeCategories || defined(INCLUDE_OrgJunitExperimentalCategoriesIncludeCategories))
#define OrgJunitExperimentalCategoriesIncludeCategories_

#define RESTRICT_OrgJunitExperimentalCategoriesCategoryFilterFactory 1
#define INCLUDE_OrgJunitExperimentalCategoriesCategoryFilterFactory 1
#include "org/junit/experimental/categories/CategoryFilterFactory.h"

@class OrgJunitRunnerManipulationFilter;
@protocol JavaUtilList;

@interface OrgJunitExperimentalCategoriesIncludeCategories : OrgJunitExperimentalCategoriesCategoryFilterFactory

#pragma mark Public

- (instancetype)init;

#pragma mark Protected

- (OrgJunitRunnerManipulationFilter *)createFilterWithJavaUtilList:(id<JavaUtilList>)categories;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalCategoriesIncludeCategories)

FOUNDATION_EXPORT void OrgJunitExperimentalCategoriesIncludeCategories_init(OrgJunitExperimentalCategoriesIncludeCategories *self);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesIncludeCategories *new_OrgJunitExperimentalCategoriesIncludeCategories_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesIncludeCategories *create_OrgJunitExperimentalCategoriesIncludeCategories_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalCategoriesIncludeCategories)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitExperimentalCategoriesIncludeCategories")
