//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/experimental/categories/Categories.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories")
#ifdef RESTRICT_OrgJunitExperimentalCategoriesCategories
#define INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories 0
#else
#define INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories 1
#endif
#undef RESTRICT_OrgJunitExperimentalCategoriesCategories

#if !defined (OrgJunitExperimentalCategoriesCategories_) && (INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories || defined(INCLUDE_OrgJunitExperimentalCategoriesCategories))
#define OrgJunitExperimentalCategoriesCategories_

#define RESTRICT_OrgJunitRunnersSuite 1
#define INCLUDE_OrgJunitRunnersSuite 1
#include "org/junit/runners/Suite.h"

@class IOSClass;
@class IOSObjectArray;
@class OrgJunitRunnersModelRunnerBuilder;
@protocol JavaUtilList;

@interface OrgJunitExperimentalCategoriesCategories : OrgJunitRunnersSuite

#pragma mark Public

- (instancetype)initWithIOSClass:(IOSClass *)klass
withOrgJunitRunnersModelRunnerBuilder:(OrgJunitRunnersModelRunnerBuilder *)builder;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithIOSClass:(IOSClass *)arg0
               withIOSClassArray:(IOSObjectArray *)arg1 NS_UNAVAILABLE;

- (instancetype)initWithIOSClass:(IOSClass *)arg0
                withJavaUtilList:(id<JavaUtilList>)arg1 NS_UNAVAILABLE;

- (instancetype)initWithOrgJunitRunnersModelRunnerBuilder:(OrgJunitRunnersModelRunnerBuilder *)arg0
                                             withIOSClass:(IOSClass *)arg1
                                        withIOSClassArray:(IOSObjectArray *)arg2 NS_UNAVAILABLE;

- (instancetype)initWithOrgJunitRunnersModelRunnerBuilder:(OrgJunitRunnersModelRunnerBuilder *)arg0
                                        withIOSClassArray:(IOSObjectArray *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalCategoriesCategories)

FOUNDATION_EXPORT void OrgJunitExperimentalCategoriesCategories_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(OrgJunitExperimentalCategoriesCategories *self, IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories *new_OrgJunitExperimentalCategoriesCategories_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories *create_OrgJunitExperimentalCategoriesCategories_initWithIOSClass_withOrgJunitRunnersModelRunnerBuilder_(IOSClass *klass, OrgJunitRunnersModelRunnerBuilder *builder);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalCategoriesCategories)

#endif

#if !defined (OrgJunitExperimentalCategoriesCategories_IncludeCategory_) && (INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories || defined(INCLUDE_OrgJunitExperimentalCategoriesCategories_IncludeCategory))
#define OrgJunitExperimentalCategoriesCategories_IncludeCategory_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;

@protocol OrgJunitExperimentalCategoriesCategories_IncludeCategory < JavaLangAnnotationAnnotation >

@property (readonly) IOSObjectArray *value;
@property (readonly) jboolean matchAny;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitExperimentalCategoriesCategories_IncludeCategory : NSObject < OrgJunitExperimentalCategoriesCategories_IncludeCategory > {
 @public
  IOSObjectArray *value_;
  jboolean matchAny_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalCategoriesCategories_IncludeCategory)

FOUNDATION_EXPORT id<OrgJunitExperimentalCategoriesCategories_IncludeCategory> create_OrgJunitExperimentalCategoriesCategories_IncludeCategory(jboolean matchAny, IOSObjectArray *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalCategoriesCategories_IncludeCategory)

#endif

#if !defined (OrgJunitExperimentalCategoriesCategories_ExcludeCategory_) && (INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories || defined(INCLUDE_OrgJunitExperimentalCategoriesCategories_ExcludeCategory))
#define OrgJunitExperimentalCategoriesCategories_ExcludeCategory_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;

@protocol OrgJunitExperimentalCategoriesCategories_ExcludeCategory < JavaLangAnnotationAnnotation >

@property (readonly) IOSObjectArray *value;
@property (readonly) jboolean matchAny;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitExperimentalCategoriesCategories_ExcludeCategory : NSObject < OrgJunitExperimentalCategoriesCategories_ExcludeCategory > {
 @public
  IOSObjectArray *value_;
  jboolean matchAny_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalCategoriesCategories_ExcludeCategory)

FOUNDATION_EXPORT id<OrgJunitExperimentalCategoriesCategories_ExcludeCategory> create_OrgJunitExperimentalCategoriesCategories_ExcludeCategory(jboolean matchAny, IOSObjectArray *value);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalCategoriesCategories_ExcludeCategory)

#endif

#if !defined (OrgJunitExperimentalCategoriesCategories_CategoryFilter_) && (INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories || defined(INCLUDE_OrgJunitExperimentalCategoriesCategories_CategoryFilter))
#define OrgJunitExperimentalCategoriesCategories_CategoryFilter_

#define RESTRICT_OrgJunitRunnerManipulationFilter 1
#define INCLUDE_OrgJunitRunnerManipulationFilter 1
#include "org/junit/runner/manipulation/Filter.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangBoolean;
@class OrgJunitRunnerDescription;
@protocol JavaUtilSet;

@interface OrgJunitExperimentalCategoriesCategories_CategoryFilter : OrgJunitRunnerManipulationFilter

#pragma mark Public

- (instancetype)initWithIOSClass:(IOSClass *)includedCategory
                    withIOSClass:(IOSClass *)excludedCategory;

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)categoryFilterWithBoolean:(jboolean)matchAnyInclusions
                                                                       withJavaUtilSet:(id<JavaUtilSet>)inclusions
                                                                           withBoolean:(jboolean)matchAnyExclusions
                                                                       withJavaUtilSet:(id<JavaUtilSet>)exclusions;

- (NSString *)describe;

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)excludeWithBoolean:(jboolean)matchAny
                                                              withIOSClassArray:(IOSObjectArray *)categories;

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)excludeWithIOSClass:(IOSClass *)category;

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)excludeWithIOSClassArray:(IOSObjectArray *)categories;

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)includeWithBoolean:(jboolean)matchAny
                                                              withIOSClassArray:(IOSObjectArray *)categories;

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)includeWithIOSClass:(IOSClass *)category;

+ (OrgJunitExperimentalCategoriesCategories_CategoryFilter *)includeWithIOSClassArray:(IOSObjectArray *)categories;

- (jboolean)shouldRunWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (NSString *)description;

#pragma mark Protected

- (instancetype)initWithBoolean:(jboolean)matchAnyIncludes
                withJavaUtilSet:(id<JavaUtilSet>)includes
                    withBoolean:(jboolean)matchAnyExcludes
                withJavaUtilSet:(id<JavaUtilSet>)excludes;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitExperimentalCategoriesCategories_CategoryFilter)

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithBoolean_withIOSClassArray_(jboolean matchAny, IOSObjectArray *categories);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithIOSClass_(IOSClass *category);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_includeWithIOSClassArray_(IOSObjectArray *categories);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithBoolean_withIOSClassArray_(jboolean matchAny, IOSObjectArray *categories);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithIOSClass_(IOSClass *category);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_excludeWithIOSClassArray_(IOSObjectArray *categories);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *OrgJunitExperimentalCategoriesCategories_CategoryFilter_categoryFilterWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(jboolean matchAnyInclusions, id<JavaUtilSet> inclusions, jboolean matchAnyExclusions, id<JavaUtilSet> exclusions);

FOUNDATION_EXPORT void OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithIOSClass_withIOSClass_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, IOSClass *includedCategory, IOSClass *excludedCategory);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *new_OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithIOSClass_withIOSClass_(IOSClass *includedCategory, IOSClass *excludedCategory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *create_OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithIOSClass_withIOSClass_(IOSClass *includedCategory, IOSClass *excludedCategory);

FOUNDATION_EXPORT void OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(OrgJunitExperimentalCategoriesCategories_CategoryFilter *self, jboolean matchAnyIncludes, id<JavaUtilSet> includes, jboolean matchAnyExcludes, id<JavaUtilSet> excludes);

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *new_OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(jboolean matchAnyIncludes, id<JavaUtilSet> includes, jboolean matchAnyExcludes, id<JavaUtilSet> excludes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitExperimentalCategoriesCategories_CategoryFilter *create_OrgJunitExperimentalCategoriesCategories_CategoryFilter_initWithBoolean_withJavaUtilSet_withBoolean_withJavaUtilSet_(jboolean matchAnyIncludes, id<JavaUtilSet> includes, jboolean matchAnyExcludes, id<JavaUtilSet> excludes);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitExperimentalCategoriesCategories_CategoryFilter)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitExperimentalCategoriesCategories")
