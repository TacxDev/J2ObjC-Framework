//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/rules/ExpectedException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRulesExpectedException")
#ifdef RESTRICT_OrgJunitRulesExpectedException
#define INCLUDE_ALL_OrgJunitRulesExpectedException 0
#else
#define INCLUDE_ALL_OrgJunitRulesExpectedException 1
#endif
#undef RESTRICT_OrgJunitRulesExpectedException

#if !defined (OrgJunitRulesExpectedException_) && (INCLUDE_ALL_OrgJunitRulesExpectedException || defined(INCLUDE_OrgJunitRulesExpectedException))
#define OrgJunitRulesExpectedException_

#define RESTRICT_OrgJunitRulesTestRule 1
#define INCLUDE_OrgJunitRulesTestRule 1
#include "org/junit/rules/TestRule.h"

@class IOSClass;
@class JavaLangBoolean;
@class OrgJunitRunnerDescription;
@class OrgJunitRunnersModelStatement;
@protocol OrgHamcrestMatcher;

@interface OrgJunitRulesExpectedException : NSObject < OrgJunitRulesTestRule >

#pragma mark Public

- (OrgJunitRunnersModelStatement *)applyWithOrgJunitRunnersModelStatement:(OrgJunitRunnersModelStatement *)base
                                            withOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)expectWithIOSClass:(IOSClass *)type;

- (void)expectWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

- (void)expectCauseWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)expectedCause;

- (void)expectMessageWithOrgHamcrestMatcher:(id<OrgHamcrestMatcher>)matcher;

- (void)expectMessageWithNSString:(NSString *)substring;

- (OrgJunitRulesExpectedException *)handleAssertionErrors;

- (OrgJunitRulesExpectedException *)handleAssumptionViolatedExceptions;

- (jboolean)isAnyExceptionExpected;

+ (OrgJunitRulesExpectedException *)none;

- (OrgJunitRulesExpectedException *)reportMissingExceptionWithMessageWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRulesExpectedException)

FOUNDATION_EXPORT OrgJunitRulesExpectedException *OrgJunitRulesExpectedException_none(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRulesExpectedException)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitRulesExpectedException")
