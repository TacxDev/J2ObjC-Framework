//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/org/junit/runner/notification/RunListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgJunitRunnerNotificationRunListener")
#ifdef RESTRICT_OrgJunitRunnerNotificationRunListener
#define INCLUDE_ALL_OrgJunitRunnerNotificationRunListener 0
#else
#define INCLUDE_ALL_OrgJunitRunnerNotificationRunListener 1
#endif
#undef RESTRICT_OrgJunitRunnerNotificationRunListener

#if !defined (OrgJunitRunnerNotificationRunListener_) && (INCLUDE_ALL_OrgJunitRunnerNotificationRunListener || defined(INCLUDE_OrgJunitRunnerNotificationRunListener))
#define OrgJunitRunnerNotificationRunListener_

@class OrgJunitRunnerDescription;
@class OrgJunitRunnerNotificationFailure;
@class OrgJunitRunnerResult;

@interface OrgJunitRunnerNotificationRunListener : NSObject

#pragma mark Public

- (instancetype)init;

- (void)testAssumptionFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure;

- (void)testFailureWithOrgJunitRunnerNotificationFailure:(OrgJunitRunnerNotificationFailure *)failure;

- (void)testFinishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testIgnoredWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testRunFinishedWithOrgJunitRunnerResult:(OrgJunitRunnerResult *)result;

- (void)testRunStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testSuiteFinishedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

- (void)testSuiteStartedWithOrgJunitRunnerDescription:(OrgJunitRunnerDescription *)description_;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerNotificationRunListener)

FOUNDATION_EXPORT void OrgJunitRunnerNotificationRunListener_init(OrgJunitRunnerNotificationRunListener *self);

FOUNDATION_EXPORT OrgJunitRunnerNotificationRunListener *new_OrgJunitRunnerNotificationRunListener_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgJunitRunnerNotificationRunListener *create_OrgJunitRunnerNotificationRunListener_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerNotificationRunListener)

#endif

#if !defined (OrgJunitRunnerNotificationRunListener_ThreadSafe_) && (INCLUDE_ALL_OrgJunitRunnerNotificationRunListener || defined(INCLUDE_OrgJunitRunnerNotificationRunListener_ThreadSafe))
#define OrgJunitRunnerNotificationRunListener_ThreadSafe_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class JavaLangBoolean;
@class JavaLangInteger;

@protocol OrgJunitRunnerNotificationRunListener_ThreadSafe < JavaLangAnnotationAnnotation >

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface OrgJunitRunnerNotificationRunListener_ThreadSafe : NSObject < OrgJunitRunnerNotificationRunListener_ThreadSafe >

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJunitRunnerNotificationRunListener_ThreadSafe)

FOUNDATION_EXPORT id<OrgJunitRunnerNotificationRunListener_ThreadSafe> create_OrgJunitRunnerNotificationRunListener_ThreadSafe(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgJunitRunnerNotificationRunListener_ThreadSafe)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgJunitRunnerNotificationRunListener")
