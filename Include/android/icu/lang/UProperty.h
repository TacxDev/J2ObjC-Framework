//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/external/icu/android_icu4j/src/main/java/android/icu/lang/UProperty.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidIcuLangUProperty")
#ifdef RESTRICT_AndroidIcuLangUProperty
#define INCLUDE_ALL_AndroidIcuLangUProperty 0
#else
#define INCLUDE_ALL_AndroidIcuLangUProperty 1
#endif
#undef RESTRICT_AndroidIcuLangUProperty

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidIcuLangUProperty_) && (INCLUDE_ALL_AndroidIcuLangUProperty || defined(INCLUDE_AndroidIcuLangUProperty))
#define AndroidIcuLangUProperty_

@class JavaLangInteger;

/*!
 @brief <p>Selection constants for Unicode properties.
 <p>These constants are used in functions like
  UCharacter.hasBinaryProperty(int) to select one of the Unicode properties. 
 <p>The properties APIs are intended to reflect Unicode properties as
  defined in the Unicode Character Database (UCD) and Unicode Technical
  Reports (UTR). 
 <p>For details about the properties see <a href=http://www.unicode.org>
  http://www.unicode.org</a>.
  <p>For names of Unicode properties see the UCD file PropertyAliases.txt. 
 <p>Important: If ICU is built with UCD files from Unicode versions below
  3.2, then properties marked with "new" are not or not fully
  available. Check UCharacter.getUnicodeVersion() to be sure.
 @author Syn Wee Quek
 - seealso: android.icu.lang.UCharacter
 */
@protocol AndroidIcuLangUProperty < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUProperty)

/*!
 @brief Special value indicating undefined property.
 */
inline jint AndroidIcuLangUProperty_get_UNDEFINED(void);
#define AndroidIcuLangUProperty_UNDEFINED -1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, UNDEFINED, jint)

/*!
 @brief <p>Binary property Alphabetic.
 <p>Property for UCharacter.isUAlphabetic(), different from the property
  in UCharacter.isalpha(). 
 <p>Lu + Ll + Lt + Lm + Lo + Nl + Other_Alphabetic.
 */
inline jint AndroidIcuLangUProperty_get_ALPHABETIC(void);
#define AndroidIcuLangUProperty_ALPHABETIC 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, ALPHABETIC, jint)

/*!
 @brief First constant for binary Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_BINARY_START(void);
#define AndroidIcuLangUProperty_BINARY_START 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BINARY_START, jint)

/*!
 @brief Binary property ASCII_Hex_Digit (0-9 A-F a-f).
 */
inline jint AndroidIcuLangUProperty_get_ASCII_HEX_DIGIT(void);
#define AndroidIcuLangUProperty_ASCII_HEX_DIGIT 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, ASCII_HEX_DIGIT, jint)

/*!
 @brief <p>Binary property Bidi_Control.
 <p>Format controls which have specific functions in the Bidi Algorithm.
 */
inline jint AndroidIcuLangUProperty_get_BIDI_CONTROL(void);
#define AndroidIcuLangUProperty_BIDI_CONTROL 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BIDI_CONTROL, jint)

/*!
 @brief <p>Binary property Bidi_Mirrored.
 <p>Characters that may change display in RTL text. 
 <p>Property for UCharacter.isMirrored(). 
 <p>See Bidi Algorithm; UTR 9.
 */
inline jint AndroidIcuLangUProperty_get_BIDI_MIRRORED(void);
#define AndroidIcuLangUProperty_BIDI_MIRRORED 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BIDI_MIRRORED, jint)

/*!
 @brief <p>Binary property Dash.
 <p>Variations of dashes.
 */
inline jint AndroidIcuLangUProperty_get_DASH(void);
#define AndroidIcuLangUProperty_DASH 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, DASH, jint)

/*!
 @brief <p>Binary property Default_Ignorable_Code_Point (new).
 <p>Property that indicates codepoint is ignorable in most processing. 
 <p>Codepoints (2060..206F, FFF0..FFFB, E0000..E0FFF) +
  Other_Default_Ignorable_Code_Point + (Cf + Cc + Cs - White_Space)
 */
inline jint AndroidIcuLangUProperty_get_DEFAULT_IGNORABLE_CODE_POINT(void);
#define AndroidIcuLangUProperty_DEFAULT_IGNORABLE_CODE_POINT 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, DEFAULT_IGNORABLE_CODE_POINT, jint)

/*!
 @brief <p>Binary property Deprecated (new).
 <p>The usage of deprecated characters is strongly discouraged.
 */
inline jint AndroidIcuLangUProperty_get_DEPRECATED(void);
#define AndroidIcuLangUProperty_DEPRECATED 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, DEPRECATED, jint)

/*!
 @brief <p>Binary property Diacritic.
 <p>Characters that linguistically modify the meaning of another
  character to which they apply.
 */
inline jint AndroidIcuLangUProperty_get_DIACRITIC(void);
#define AndroidIcuLangUProperty_DIACRITIC 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, DIACRITIC, jint)

/*!
 @brief <p>Binary property Extender.
 <p>Extend the value or shape of a preceding alphabetic character, e.g.
  length and iteration marks.
 */
inline jint AndroidIcuLangUProperty_get_EXTENDER(void);
#define AndroidIcuLangUProperty_EXTENDER 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, EXTENDER, jint)

/*!
 @brief <p>Binary property Full_Composition_Exclusion.
 <p>CompositionExclusions.txt + Singleton Decompositions +
  Non-Starter Decompositions.
 */
inline jint AndroidIcuLangUProperty_get_FULL_COMPOSITION_EXCLUSION(void);
#define AndroidIcuLangUProperty_FULL_COMPOSITION_EXCLUSION 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, FULL_COMPOSITION_EXCLUSION, jint)

/*!
 @brief <p>Binary property Grapheme_Base (new).
 <p>For programmatic determination of grapheme cluster boundaries.
  [0..10FFFF]-Cc-Cf-Cs-Co-Cn-Zl-Zp-Grapheme_Link-Grapheme_Extend-CGJ
 */
inline jint AndroidIcuLangUProperty_get_GRAPHEME_BASE(void);
#define AndroidIcuLangUProperty_GRAPHEME_BASE 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, GRAPHEME_BASE, jint)

/*!
 @brief <p>Binary property Grapheme_Extend (new).
 <p>For programmatic determination of grapheme cluster boundaries. 
 <p>Me+Mn+Mc+Other_Grapheme_Extend-Grapheme_Link-CGJ
 */
inline jint AndroidIcuLangUProperty_get_GRAPHEME_EXTEND(void);
#define AndroidIcuLangUProperty_GRAPHEME_EXTEND 11
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, GRAPHEME_EXTEND, jint)

/*!
 @brief <p>Binary property Grapheme_Link (new).
 <p>For programmatic determination of grapheme cluster boundaries.
 */
inline jint AndroidIcuLangUProperty_get_GRAPHEME_LINK(void);
#define AndroidIcuLangUProperty_GRAPHEME_LINK 12
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, GRAPHEME_LINK, jint)

/*!
 @brief <p>Binary property Hex_Digit.
 <p>Characters commonly used for hexadecimal numbers.
 */
inline jint AndroidIcuLangUProperty_get_HEX_DIGIT(void);
#define AndroidIcuLangUProperty_HEX_DIGIT 13
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, HEX_DIGIT, jint)

/*!
 @brief <p>Binary property Hyphen.
 <p>Dashes used to mark connections between pieces of words, plus the
  Katakana middle dot.
 */
inline jint AndroidIcuLangUProperty_get_HYPHEN(void);
#define AndroidIcuLangUProperty_HYPHEN 14
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, HYPHEN, jint)

/*!
 @brief <p>Binary property ID_Continue.
 <p>Characters that can continue an identifier. 
 <p>ID_Start+Mn+Mc+Nd+Pc
 */
inline jint AndroidIcuLangUProperty_get_ID_CONTINUE(void);
#define AndroidIcuLangUProperty_ID_CONTINUE 15
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, ID_CONTINUE, jint)

/*!
 @brief <p>Binary property ID_Start.
 <p>Characters that can start an identifier. 
 <p>Lu+Ll+Lt+Lm+Lo+Nl
 */
inline jint AndroidIcuLangUProperty_get_ID_START(void);
#define AndroidIcuLangUProperty_ID_START 16
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, ID_START, jint)

/*!
 @brief <p>Binary property Ideographic.
 <p>CJKV ideographs.
 */
inline jint AndroidIcuLangUProperty_get_IDEOGRAPHIC(void);
#define AndroidIcuLangUProperty_IDEOGRAPHIC 17
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, IDEOGRAPHIC, jint)

/*!
 @brief <p>Binary property IDS_Binary_Operator (new).
 <p>For programmatic determination of Ideographic Description Sequences.
 */
inline jint AndroidIcuLangUProperty_get_IDS_BINARY_OPERATOR(void);
#define AndroidIcuLangUProperty_IDS_BINARY_OPERATOR 18
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, IDS_BINARY_OPERATOR, jint)

/*!
 @brief <p>Binary property IDS_Trinary_Operator (new).
 <p>For programmatic determination of Ideographic Description
  Sequences.
 */
inline jint AndroidIcuLangUProperty_get_IDS_TRINARY_OPERATOR(void);
#define AndroidIcuLangUProperty_IDS_TRINARY_OPERATOR 19
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, IDS_TRINARY_OPERATOR, jint)

/*!
 @brief <p>Binary property Join_Control.
 <p>Format controls for cursive joining and ligation.
 */
inline jint AndroidIcuLangUProperty_get_JOIN_CONTROL(void);
#define AndroidIcuLangUProperty_JOIN_CONTROL 20
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, JOIN_CONTROL, jint)

/*!
 @brief <p>Binary property Logical_Order_Exception (new).
 <p>Characters that do not use logical order and require special
  handling in most processing.
 */
inline jint AndroidIcuLangUProperty_get_LOGICAL_ORDER_EXCEPTION(void);
#define AndroidIcuLangUProperty_LOGICAL_ORDER_EXCEPTION 21
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, LOGICAL_ORDER_EXCEPTION, jint)

/*!
 @brief <p>Binary property Lowercase.
 <p>Same as UCharacter.isULowercase(), different from
  UCharacter.islower(). 
 <p>Ll+Other_Lowercase
 */
inline jint AndroidIcuLangUProperty_get_LOWERCASE(void);
#define AndroidIcuLangUProperty_LOWERCASE 22
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, LOWERCASE, jint)

/*!
 @brief <p>Binary property Math.
 <p>Sm+Other_Math
 */
inline jint AndroidIcuLangUProperty_get_MATH(void);
#define AndroidIcuLangUProperty_MATH 23
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, MATH, jint)

/*!
 @brief <p>Binary property Noncharacter_Code_Point.
 <p>Code points that are explicitly defined as illegal for the encoding
  of characters.
 */
inline jint AndroidIcuLangUProperty_get_NONCHARACTER_CODE_POINT(void);
#define AndroidIcuLangUProperty_NONCHARACTER_CODE_POINT 24
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NONCHARACTER_CODE_POINT, jint)

/*!
 @brief <p>Binary property Quotation_Mark.
 */
inline jint AndroidIcuLangUProperty_get_QUOTATION_MARK(void);
#define AndroidIcuLangUProperty_QUOTATION_MARK 25
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, QUOTATION_MARK, jint)

/*!
 @brief <p>Binary property Radical (new).
 <p>For programmatic determination of Ideographic Description
  Sequences.
 */
inline jint AndroidIcuLangUProperty_get_RADICAL(void);
#define AndroidIcuLangUProperty_RADICAL 26
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, RADICAL, jint)

/*!
 @brief <p>Binary property Soft_Dotted (new).
 <p>Characters with a "soft dot", like i or j. 
 <p>An accent placed on these characters causes the dot to disappear.
 */
inline jint AndroidIcuLangUProperty_get_SOFT_DOTTED(void);
#define AndroidIcuLangUProperty_SOFT_DOTTED 27
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SOFT_DOTTED, jint)

/*!
 @brief <p>Binary property Terminal_Punctuation.
 <p>Punctuation characters that generally mark the end of textual
  units.
 */
inline jint AndroidIcuLangUProperty_get_TERMINAL_PUNCTUATION(void);
#define AndroidIcuLangUProperty_TERMINAL_PUNCTUATION 28
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, TERMINAL_PUNCTUATION, jint)

/*!
 @brief <p>Binary property Unified_Ideograph (new).
 <p>For programmatic determination of Ideographic Description
  Sequences.
 */
inline jint AndroidIcuLangUProperty_get_UNIFIED_IDEOGRAPH(void);
#define AndroidIcuLangUProperty_UNIFIED_IDEOGRAPH 29
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, UNIFIED_IDEOGRAPH, jint)

/*!
 @brief <p>Binary property Uppercase.
 <p>Same as UCharacter.isUUppercase(), different from
  UCharacter.isUpperCase(). 
 <p>Lu+Other_Uppercase
 */
inline jint AndroidIcuLangUProperty_get_UPPERCASE(void);
#define AndroidIcuLangUProperty_UPPERCASE 30
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, UPPERCASE, jint)

/*!
 @brief <p>Binary property White_Space.
 <p>Same as UCharacter.isUWhiteSpace(), different from
  UCharacter.isSpace() and UCharacter.isWhitespace().
  Space characters+TAB+CR+LF-ZWSP-ZWNBSP
 */
inline jint AndroidIcuLangUProperty_get_WHITE_SPACE(void);
#define AndroidIcuLangUProperty_WHITE_SPACE 31
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, WHITE_SPACE, jint)

/*!
 @brief <p>Binary property XID_Continue.
 <p>ID_Continue modified to allow closure under normalization forms
  NFKC and NFKD.
 */
inline jint AndroidIcuLangUProperty_get_XID_CONTINUE(void);
#define AndroidIcuLangUProperty_XID_CONTINUE 32
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, XID_CONTINUE, jint)

/*!
 @brief <p>Binary property XID_Start.
 <p>ID_Start modified to allow closure under normalization forms NFKC
  and NFKD.
 */
inline jint AndroidIcuLangUProperty_get_XID_START(void);
#define AndroidIcuLangUProperty_XID_START 33
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, XID_START, jint)

/*!
 @brief <p>Binary property Case_Sensitive.
 <p>Either the source of a case
  mapping or _in_ the target of a case mapping. Not the same as
  the general category Cased_Letter.
 */
inline jint AndroidIcuLangUProperty_get_CASE_SENSITIVE(void);
#define AndroidIcuLangUProperty_CASE_SENSITIVE 34
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CASE_SENSITIVE, jint)

/*!
 @brief Binary property STerm (new in Unicode 4.0.1).
 Sentence Terminal. Used in UAX #29: Text Boundaries
  (http://www.unicode.org/reports/tr29/)
 */
inline jint AndroidIcuLangUProperty_get_S_TERM(void);
#define AndroidIcuLangUProperty_S_TERM 35
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, S_TERM, jint)

/*!
 @brief Binary property Variation_Selector (new in Unicode 4.0.1).
 Indicates all those characters that qualify as Variation Selectors.
  For details on the behavior of these characters,
  see StandardizedVariants.html and 15.6 Variation Selectors.
 */
inline jint AndroidIcuLangUProperty_get_VARIATION_SELECTOR(void);
#define AndroidIcuLangUProperty_VARIATION_SELECTOR 36
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, VARIATION_SELECTOR, jint)

/*!
 @brief Binary property NFD_Inert.
 ICU-specific property for characters that are inert under NFD,
  i.e., they do not interact with adjacent characters.
  Used for example in normalizing transforms in incremental mode
  to find the boundary of safely normalizable text despite possible
  text additions.
  There is one such property per normalization form.
  These properties are computed as follows - an inert character is:
  a) unassigned, or ALL of the following:
  b) of combining class 0.
  c) not decomposed by this normalization form.
  AND if NFC or NFKC,
  d) can never compose with a previous character.
  e) can never compose with a following character.
  f) can never change if another character is added.
  Example: a-breve might satisfy all but f, but if you
  add an ogonek it changes to a-ogonek + breve
  See also com.ibm.text.UCD.NFSkippable in the ICU4J repository,
  and icu/source/common/unormimp.h .
 */
inline jint AndroidIcuLangUProperty_get_NFD_INERT(void);
#define AndroidIcuLangUProperty_NFD_INERT 37
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFD_INERT, jint)

/*!
 @brief Binary property NFKD_Inert.
 ICU-specific property for characters that are inert under NFKD,
  i.e., they do not interact with adjacent characters.
  Used for example in normalizing transforms in incremental mode
  to find the boundary of safely normalizable text despite possible
  text additions.
 - seealso: #NFD_INERT
 */
inline jint AndroidIcuLangUProperty_get_NFKD_INERT(void);
#define AndroidIcuLangUProperty_NFKD_INERT 38
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFKD_INERT, jint)

/*!
 @brief Binary property NFC_Inert.
 ICU-specific property for characters that are inert under NFC,
  i.e., they do not interact with adjacent characters.
  Used for example in normalizing transforms in incremental mode
  to find the boundary of safely normalizable text despite possible
  text additions.
 - seealso: #NFD_INERT
 */
inline jint AndroidIcuLangUProperty_get_NFC_INERT(void);
#define AndroidIcuLangUProperty_NFC_INERT 39
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFC_INERT, jint)

/*!
 @brief Binary property NFKC_Inert.
 ICU-specific property for characters that are inert under NFKC,
  i.e., they do not interact with adjacent characters.
  Used for example in normalizing transforms in incremental mode
  to find the boundary of safely normalizable text despite possible
  text additions.
 - seealso: #NFD_INERT
 */
inline jint AndroidIcuLangUProperty_get_NFKC_INERT(void);
#define AndroidIcuLangUProperty_NFKC_INERT 40
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFKC_INERT, jint)

/*!
 @brief Binary Property Segment_Starter.
 ICU-specific property for characters that are starters in terms of
  Unicode normalization and combining character sequences.
  They have ccc=0 and do not occur in non-initial position of the
  canonical decomposition of any character
  (like " in NFD(a-umlaut) and a Jamo T in an NFD(Hangul LVT)).
  ICU uses this property for segmenting a string for generating a set of
  canonically equivalent strings, e.g. for canonical closure while
  processing collation tailoring rules.
 */
inline jint AndroidIcuLangUProperty_get_SEGMENT_STARTER(void);
#define AndroidIcuLangUProperty_SEGMENT_STARTER 41
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SEGMENT_STARTER, jint)

/*!
 @brief Binary property Pattern_Syntax (new in Unicode 4.1).
 See UAX #31 Identifier and Pattern Syntax
  (http://www.unicode.org/reports/tr31/)
 */
inline jint AndroidIcuLangUProperty_get_PATTERN_SYNTAX(void);
#define AndroidIcuLangUProperty_PATTERN_SYNTAX 42
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, PATTERN_SYNTAX, jint)

/*!
 @brief Binary property Pattern_White_Space (new in Unicode 4.1).
 See UAX #31 Identifier and Pattern Syntax
  (http://www.unicode.org/reports/tr31/)
 */
inline jint AndroidIcuLangUProperty_get_PATTERN_WHITE_SPACE(void);
#define AndroidIcuLangUProperty_PATTERN_WHITE_SPACE 43
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, PATTERN_WHITE_SPACE, jint)

/*!
 @brief Binary property alnum (a C/POSIX character class).
 Implemented according to the UTS #18 Annex C Standard Recommendation.
  See the UCharacter class documentation.
 */
inline jint AndroidIcuLangUProperty_get_POSIX_ALNUM(void);
#define AndroidIcuLangUProperty_POSIX_ALNUM 44
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, POSIX_ALNUM, jint)

/*!
 @brief Binary property blank (a C/POSIX character class).
 Implemented according to the UTS #18 Annex C Standard Recommendation.
  See the UCharacter class documentation.
 */
inline jint AndroidIcuLangUProperty_get_POSIX_BLANK(void);
#define AndroidIcuLangUProperty_POSIX_BLANK 45
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, POSIX_BLANK, jint)

/*!
 @brief Binary property graph (a C/POSIX character class).
 Implemented according to the UTS #18 Annex C Standard Recommendation.
  See the UCharacter class documentation.
 */
inline jint AndroidIcuLangUProperty_get_POSIX_GRAPH(void);
#define AndroidIcuLangUProperty_POSIX_GRAPH 46
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, POSIX_GRAPH, jint)

/*!
 @brief Binary property print (a C/POSIX character class).
 Implemented according to the UTS #18 Annex C Standard Recommendation.
  See the UCharacter class documentation.
 */
inline jint AndroidIcuLangUProperty_get_POSIX_PRINT(void);
#define AndroidIcuLangUProperty_POSIX_PRINT 47
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, POSIX_PRINT, jint)

/*!
 @brief Binary property xdigit (a C/POSIX character class).
 Implemented according to the UTS #18 Annex C Standard Recommendation.
  See the UCharacter class documentation.
 */
inline jint AndroidIcuLangUProperty_get_POSIX_XDIGIT(void);
#define AndroidIcuLangUProperty_POSIX_XDIGIT 48
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, POSIX_XDIGIT, jint)

/*!
 @brief Binary property Cased.
 For Lowercase, Uppercase and Titlecase characters.
 */
inline jint AndroidIcuLangUProperty_get_CASED(void);
#define AndroidIcuLangUProperty_CASED 49
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CASED, jint)

/*!
 @brief Binary property Case_Ignorable.
 Used in context-sensitive case mappings.
 */
inline jint AndroidIcuLangUProperty_get_CASE_IGNORABLE(void);
#define AndroidIcuLangUProperty_CASE_IGNORABLE 50
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CASE_IGNORABLE, jint)

/*!
 @brief Binary property Changes_When_Lowercased.
 */
inline jint AndroidIcuLangUProperty_get_CHANGES_WHEN_LOWERCASED(void);
#define AndroidIcuLangUProperty_CHANGES_WHEN_LOWERCASED 51
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CHANGES_WHEN_LOWERCASED, jint)

/*!
 @brief Binary property Changes_When_Uppercased.
 */
inline jint AndroidIcuLangUProperty_get_CHANGES_WHEN_UPPERCASED(void);
#define AndroidIcuLangUProperty_CHANGES_WHEN_UPPERCASED 52
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CHANGES_WHEN_UPPERCASED, jint)

/*!
 @brief Binary property Changes_When_Titlecased.
 */
inline jint AndroidIcuLangUProperty_get_CHANGES_WHEN_TITLECASED(void);
#define AndroidIcuLangUProperty_CHANGES_WHEN_TITLECASED 53
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CHANGES_WHEN_TITLECASED, jint)

/*!
 @brief Binary property Changes_When_Casefolded.
 */
inline jint AndroidIcuLangUProperty_get_CHANGES_WHEN_CASEFOLDED(void);
#define AndroidIcuLangUProperty_CHANGES_WHEN_CASEFOLDED 54
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CHANGES_WHEN_CASEFOLDED, jint)

/*!
 @brief Binary property Changes_When_Casemapped.
 */
inline jint AndroidIcuLangUProperty_get_CHANGES_WHEN_CASEMAPPED(void);
#define AndroidIcuLangUProperty_CHANGES_WHEN_CASEMAPPED 55
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CHANGES_WHEN_CASEMAPPED, jint)

/*!
 @brief Binary property Changes_When_NFKC_Casefolded.
 */
inline jint AndroidIcuLangUProperty_get_CHANGES_WHEN_NFKC_CASEFOLDED(void);
#define AndroidIcuLangUProperty_CHANGES_WHEN_NFKC_CASEFOLDED 56
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CHANGES_WHEN_NFKC_CASEFOLDED, jint)

/*!
 @brief Binary property Emoji.
 See http://www.unicode.org/reports/tr51/#Emoji_Properties
 */
inline jint AndroidIcuLangUProperty_get_EMOJI(void);
#define AndroidIcuLangUProperty_EMOJI 57
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, EMOJI, jint)

/*!
 @brief Binary property Emoji_Presentation.
 See http://www.unicode.org/reports/tr51/#Emoji_Properties
 */
inline jint AndroidIcuLangUProperty_get_EMOJI_PRESENTATION(void);
#define AndroidIcuLangUProperty_EMOJI_PRESENTATION 58
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, EMOJI_PRESENTATION, jint)

/*!
 @brief Binary property Emoji_Modifier.
 See http://www.unicode.org/reports/tr51/#Emoji_Properties
 */
inline jint AndroidIcuLangUProperty_get_EMOJI_MODIFIER(void);
#define AndroidIcuLangUProperty_EMOJI_MODIFIER 59
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, EMOJI_MODIFIER, jint)

/*!
 @brief Binary property Emoji_Modifier_Base.
 See http://www.unicode.org/reports/tr51/#Emoji_Properties
 */
inline jint AndroidIcuLangUProperty_get_EMOJI_MODIFIER_BASE(void);
#define AndroidIcuLangUProperty_EMOJI_MODIFIER_BASE 60
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, EMOJI_MODIFIER_BASE, jint)

/*!
 @brief One more than the last constant for binary Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_BINARY_LIMIT(void);
#define AndroidIcuLangUProperty_BINARY_LIMIT 61
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BINARY_LIMIT, jint)

/*!
 @brief Enumerated property Bidi_Class.
 Same as UCharacter.getDirection(int), returns UCharacterDirection values.
 */
inline jint AndroidIcuLangUProperty_get_BIDI_CLASS(void);
#define AndroidIcuLangUProperty_BIDI_CLASS 4096
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BIDI_CLASS, jint)

/*!
 @brief First constant for enumerated/integer Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_INT_START(void);
#define AndroidIcuLangUProperty_INT_START 4096
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, INT_START, jint)

/*!
 @brief Enumerated property Block.
 Same as UCharacter.UnicodeBlock.of(int), returns UCharacter.UnicodeBlock
  values.
 */
inline jint AndroidIcuLangUProperty_get_BLOCK(void);
#define AndroidIcuLangUProperty_BLOCK 4097
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BLOCK, jint)

/*!
 @brief Enumerated property Canonical_Combining_Class.
 Same as UCharacter.getCombiningClass(int), returns 8-bit numeric values.
 */
inline jint AndroidIcuLangUProperty_get_CANONICAL_COMBINING_CLASS(void);
#define AndroidIcuLangUProperty_CANONICAL_COMBINING_CLASS 4098
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CANONICAL_COMBINING_CLASS, jint)

/*!
 @brief Enumerated property Decomposition_Type.
 Returns UCharacter.DecompositionType values.
 */
inline jint AndroidIcuLangUProperty_get_DECOMPOSITION_TYPE(void);
#define AndroidIcuLangUProperty_DECOMPOSITION_TYPE 4099
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, DECOMPOSITION_TYPE, jint)

/*!
 @brief Enumerated property East_Asian_Width.
 See http://www.unicode.org/reports/tr11/
  Returns UCharacter.EastAsianWidth values.
 */
inline jint AndroidIcuLangUProperty_get_EAST_ASIAN_WIDTH(void);
#define AndroidIcuLangUProperty_EAST_ASIAN_WIDTH 4100
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, EAST_ASIAN_WIDTH, jint)

/*!
 @brief Enumerated property General_Category.
 Same as UCharacter.getType(int), returns UCharacterCategory values.
 */
inline jint AndroidIcuLangUProperty_get_GENERAL_CATEGORY(void);
#define AndroidIcuLangUProperty_GENERAL_CATEGORY 4101
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, GENERAL_CATEGORY, jint)

/*!
 @brief Enumerated property Joining_Group.
 Returns UCharacter.JoiningGroup values.
 */
inline jint AndroidIcuLangUProperty_get_JOINING_GROUP(void);
#define AndroidIcuLangUProperty_JOINING_GROUP 4102
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, JOINING_GROUP, jint)

/*!
 @brief Enumerated property Joining_Type.
 Returns UCharacter.JoiningType values.
 */
inline jint AndroidIcuLangUProperty_get_JOINING_TYPE(void);
#define AndroidIcuLangUProperty_JOINING_TYPE 4103
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, JOINING_TYPE, jint)

/*!
 @brief Enumerated property Line_Break.
 Returns UCharacter.LineBreak values.
 */
inline jint AndroidIcuLangUProperty_get_LINE_BREAK(void);
#define AndroidIcuLangUProperty_LINE_BREAK 4104
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, LINE_BREAK, jint)

/*!
 @brief Enumerated property Numeric_Type.
 Returns UCharacter.NumericType values.
 */
inline jint AndroidIcuLangUProperty_get_NUMERIC_TYPE(void);
#define AndroidIcuLangUProperty_NUMERIC_TYPE 4105
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NUMERIC_TYPE, jint)

/*!
 @brief Enumerated property Script.
 Same as UScript.getScript(int), returns UScript values.
 */
inline jint AndroidIcuLangUProperty_get_SCRIPT(void);
#define AndroidIcuLangUProperty_SCRIPT 4106
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SCRIPT, jint)

/*!
 @brief Enumerated property Hangul_Syllable_Type, new in Unicode 4.
 Returns UCharacter.HangulSyllableType values.
 */
inline jint AndroidIcuLangUProperty_get_HANGUL_SYLLABLE_TYPE(void);
#define AndroidIcuLangUProperty_HANGUL_SYLLABLE_TYPE 4107
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, HANGUL_SYLLABLE_TYPE, jint)

/*!
 @brief Enumerated property NFD_Quick_Check.
 Returns numeric values compatible with Normalizer.QuickCheckResult.
 */
inline jint AndroidIcuLangUProperty_get_NFD_QUICK_CHECK(void);
#define AndroidIcuLangUProperty_NFD_QUICK_CHECK 4108
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFD_QUICK_CHECK, jint)

/*!
 @brief Enumerated property NFKD_Quick_Check.
 Returns numeric values compatible with Normalizer.QuickCheckResult.
 */
inline jint AndroidIcuLangUProperty_get_NFKD_QUICK_CHECK(void);
#define AndroidIcuLangUProperty_NFKD_QUICK_CHECK 4109
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFKD_QUICK_CHECK, jint)

/*!
 @brief Enumerated property NFC_Quick_Check.
 Returns numeric values compatible with Normalizer.QuickCheckResult.
 */
inline jint AndroidIcuLangUProperty_get_NFC_QUICK_CHECK(void);
#define AndroidIcuLangUProperty_NFC_QUICK_CHECK 4110
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFC_QUICK_CHECK, jint)

/*!
 @brief Enumerated property NFKC_Quick_Check.
 Returns numeric values compatible with Normalizer.QuickCheckResult.
 */
inline jint AndroidIcuLangUProperty_get_NFKC_QUICK_CHECK(void);
#define AndroidIcuLangUProperty_NFKC_QUICK_CHECK 4111
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NFKC_QUICK_CHECK, jint)

/*!
 @brief Enumerated property Lead_Canonical_Combining_Class.
 ICU-specific property for the ccc of the first code point
  of the decomposition, or lccc(c)=ccc(NFD(c)[0]).
  Useful for checking for canonically ordered text;
  see Normalizer.FCD and http://www.unicode.org/notes/tn5/#FCD .
  Returns 8-bit numeric values like CANONICAL_COMBINING_CLASS.
 */
inline jint AndroidIcuLangUProperty_get_LEAD_CANONICAL_COMBINING_CLASS(void);
#define AndroidIcuLangUProperty_LEAD_CANONICAL_COMBINING_CLASS 4112
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, LEAD_CANONICAL_COMBINING_CLASS, jint)

/*!
 @brief Enumerated property Trail_Canonical_Combining_Class.
 ICU-specific property for the ccc of the last code point
  of the decomposition, or lccc(c)=ccc(NFD(c)[last]).
  Useful for checking for canonically ordered text;
  see Normalizer.FCD and http://www.unicode.org/notes/tn5/#FCD .
  Returns 8-bit numeric values like CANONICAL_COMBINING_CLASS.
 */
inline jint AndroidIcuLangUProperty_get_TRAIL_CANONICAL_COMBINING_CLASS(void);
#define AndroidIcuLangUProperty_TRAIL_CANONICAL_COMBINING_CLASS 4113
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, TRAIL_CANONICAL_COMBINING_CLASS, jint)

/*!
 @brief Enumerated property Grapheme_Cluster_Break (new in Unicode 4.1).
 Used in UAX #29: Text Boundaries
  (http://www.unicode.org/reports/tr29/)
  Returns UCharacter.GraphemeClusterBreak values.
 */
inline jint AndroidIcuLangUProperty_get_GRAPHEME_CLUSTER_BREAK(void);
#define AndroidIcuLangUProperty_GRAPHEME_CLUSTER_BREAK 4114
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, GRAPHEME_CLUSTER_BREAK, jint)

/*!
 @brief Enumerated property Sentence_Break (new in Unicode 4.1).
 Used in UAX #29: Text Boundaries
  (http://www.unicode.org/reports/tr29/)
  Returns UCharacter.SentenceBreak values.
 */
inline jint AndroidIcuLangUProperty_get_SENTENCE_BREAK(void);
#define AndroidIcuLangUProperty_SENTENCE_BREAK 4115
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SENTENCE_BREAK, jint)

/*!
 @brief Enumerated property Word_Break (new in Unicode 4.1).
 Used in UAX #29: Text Boundaries
  (http://www.unicode.org/reports/tr29/)
  Returns UCharacter.WordBreak values.
 */
inline jint AndroidIcuLangUProperty_get_WORD_BREAK(void);
#define AndroidIcuLangUProperty_WORD_BREAK 4116
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, WORD_BREAK, jint)

/*!
 @brief Enumerated property Bidi_Paired_Bracket_Type (new in Unicode 6.3).
 Used in UAX #9: Unicode Bidirectional Algorithm
  (http://www.unicode.org/reports/tr9/)
  Returns UCharacter.BidiPairedBracketType values.
 */
inline jint AndroidIcuLangUProperty_get_BIDI_PAIRED_BRACKET_TYPE(void);
#define AndroidIcuLangUProperty_BIDI_PAIRED_BRACKET_TYPE 4117
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BIDI_PAIRED_BRACKET_TYPE, jint)

/*!
 @brief One more than the last constant for enumerated/integer Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_INT_LIMIT(void);
#define AndroidIcuLangUProperty_INT_LIMIT 4118
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, INT_LIMIT, jint)

/*!
 @brief Bitmask property General_Category_Mask.
 This is the General_Category property returned as a bit mask.
  When used in UCharacter.getIntPropertyValue(c),
  returns bit masks for UCharacterCategory values where exactly one bit is set.
  When used with UCharacter.getPropertyValueName() and UCharacter.getPropertyValueEnum(),
  a multi-bit mask is used for sets of categories like "Letters".
 */
inline jint AndroidIcuLangUProperty_get_GENERAL_CATEGORY_MASK(void);
#define AndroidIcuLangUProperty_GENERAL_CATEGORY_MASK 8192
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, GENERAL_CATEGORY_MASK, jint)

/*!
 @brief First constant for bit-mask Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_MASK_START(void);
#define AndroidIcuLangUProperty_MASK_START 8192
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, MASK_START, jint)

/*!
 @brief One more than the last constant for bit-mask Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_MASK_LIMIT(void);
#define AndroidIcuLangUProperty_MASK_LIMIT 8193
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, MASK_LIMIT, jint)

/*!
 @brief Double property Numeric_Value.
 Corresponds to UCharacter.getUnicodeNumericValue(int).
 */
inline jint AndroidIcuLangUProperty_get_NUMERIC_VALUE(void);
#define AndroidIcuLangUProperty_NUMERIC_VALUE 12288
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NUMERIC_VALUE, jint)

/*!
 @brief First constant for double Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_DOUBLE_START(void);
#define AndroidIcuLangUProperty_DOUBLE_START 12288
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, DOUBLE_START, jint)

/*!
 @brief One more than the last constant for double Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_DOUBLE_LIMIT(void);
#define AndroidIcuLangUProperty_DOUBLE_LIMIT 12289
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, DOUBLE_LIMIT, jint)

/*!
 @brief String property Age.
 Corresponds to UCharacter.getAge(int).
 */
inline jint AndroidIcuLangUProperty_get_AGE(void);
#define AndroidIcuLangUProperty_AGE 16384
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, AGE, jint)

/*!
 @brief First constant for string Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_STRING_START(void);
#define AndroidIcuLangUProperty_STRING_START 16384
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, STRING_START, jint)

/*!
 @brief String property Bidi_Mirroring_Glyph.
 Corresponds to UCharacter.getMirror(int).
 */
inline jint AndroidIcuLangUProperty_get_BIDI_MIRRORING_GLYPH(void);
#define AndroidIcuLangUProperty_BIDI_MIRRORING_GLYPH 16385
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BIDI_MIRRORING_GLYPH, jint)

/*!
 @brief String property Case_Folding.
 Corresponds to UCharacter.foldCase(String, boolean).
 */
inline jint AndroidIcuLangUProperty_get_CASE_FOLDING(void);
#define AndroidIcuLangUProperty_CASE_FOLDING 16386
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, CASE_FOLDING, jint)

/*!
 @brief Deprecated string property ISO_Comment.
 Corresponds to UCharacter.getISOComment(int).
 */
inline jint AndroidIcuLangUProperty_get_ISO_COMMENT(void);
#define AndroidIcuLangUProperty_ISO_COMMENT 16387
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, ISO_COMMENT, jint)

/*!
 @brief String property Lowercase_Mapping.
 Corresponds to UCharacter.toLowerCase(String).
 */
inline jint AndroidIcuLangUProperty_get_LOWERCASE_MAPPING(void);
#define AndroidIcuLangUProperty_LOWERCASE_MAPPING 16388
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, LOWERCASE_MAPPING, jint)

/*!
 @brief String property Name.
 Corresponds to UCharacter.getName(int).
 */
inline jint AndroidIcuLangUProperty_get_NAME(void);
#define AndroidIcuLangUProperty_NAME 16389
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, NAME, jint)

/*!
 @brief String property Simple_Case_Folding.
 Corresponds to UCharacter.foldCase(int, boolean).
 */
inline jint AndroidIcuLangUProperty_get_SIMPLE_CASE_FOLDING(void);
#define AndroidIcuLangUProperty_SIMPLE_CASE_FOLDING 16390
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SIMPLE_CASE_FOLDING, jint)

/*!
 @brief String property Simple_Lowercase_Mapping.
 Corresponds to UCharacter.toLowerCase(int).
 */
inline jint AndroidIcuLangUProperty_get_SIMPLE_LOWERCASE_MAPPING(void);
#define AndroidIcuLangUProperty_SIMPLE_LOWERCASE_MAPPING 16391
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SIMPLE_LOWERCASE_MAPPING, jint)

/*!
 @brief String property Simple_Titlecase_Mapping.
 Corresponds to UCharacter.toTitleCase(int).
 */
inline jint AndroidIcuLangUProperty_get_SIMPLE_TITLECASE_MAPPING(void);
#define AndroidIcuLangUProperty_SIMPLE_TITLECASE_MAPPING 16392
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SIMPLE_TITLECASE_MAPPING, jint)

/*!
 @brief String property Simple_Uppercase_Mapping.
 Corresponds to UCharacter.toUpperCase(int).
 */
inline jint AndroidIcuLangUProperty_get_SIMPLE_UPPERCASE_MAPPING(void);
#define AndroidIcuLangUProperty_SIMPLE_UPPERCASE_MAPPING 16393
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SIMPLE_UPPERCASE_MAPPING, jint)

/*!
 @brief String property Titlecase_Mapping.
 Corresponds to UCharacter.toTitleCase(String).
 */
inline jint AndroidIcuLangUProperty_get_TITLECASE_MAPPING(void);
#define AndroidIcuLangUProperty_TITLECASE_MAPPING 16394
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, TITLECASE_MAPPING, jint)

/*!
 @brief String property Unicode_1_Name.
 This property is of little practical value.
  Beginning with ICU 49, ICU APIs return null or an empty string for this property.
  Corresponds to UCharacter.getName1_0(int).
 */
inline jint AndroidIcuLangUProperty_get_UNICODE_1_NAME(void);
#define AndroidIcuLangUProperty_UNICODE_1_NAME 16395
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, UNICODE_1_NAME, jint)

/*!
 @brief String property Uppercase_Mapping.
 Corresponds to UCharacter.toUpperCase(String).
 */
inline jint AndroidIcuLangUProperty_get_UPPERCASE_MAPPING(void);
#define AndroidIcuLangUProperty_UPPERCASE_MAPPING 16396
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, UPPERCASE_MAPPING, jint)

/*!
 @brief String property Bidi_Paired_Bracket (new in Unicode 6.3).
 Corresponds to UCharacter.getBidiPairedBracket.
 */
inline jint AndroidIcuLangUProperty_get_BIDI_PAIRED_BRACKET(void);
#define AndroidIcuLangUProperty_BIDI_PAIRED_BRACKET 16397
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, BIDI_PAIRED_BRACKET, jint)

/*!
 @brief One more than the last constant for string Unicode properties.
 */
inline jint AndroidIcuLangUProperty_get_STRING_LIMIT(void);
#define AndroidIcuLangUProperty_STRING_LIMIT 16398
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, STRING_LIMIT, jint)

/*!
 @brief Miscellaneous property Script_Extensions (new in Unicode 6.0).
 Some characters are commonly used in multiple scripts.
  For more information, see UAX #24: http://www.unicode.org/reports/tr24/.
  Corresponds to UScript.hasScript and UScript.getScriptExtensions.
 */
inline jint AndroidIcuLangUProperty_get_SCRIPT_EXTENSIONS(void);
#define AndroidIcuLangUProperty_SCRIPT_EXTENSIONS 28672
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, SCRIPT_EXTENSIONS, jint)

/*!
 @brief First constant for Unicode properties with unusual value types.
 */
inline jint AndroidIcuLangUProperty_get_OTHER_PROPERTY_START(void);
#define AndroidIcuLangUProperty_OTHER_PROPERTY_START 28672
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, OTHER_PROPERTY_START, jint)

/*!
 @brief One more than the last constant for Unicode properties with unusual value types.
 */
inline jint AndroidIcuLangUProperty_get_OTHER_PROPERTY_LIMIT(void);
#define AndroidIcuLangUProperty_OTHER_PROPERTY_LIMIT 28673
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty, OTHER_PROPERTY_LIMIT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUProperty)

#endif

#if !defined (AndroidIcuLangUProperty_NameChoice_) && (INCLUDE_ALL_AndroidIcuLangUProperty || defined(INCLUDE_AndroidIcuLangUProperty_NameChoice))
#define AndroidIcuLangUProperty_NameChoice_

@class JavaLangInteger;

/*!
 @brief Selector constants for UCharacter.getPropertyName() and
  UCharacter.getPropertyValueName().These selectors are used to
  choose which name is returned for a given property or value.
 All properties and values have a long name.  Most have a short
  name, but some do not.  Unicode allows for additional names,
  beyond the long and short name, which would be indicated by
  LONG + i, where i=1, 2,...
 - seealso: UCharacter#getPropertyName
 - seealso: UCharacter#getPropertyValueName
 */
@protocol AndroidIcuLangUProperty_NameChoice < JavaObject >

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuLangUProperty_NameChoice)

/*!
 @brief Selector for the abbreviated name of a property or value.
 Most properties and values have a short name; those that do
  not return null.
 */
inline jint AndroidIcuLangUProperty_NameChoice_get_SHORT(void);
#define AndroidIcuLangUProperty_NameChoice_SHORT 0
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty_NameChoice, SHORT, jint)

/*!
 @brief Selector for the long name of a property or value.All
  properties and values have a long name.
 */
inline jint AndroidIcuLangUProperty_NameChoice_get_LONG(void);
#define AndroidIcuLangUProperty_NameChoice_LONG 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty_NameChoice, LONG, jint)

/*!
 @brief The number of predefined property name choices.Individual
  properties or values may have more than COUNT aliases.
 */
inline jint AndroidIcuLangUProperty_NameChoice_get_COUNT(void);
#define AndroidIcuLangUProperty_NameChoice_COUNT 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidIcuLangUProperty_NameChoice, COUNT, jint)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuLangUProperty_NameChoice)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidIcuLangUProperty")
