//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/external/icu/android_icu4j/src/main/java/android/icu/util/MeasureUnit.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidIcuUtilMeasureUnit")
#ifdef RESTRICT_AndroidIcuUtilMeasureUnit
#define INCLUDE_ALL_AndroidIcuUtilMeasureUnit 0
#else
#define INCLUDE_ALL_AndroidIcuUtilMeasureUnit 1
#endif
#undef RESTRICT_AndroidIcuUtilMeasureUnit

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (AndroidIcuUtilMeasureUnit_) && (INCLUDE_ALL_AndroidIcuUtilMeasureUnit || defined(INCLUDE_AndroidIcuUtilMeasureUnit))
#define AndroidIcuUtilMeasureUnit_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class AndroidIcuTextUnicodeSet;
@class AndroidIcuUtilTimeUnit;
@class JavaLangBoolean;
@class JavaLangInteger;
@protocol AndroidIcuUtilMeasureUnit_Factory;
@protocol JavaUtilSet;

/*!
 @brief A unit such as length, mass, volume, currency, etc.A unit is
  coupled with a numeric amount to produce a Measure.
 MeasureUnit objects are immutable.
  All subclasses must guarantee that. (However, subclassing is discouraged.)
 - seealso: android.icu.util.Measure
 @author Alan Liu
 */
@interface AndroidIcuUtilMeasureUnit : NSObject < JavaIoSerializable > {
 @public
  /*!
   */
  NSString *type_;
  /*!
   */
  NSString *subType_;
}

#pragma mark Public

/*!
 */
- (jboolean)isEqual:(id)rhs;

/*!
 @brief Get all of the available units.Returned set is unmodifiable.
 */
+ (id<JavaUtilSet>)getAvailable;

/*!
 @brief For the given type, return the available units.
 @param type the type
 @return the available units for type. Returned set is unmodifiable.
 */
+ (id<JavaUtilSet>)getAvailableWithNSString:(NSString *)type;

/*!
 @brief Get all of the available units' types.Returned set is unmodifiable.
 */
+ (id<JavaUtilSet>)getAvailableTypes;

/*!
 @brief Get the subType, such as “foot”.
 */
- (NSString *)getSubtype;

/*!
 @brief Get the type, such as "length"
 */
- (NSString *)getType;

/*!
 */
- (NSUInteger)hash;

/*!
 @brief Create a MeasureUnit instance (creates a singleton instance).
 <p>
  Normally this method should not be used, since there will be no formatting data
  available for it, and it may not be returned by getAvailable().
  However, for special purposes (such as CLDR tooling), it is available.
 */
+ (AndroidIcuUtilMeasureUnit *)internalGetInstanceWithNSString:(NSString *)type
                                                  withNSString:(NSString *)subType;

/*!
 @brief For ICU use only.
 */
+ (AndroidIcuUtilMeasureUnit *)resolveUnitPerUnitWithAndroidIcuUtilMeasureUnit:(AndroidIcuUtilMeasureUnit *)unit
                                                 withAndroidIcuUtilMeasureUnit:(AndroidIcuUtilMeasureUnit *)perUnit;

/*!
 */
- (NSString *)description;

#pragma mark Protected

/*!
 */
- (instancetype __nonnull)initWithNSString:(NSString *)type
                              withNSString:(NSString *)subType;

/*!
 */
+ (AndroidIcuUtilMeasureUnit *)addUnitWithNSString:(NSString *)type
                                      withNSString:(NSString *)unitName
             withAndroidIcuUtilMeasureUnit_Factory:(id<AndroidIcuUtilMeasureUnit_Factory>)factory;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(AndroidIcuUtilMeasureUnit)

J2OBJC_FIELD_SETTER(AndroidIcuUtilMeasureUnit, type_, NSString *)
J2OBJC_FIELD_SETTER(AndroidIcuUtilMeasureUnit, subType_, NSString *)

inline AndroidIcuTextUnicodeSet *AndroidIcuUtilMeasureUnit_get_ASCII(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuTextUnicodeSet *AndroidIcuUtilMeasureUnit_ASCII;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, ASCII, AndroidIcuTextUnicodeSet *)

inline AndroidIcuTextUnicodeSet *AndroidIcuUtilMeasureUnit_get_ASCII_HYPHEN_DIGITS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuTextUnicodeSet *AndroidIcuUtilMeasureUnit_ASCII_HYPHEN_DIGITS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, ASCII_HYPHEN_DIGITS, AndroidIcuTextUnicodeSet *)

inline id<AndroidIcuUtilMeasureUnit_Factory> AndroidIcuUtilMeasureUnit_get_CURRENCY_FACTORY(void);
inline id<AndroidIcuUtilMeasureUnit_Factory> AndroidIcuUtilMeasureUnit_set_CURRENCY_FACTORY(id<AndroidIcuUtilMeasureUnit_Factory> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<AndroidIcuUtilMeasureUnit_Factory> AndroidIcuUtilMeasureUnit_CURRENCY_FACTORY;
J2OBJC_STATIC_FIELD_OBJ(AndroidIcuUtilMeasureUnit, CURRENCY_FACTORY, id<AndroidIcuUtilMeasureUnit_Factory>)

inline id<AndroidIcuUtilMeasureUnit_Factory> AndroidIcuUtilMeasureUnit_get_TIMEUNIT_FACTORY(void);
inline id<AndroidIcuUtilMeasureUnit_Factory> AndroidIcuUtilMeasureUnit_set_TIMEUNIT_FACTORY(id<AndroidIcuUtilMeasureUnit_Factory> value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<AndroidIcuUtilMeasureUnit_Factory> AndroidIcuUtilMeasureUnit_TIMEUNIT_FACTORY;
J2OBJC_STATIC_FIELD_OBJ(AndroidIcuUtilMeasureUnit, TIMEUNIT_FACTORY, id<AndroidIcuUtilMeasureUnit_Factory>)

/*!
 @brief Constant for unit of acceleration: g-force
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_G_FORCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_G_FORCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, G_FORCE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of acceleration: meter-per-second-squared
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_METER_PER_SECOND_SQUARED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_METER_PER_SECOND_SQUARED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, METER_PER_SECOND_SQUARED, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of angle: arc-minute
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_ARC_MINUTE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_ARC_MINUTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, ARC_MINUTE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of angle: arc-second
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_ARC_SECOND(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_ARC_SECOND;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, ARC_SECOND, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of angle: degree
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_DEGREE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_DEGREE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, DEGREE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of angle: radian
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_RADIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_RADIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, RADIAN, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of angle: revolution
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_REVOLUTION_ANGLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_REVOLUTION_ANGLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, REVOLUTION_ANGLE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: acre
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_ACRE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_ACRE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, ACRE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: hectare
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_HECTARE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_HECTARE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, HECTARE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: square-centimeter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SQUARE_CENTIMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SQUARE_CENTIMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SQUARE_CENTIMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: square-foot
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SQUARE_FOOT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SQUARE_FOOT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SQUARE_FOOT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: square-inch
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SQUARE_INCH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SQUARE_INCH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SQUARE_INCH, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: square-kilometer
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SQUARE_KILOMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SQUARE_KILOMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SQUARE_KILOMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: square-meter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SQUARE_METER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SQUARE_METER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SQUARE_METER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: square-mile
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SQUARE_MILE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SQUARE_MILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SQUARE_MILE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of area: square-yard
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SQUARE_YARD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SQUARE_YARD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SQUARE_YARD, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of concentr: karat
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KARAT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KARAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KARAT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of concentr: milligram-per-deciliter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIGRAM_PER_DECILITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIGRAM_PER_DECILITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIGRAM_PER_DECILITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of concentr: millimole-per-liter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIMOLE_PER_LITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIMOLE_PER_LITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIMOLE_PER_LITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of concentr: part-per-million
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_PART_PER_MILLION(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_PART_PER_MILLION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, PART_PER_MILLION, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of consumption: liter-per-100kilometers
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_LITER_PER_100KILOMETERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_LITER_PER_100KILOMETERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, LITER_PER_100KILOMETERS, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of consumption: liter-per-kilometer
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_LITER_PER_KILOMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_LITER_PER_KILOMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, LITER_PER_KILOMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of consumption: mile-per-gallon
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILE_PER_GALLON(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILE_PER_GALLON;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILE_PER_GALLON, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of consumption: mile-per-gallon-imperial
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILE_PER_GALLON_IMPERIAL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILE_PER_GALLON_IMPERIAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILE_PER_GALLON_IMPERIAL, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of coordinate: east
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_EAST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_EAST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, EAST, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of coordinate: north
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_NORTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_NORTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, NORTH, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of coordinate: south
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_SOUTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_SOUTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SOUTH, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of coordinate: west
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_WEST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_WEST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, WEST, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: bit
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_BIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_BIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, BIT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: byte
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_BYTE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_BYTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, BYTE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: gigabit
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GIGABIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GIGABIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GIGABIT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: gigabyte
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GIGABYTE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GIGABYTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GIGABYTE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: kilobit
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOBIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOBIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOBIT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: kilobyte
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOBYTE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOBYTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOBYTE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: megabit
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MEGABIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MEGABIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MEGABIT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: megabyte
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MEGABYTE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MEGABYTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MEGABYTE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: terabit
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_TERABIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_TERABIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, TERABIT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of digital: terabyte
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_TERABYTE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_TERABYTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, TERABYTE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of duration: century
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CENTURY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CENTURY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CENTURY, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of duration: day
 */
inline AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_get_DAY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_DAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, DAY, AndroidIcuUtilTimeUnit *)

/*!
 @brief Constant for unit of duration: hour
 */
inline AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_get_HOUR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_HOUR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, HOUR, AndroidIcuUtilTimeUnit *)

/*!
 @brief Constant for unit of duration: microsecond
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MICROSECOND(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MICROSECOND;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MICROSECOND, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of duration: millisecond
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLISECOND(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLISECOND;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLISECOND, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of duration: minute
 */
inline AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_get_MINUTE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_MINUTE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MINUTE, AndroidIcuUtilTimeUnit *)

/*!
 @brief Constant for unit of duration: month
 */
inline AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_get_MONTH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_MONTH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MONTH, AndroidIcuUtilTimeUnit *)

/*!
 @brief Constant for unit of duration: nanosecond
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_NANOSECOND(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_NANOSECOND;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, NANOSECOND, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of duration: second
 */
inline AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_get_SECOND(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_SECOND;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, SECOND, AndroidIcuUtilTimeUnit *)

/*!
 @brief Constant for unit of duration: week
 */
inline AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_get_WEEK(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_WEEK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, WEEK, AndroidIcuUtilTimeUnit *)

/*!
 @brief Constant for unit of duration: year
 */
inline AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_get_YEAR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilTimeUnit *AndroidIcuUtilMeasureUnit_YEAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, YEAR, AndroidIcuUtilTimeUnit *)

/*!
 @brief Constant for unit of electric: ampere
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_AMPERE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_AMPERE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, AMPERE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of electric: milliampere
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIAMPERE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIAMPERE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIAMPERE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of electric: ohm
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_OHM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_OHM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, OHM, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of electric: volt
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_VOLT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_VOLT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, VOLT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of energy: calorie
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CALORIE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CALORIE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CALORIE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of energy: foodcalorie
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_FOODCALORIE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_FOODCALORIE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, FOODCALORIE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of energy: joule
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_JOULE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_JOULE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, JOULE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of energy: kilocalorie
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOCALORIE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOCALORIE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOCALORIE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of energy: kilojoule
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOJOULE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOJOULE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOJOULE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of energy: kilowatt-hour
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOWATT_HOUR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOWATT_HOUR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOWATT_HOUR, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of frequency: gigahertz
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GIGAHERTZ(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GIGAHERTZ;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GIGAHERTZ, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of frequency: hertz
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_HERTZ(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_HERTZ;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, HERTZ, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of frequency: kilohertz
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOHERTZ(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOHERTZ;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOHERTZ, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of frequency: megahertz
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MEGAHERTZ(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MEGAHERTZ;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MEGAHERTZ, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: astronomical-unit
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_ASTRONOMICAL_UNIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_ASTRONOMICAL_UNIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, ASTRONOMICAL_UNIT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: centimeter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CENTIMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CENTIMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CENTIMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: decimeter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_DECIMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_DECIMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, DECIMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: fathom
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_FATHOM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_FATHOM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, FATHOM, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: foot
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_FOOT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_FOOT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, FOOT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: furlong
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_FURLONG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_FURLONG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, FURLONG, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: inch
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_INCH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_INCH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, INCH, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: kilometer
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: light-year
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_LIGHT_YEAR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_LIGHT_YEAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, LIGHT_YEAR, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: meter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_METER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_METER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, METER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: micrometer
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MICROMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MICROMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MICROMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: mile
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: mile-scandinavian
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILE_SCANDINAVIAN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILE_SCANDINAVIAN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILE_SCANDINAVIAN, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: millimeter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: nanometer
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_NANOMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_NANOMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, NANOMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: nautical-mile
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_NAUTICAL_MILE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_NAUTICAL_MILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, NAUTICAL_MILE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: parsec
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_PARSEC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_PARSEC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, PARSEC, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: picometer
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_PICOMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_PICOMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, PICOMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of length: yard
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_YARD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_YARD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, YARD, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of light: lux
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_LUX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_LUX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, LUX, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: carat
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CARAT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CARAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CARAT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: gram
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GRAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GRAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GRAM, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: kilogram
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOGRAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOGRAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOGRAM, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: metric-ton
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_METRIC_TON(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_METRIC_TON;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, METRIC_TON, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: microgram
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MICROGRAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MICROGRAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MICROGRAM, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: milligram
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIGRAM(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIGRAM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIGRAM, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: ounce
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_OUNCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_OUNCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, OUNCE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: ounce-troy
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_OUNCE_TROY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_OUNCE_TROY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, OUNCE_TROY, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: pound
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_POUND(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_POUND;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, POUND, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: stone
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_STONE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_STONE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, STONE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of mass: ton
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_TON(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_TON;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, TON, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of power: gigawatt
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GIGAWATT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GIGAWATT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GIGAWATT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of power: horsepower
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_HORSEPOWER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_HORSEPOWER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, HORSEPOWER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of power: kilowatt
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOWATT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOWATT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOWATT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of power: megawatt
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MEGAWATT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MEGAWATT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MEGAWATT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of power: milliwatt
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIWATT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIWATT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIWATT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of power: watt
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_WATT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_WATT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, WATT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of pressure: hectopascal
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_HECTOPASCAL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_HECTOPASCAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, HECTOPASCAL, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of pressure: inch-hg
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_INCH_HG(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_INCH_HG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, INCH_HG, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of pressure: millibar
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIBAR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIBAR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIBAR, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of pressure: millimeter-of-mercury
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLIMETER_OF_MERCURY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLIMETER_OF_MERCURY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLIMETER_OF_MERCURY, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of pressure: pound-per-square-inch
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_POUND_PER_SQUARE_INCH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_POUND_PER_SQUARE_INCH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, POUND_PER_SQUARE_INCH, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of speed: kilometer-per-hour
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KILOMETER_PER_HOUR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KILOMETER_PER_HOUR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KILOMETER_PER_HOUR, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of speed: knot
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KNOT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KNOT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KNOT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of speed: meter-per-second
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_METER_PER_SECOND(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_METER_PER_SECOND;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, METER_PER_SECOND, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of speed: mile-per-hour
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILE_PER_HOUR(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILE_PER_HOUR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILE_PER_HOUR, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of temperature: celsius
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CELSIUS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CELSIUS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CELSIUS, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of temperature: fahrenheit
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_FAHRENHEIT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_FAHRENHEIT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, FAHRENHEIT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of temperature: generic
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GENERIC_TEMPERATURE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GENERIC_TEMPERATURE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GENERIC_TEMPERATURE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of temperature: kelvin
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_KELVIN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_KELVIN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, KELVIN, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: acre-foot
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_ACRE_FOOT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_ACRE_FOOT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, ACRE_FOOT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: bushel
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_BUSHEL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_BUSHEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, BUSHEL, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: centiliter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CENTILITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CENTILITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CENTILITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cubic-centimeter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUBIC_CENTIMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUBIC_CENTIMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUBIC_CENTIMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cubic-foot
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUBIC_FOOT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUBIC_FOOT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUBIC_FOOT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cubic-inch
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUBIC_INCH(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUBIC_INCH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUBIC_INCH, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cubic-kilometer
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUBIC_KILOMETER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUBIC_KILOMETER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUBIC_KILOMETER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cubic-meter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUBIC_METER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUBIC_METER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUBIC_METER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cubic-mile
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUBIC_MILE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUBIC_MILE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUBIC_MILE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cubic-yard
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUBIC_YARD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUBIC_YARD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUBIC_YARD, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cup
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUP, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: cup-metric
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_CUP_METRIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_CUP_METRIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, CUP_METRIC, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: deciliter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_DECILITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_DECILITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, DECILITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: fluid-ounce
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_FLUID_OUNCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_FLUID_OUNCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, FLUID_OUNCE, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: gallon
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GALLON(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GALLON;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GALLON, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: gallon-imperial
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_GALLON_IMPERIAL(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_GALLON_IMPERIAL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, GALLON_IMPERIAL, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: hectoliter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_HECTOLITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_HECTOLITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, HECTOLITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: liter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_LITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_LITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, LITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: megaliter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MEGALITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MEGALITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MEGALITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: milliliter
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_MILLILITER(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_MILLILITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, MILLILITER, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: pint
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_PINT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_PINT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, PINT, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: pint-metric
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_PINT_METRIC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_PINT_METRIC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, PINT_METRIC, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: quart
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_QUART(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_QUART;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, QUART, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: tablespoon
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_TABLESPOON(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_TABLESPOON;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, TABLESPOON, AndroidIcuUtilMeasureUnit *)

/*!
 @brief Constant for unit of volume: teaspoon
 */
inline AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_get_TEASPOON(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_TEASPOON;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidIcuUtilMeasureUnit, TEASPOON, AndroidIcuUtilMeasureUnit *)

FOUNDATION_EXPORT void AndroidIcuUtilMeasureUnit_initWithNSString_withNSString_(AndroidIcuUtilMeasureUnit *self, NSString *type, NSString *subType);

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *new_AndroidIcuUtilMeasureUnit_initWithNSString_withNSString_(NSString *type, NSString *subType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *create_AndroidIcuUtilMeasureUnit_initWithNSString_withNSString_(NSString *type, NSString *subType);

FOUNDATION_EXPORT id<JavaUtilSet> AndroidIcuUtilMeasureUnit_getAvailableTypes(void);

FOUNDATION_EXPORT id<JavaUtilSet> AndroidIcuUtilMeasureUnit_getAvailableWithNSString_(NSString *type);

FOUNDATION_EXPORT id<JavaUtilSet> AndroidIcuUtilMeasureUnit_getAvailable(void);

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_internalGetInstanceWithNSString_withNSString_(NSString *type, NSString *subType);

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_resolveUnitPerUnitWithAndroidIcuUtilMeasureUnit_withAndroidIcuUtilMeasureUnit_(AndroidIcuUtilMeasureUnit *unit, AndroidIcuUtilMeasureUnit *perUnit);

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit *AndroidIcuUtilMeasureUnit_addUnitWithNSString_withNSString_withAndroidIcuUtilMeasureUnit_Factory_(NSString *type, NSString *unitName, id<AndroidIcuUtilMeasureUnit_Factory> factory);

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuUtilMeasureUnit)

#endif

#if !defined (AndroidIcuUtilMeasureUnit_Factory_) && (INCLUDE_ALL_AndroidIcuUtilMeasureUnit || defined(INCLUDE_AndroidIcuUtilMeasureUnit_Factory))
#define AndroidIcuUtilMeasureUnit_Factory_

@class AndroidIcuUtilMeasureUnit;

/*!
 */
@protocol AndroidIcuUtilMeasureUnit_Factory < JavaObject >

/*!
 */
- (AndroidIcuUtilMeasureUnit *)createWithNSString:(NSString *)type
                                     withNSString:(NSString *)subType;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuUtilMeasureUnit_Factory)

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuUtilMeasureUnit_Factory)

#endif

#if !defined (AndroidIcuUtilMeasureUnit_MeasureUnitProxy_) && (INCLUDE_ALL_AndroidIcuUtilMeasureUnit || defined(INCLUDE_AndroidIcuUtilMeasureUnit_MeasureUnitProxy))
#define AndroidIcuUtilMeasureUnit_MeasureUnitProxy_

#define RESTRICT_JavaIoExternalizable 1
#define INCLUDE_JavaIoExternalizable 1
#include "java/io/Externalizable.h"

@protocol JavaIoObjectInput;
@protocol JavaIoObjectOutput;

@interface AndroidIcuUtilMeasureUnit_MeasureUnitProxy : NSObject < JavaIoExternalizable >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithNSString:(NSString *)type
                              withNSString:(NSString *)subType;

- (void)readExternalWithJavaIoObjectInput:(id<JavaIoObjectInput>)inArg;

- (void)writeExternalWithJavaIoObjectOutput:(id<JavaIoObjectOutput>)outArg;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidIcuUtilMeasureUnit_MeasureUnitProxy)

FOUNDATION_EXPORT void AndroidIcuUtilMeasureUnit_MeasureUnitProxy_initWithNSString_withNSString_(AndroidIcuUtilMeasureUnit_MeasureUnitProxy *self, NSString *type, NSString *subType);

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit_MeasureUnitProxy *new_AndroidIcuUtilMeasureUnit_MeasureUnitProxy_initWithNSString_withNSString_(NSString *type, NSString *subType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit_MeasureUnitProxy *create_AndroidIcuUtilMeasureUnit_MeasureUnitProxy_initWithNSString_withNSString_(NSString *type, NSString *subType);

FOUNDATION_EXPORT void AndroidIcuUtilMeasureUnit_MeasureUnitProxy_init(AndroidIcuUtilMeasureUnit_MeasureUnitProxy *self);

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit_MeasureUnitProxy *new_AndroidIcuUtilMeasureUnit_MeasureUnitProxy_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidIcuUtilMeasureUnit_MeasureUnitProxy *create_AndroidIcuUtilMeasureUnit_MeasureUnitProxy_init(void);

J2OBJC_TYPE_LITERAL_HEADER(AndroidIcuUtilMeasureUnit_MeasureUnitProxy)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_AndroidIcuUtilMeasureUnit")
