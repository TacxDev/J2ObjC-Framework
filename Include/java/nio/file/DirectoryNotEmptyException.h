//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/nio/file/DirectoryNotEmptyException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioFileDirectoryNotEmptyException")
#ifdef RESTRICT_JavaNioFileDirectoryNotEmptyException
#define INCLUDE_ALL_JavaNioFileDirectoryNotEmptyException 0
#else
#define INCLUDE_ALL_JavaNioFileDirectoryNotEmptyException 1
#endif
#undef RESTRICT_JavaNioFileDirectoryNotEmptyException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNioFileDirectoryNotEmptyException_) && (INCLUDE_ALL_JavaNioFileDirectoryNotEmptyException || defined(INCLUDE_JavaNioFileDirectoryNotEmptyException))
#define JavaNioFileDirectoryNotEmptyException_

#define RESTRICT_JavaNioFileFileSystemException 1
#define INCLUDE_JavaNioFileFileSystemException 1
#include "java/nio/file/FileSystemException.h"

@class JavaLangLong;

/*!
 @brief Checked exception thrown when a file system operation fails because a
  directory is not empty.
 @since 1.7
 */
@interface JavaNioFileDirectoryNotEmptyException : JavaNioFileFileSystemException

#pragma mark Public

/*!
 @brief Constructs an instance of this class.
 @param dir a string identifying the directory or 
 <code>null</code>  if not known
 */
- (instancetype __nonnull)initWithNSString:(NSString *)dir;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                              withNSString:(NSString *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioFileDirectoryNotEmptyException)

inline jlong JavaNioFileDirectoryNotEmptyException_get_serialVersionUID(void);
#define JavaNioFileDirectoryNotEmptyException_serialVersionUID 3056667871802779003LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaNioFileDirectoryNotEmptyException, serialVersionUID, jlong)

FOUNDATION_EXPORT void JavaNioFileDirectoryNotEmptyException_initWithNSString_(JavaNioFileDirectoryNotEmptyException *self, NSString *dir);

FOUNDATION_EXPORT JavaNioFileDirectoryNotEmptyException *new_JavaNioFileDirectoryNotEmptyException_initWithNSString_(NSString *dir) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNioFileDirectoryNotEmptyException *create_JavaNioFileDirectoryNotEmptyException_initWithNSString_(NSString *dir);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileDirectoryNotEmptyException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaNioFileDirectoryNotEmptyException")
