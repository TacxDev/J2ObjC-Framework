//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/nio/file/FileAlreadyExistsException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioFileFileAlreadyExistsException")
#ifdef RESTRICT_JavaNioFileFileAlreadyExistsException
#define INCLUDE_ALL_JavaNioFileFileAlreadyExistsException 0
#else
#define INCLUDE_ALL_JavaNioFileFileAlreadyExistsException 1
#endif
#undef RESTRICT_JavaNioFileFileAlreadyExistsException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNioFileFileAlreadyExistsException_) && (INCLUDE_ALL_JavaNioFileFileAlreadyExistsException || defined(INCLUDE_JavaNioFileFileAlreadyExistsException))
#define JavaNioFileFileAlreadyExistsException_

#define RESTRICT_JavaNioFileFileSystemException 1
#define INCLUDE_JavaNioFileFileSystemException 1
#include "java/nio/file/FileSystemException.h"

@class JavaLangLong;

/*!
 @brief Checked exception thrown when an attempt is made to create a file or
  directory and a file of that name already exists.
 @since 1.7
 */
@interface JavaNioFileFileAlreadyExistsException : JavaNioFileFileSystemException

#pragma mark Public

/*!
 @brief Constructs an instance of this class.
 @param file a string identifying the file or 
 <code>null</code>  if not known
 */
- (instancetype __nonnull)initWithNSString:(NSString *)file;

/*!
 @brief Constructs an instance of this class.
 @param file a string identifying the file or 
 <code>null</code>  if not known
 @param other a string identifying the other file or 
 <code>null</code>  if not known
 @param reason a reason message with additional information or 
 <code>null</code>
 */
- (instancetype __nonnull)initWithNSString:(NSString *)file
                              withNSString:(NSString *)other
                              withNSString:(NSString *)reason;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioFileFileAlreadyExistsException)

inline jlong JavaNioFileFileAlreadyExistsException_get_serialVersionUID(void);
#define JavaNioFileFileAlreadyExistsException_serialVersionUID 7579540934498831181LL
J2OBJC_STATIC_FIELD_CONSTANT(JavaNioFileFileAlreadyExistsException, serialVersionUID, jlong)

FOUNDATION_EXPORT void JavaNioFileFileAlreadyExistsException_initWithNSString_(JavaNioFileFileAlreadyExistsException *self, NSString *file);

FOUNDATION_EXPORT JavaNioFileFileAlreadyExistsException *new_JavaNioFileFileAlreadyExistsException_initWithNSString_(NSString *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNioFileFileAlreadyExistsException *create_JavaNioFileFileAlreadyExistsException_initWithNSString_(NSString *file);

FOUNDATION_EXPORT void JavaNioFileFileAlreadyExistsException_initWithNSString_withNSString_withNSString_(JavaNioFileFileAlreadyExistsException *self, NSString *file, NSString *other, NSString *reason);

FOUNDATION_EXPORT JavaNioFileFileAlreadyExistsException *new_JavaNioFileFileAlreadyExistsException_initWithNSString_withNSString_withNSString_(NSString *file, NSString *other, NSString *reason) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNioFileFileAlreadyExistsException *create_JavaNioFileFileAlreadyExistsException_initWithNSString_withNSString_withNSString_(NSString *file, NSString *other, NSString *reason);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileFileAlreadyExistsException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaNioFileFileAlreadyExistsException")
