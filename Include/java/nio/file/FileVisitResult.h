//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/nio/file/FileVisitResult.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioFileFileVisitResult")
#ifdef RESTRICT_JavaNioFileFileVisitResult
#define INCLUDE_ALL_JavaNioFileFileVisitResult 0
#else
#define INCLUDE_ALL_JavaNioFileFileVisitResult 1
#endif
#undef RESTRICT_JavaNioFileFileVisitResult

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNioFileFileVisitResult_) && (INCLUDE_ALL_JavaNioFileFileVisitResult || defined(INCLUDE_JavaNioFileFileVisitResult))
#define JavaNioFileFileVisitResult_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(jint, JavaNioFileFileVisitResult_Enum) {
  JavaNioFileFileVisitResult_Enum_CONTINUE = 0,
  JavaNioFileFileVisitResult_Enum_TERMINATE = 1,
  JavaNioFileFileVisitResult_Enum_SKIP_SUBTREE = 2,
  JavaNioFileFileVisitResult_Enum_SKIP_SIBLINGS = 3,
};
#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define JavaNioFileFileVisitResult_ORDINAL jint
#else
#define JavaNioFileFileVisitResult_ORDINAL JavaNioFileFileVisitResult_Enum
#endif


/*!
 @brief The result type of a <code>FileVisitor</code>.
 @since 1.7
 - seealso: Files#walkFileTree
 */
@interface JavaNioFileFileVisitResult : JavaLangEnum

#pragma mark Public

+ (JavaNioFileFileVisitResult *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (JavaNioFileFileVisitResult_Enum)toNSEnum;

- (JavaNioFileFileVisitResult_ORDINAL)ordinal;

@end

J2OBJC_STATIC_INIT(JavaNioFileFileVisitResult)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT JavaNioFileFileVisitResult *JavaNioFileFileVisitResult_values_[];

/*!
 @brief Continue.When returned from a <code>preVisitDirectory</code>
  method then the entries in the directory should also
  be visited.
 */
inline JavaNioFileFileVisitResult *JavaNioFileFileVisitResult_get_CONTINUE(void);
J2OBJC_ENUM_CONSTANT(JavaNioFileFileVisitResult, CONTINUE)

/*!
 @brief Terminate.
 */
inline JavaNioFileFileVisitResult *JavaNioFileFileVisitResult_get_TERMINATE(void);
J2OBJC_ENUM_CONSTANT(JavaNioFileFileVisitResult, TERMINATE)

/*!
 @brief Continue without visiting the entries in this directory.This result
  is only meaningful when returned from the <code>preVisitDirectory</code>
  method; otherwise
  this result type is the same as returning <code>CONTINUE</code>.
 */
inline JavaNioFileFileVisitResult *JavaNioFileFileVisitResult_get_SKIP_SUBTREE(void);
J2OBJC_ENUM_CONSTANT(JavaNioFileFileVisitResult, SKIP_SUBTREE)

/*!
 @brief Continue without visiting the <em>siblings</em> of this file or directory.
 If returned from the <code>preVisitDirectory</code>
  method then the entries in the directory are also
  skipped and the <code>postVisitDirectory</code>
  method is not invoked.
 */
inline JavaNioFileFileVisitResult *JavaNioFileFileVisitResult_get_SKIP_SIBLINGS(void);
J2OBJC_ENUM_CONSTANT(JavaNioFileFileVisitResult, SKIP_SIBLINGS)

FOUNDATION_EXPORT IOSObjectArray *JavaNioFileFileVisitResult_values(void);

FOUNDATION_EXPORT JavaNioFileFileVisitResult *JavaNioFileFileVisitResult_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaNioFileFileVisitResult *JavaNioFileFileVisitResult_fromOrdinal(JavaNioFileFileVisitResult_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileFileVisitResult)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaNioFileFileVisitResult")
