//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/nio/file/FileVisitOption.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioFileFileVisitOption")
#ifdef RESTRICT_JavaNioFileFileVisitOption
#define INCLUDE_ALL_JavaNioFileFileVisitOption 0
#else
#define INCLUDE_ALL_JavaNioFileFileVisitOption 1
#endif
#undef RESTRICT_JavaNioFileFileVisitOption

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNioFileFileVisitOption_) && (INCLUDE_ALL_JavaNioFileFileVisitOption || defined(INCLUDE_JavaNioFileFileVisitOption))
#define JavaNioFileFileVisitOption_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(jint, JavaNioFileFileVisitOption_Enum) {
  JavaNioFileFileVisitOption_Enum_FOLLOW_LINKS = 0,
};
#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define JavaNioFileFileVisitOption_ORDINAL jint
#else
#define JavaNioFileFileVisitOption_ORDINAL JavaNioFileFileVisitOption_Enum
#endif


/*!
 @brief Defines the file tree traversal options.
 @since 1.7
 - seealso: Files#walkFileTree
 */
@interface JavaNioFileFileVisitOption : JavaLangEnum

#pragma mark Public

+ (JavaNioFileFileVisitOption *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (JavaNioFileFileVisitOption_Enum)toNSEnum;

- (JavaNioFileFileVisitOption_ORDINAL)ordinal;

@end

J2OBJC_STATIC_INIT(JavaNioFileFileVisitOption)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT JavaNioFileFileVisitOption *JavaNioFileFileVisitOption_values_[];

/*!
 @brief Follow symbolic links.
 */
inline JavaNioFileFileVisitOption *JavaNioFileFileVisitOption_get_FOLLOW_LINKS(void);
J2OBJC_ENUM_CONSTANT(JavaNioFileFileVisitOption, FOLLOW_LINKS)

FOUNDATION_EXPORT IOSObjectArray *JavaNioFileFileVisitOption_values(void);

FOUNDATION_EXPORT JavaNioFileFileVisitOption *JavaNioFileFileVisitOption_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT JavaNioFileFileVisitOption *JavaNioFileFileVisitOption_fromOrdinal(JavaNioFileFileVisitOption_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileFileVisitOption)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaNioFileFileVisitOption")
