//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/nio/file/attribute/AclEntry.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioFileAttributeAclEntry")
#ifdef RESTRICT_JavaNioFileAttributeAclEntry
#define INCLUDE_ALL_JavaNioFileAttributeAclEntry 0
#else
#define INCLUDE_ALL_JavaNioFileAttributeAclEntry 1
#endif
#undef RESTRICT_JavaNioFileAttributeAclEntry

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNioFileAttributeAclEntry_) && (INCLUDE_ALL_JavaNioFileAttributeAclEntry || defined(INCLUDE_JavaNioFileAttributeAclEntry))
#define JavaNioFileAttributeAclEntry_

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaNioFileAttributeAclEntryType;
@class JavaNioFileAttributeAclEntry_Builder;
@protocol JavaNioFileAttributeUserPrincipal;
@protocol JavaUtilSet;

/*!
 @brief An entry in an access control list (ACL).
 <p> The ACL entry represented by this class is based on the ACL model
  specified in <a href="http://www.ietf.org/rfc/rfc3530.txt"><i>RFC&nbsp;3530:
  Network File System (NFS) version 4 Protocol</i></a>. Each entry has four
  components as follows: 
 <ol>
     <li><p> The <code>type</code> component determines if the entry
     grants or denies access. </p></li>
     <li><p> The <code>principal</code> component, sometimes called the
     "who" component, is a <code>UserPrincipal</code> corresponding to the identity
     that the entry grants or denies access    
 </p></li>
     <li><p> The <code>permissions</code> component is a set of
     <code>permissions</code>
     </p></li>
     <li><p> The <code>flags</code> component is a set of <code>flags</code>
  to indicate how entries are inherited and propagated </p></li>
  </ol>
  
 <p> ACL entries are created using an associated <code>Builder</code> object by
  invoking its <code>build</code> method. 
 <p> ACL entries are immutable and are safe for use by multiple concurrent
  threads.
 @since 1.7
 */
@interface JavaNioFileAttributeAclEntry : NSObject

#pragma mark Public

/*!
 @brief Compares the specified object with this ACL entry for equality.
 <p> If the given object is not an <code>AclEntry</code> then this method
  immediately returns <code>false</code>.
  
 <p> For two ACL entries to be considered equals requires that they are
  both the same type, their who components are equal, their permissions
  components are equal, and their flags components are equal. 
 <p> This method satisfies the general contract of the <code>Object.equals</code>
  method. </p>
 @param ob the object to which this object is to be compared
 @return <code>true</code> if, and only if, the given object is an AclEntry that
           is identical to this AclEntry
 */
- (jboolean)isEqual:(id)ob;

/*!
 @brief Returns a copy of the flags component.
 <p> The returned set is a modifiable copy of the flags.
 @return the flags component
 */
- (id<JavaUtilSet>)flags;

/*!
 @brief Returns the hash-code value for this ACL entry.
 <p> This method satisfies the general contract of the <code>Object.hashCode</code>
  method.
 */
- (NSUInteger)hash;

/*!
 @brief Constructs a new builder.The initial value of the type and who
  components is <code>null</code>.
 The initial value of the permissions and
  flags components is the empty set.
 @return a new builder
 */
+ (JavaNioFileAttributeAclEntry_Builder *)newBuilder OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Constructs a new builder with the components of an existing ACL entry.
 @param entry_ an ACL entry
 @return a new builder
 */
+ (JavaNioFileAttributeAclEntry_Builder *)newBuilderWithJavaNioFileAttributeAclEntry:(JavaNioFileAttributeAclEntry *)entry_ OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Returns a copy of the permissions component.
 <p> The returned set is a modifiable copy of the permissions.
 @return the permissions component
 */
- (id<JavaUtilSet>)permissions;

/*!
 @brief Returns the principal component.
 @return the principal component
 */
- (id<JavaNioFileAttributeUserPrincipal>)principal;

/*!
 @brief Returns the string representation of this ACL entry.
 @return the string representation of this entry
 */
- (NSString *)description;

/*!
 @brief Returns the ACL entry type.
 @return the ACL entry type
 */
- (JavaNioFileAttributeAclEntryType *)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioFileAttributeAclEntry)

FOUNDATION_EXPORT JavaNioFileAttributeAclEntry_Builder *JavaNioFileAttributeAclEntry_newBuilder(void);

FOUNDATION_EXPORT JavaNioFileAttributeAclEntry_Builder *JavaNioFileAttributeAclEntry_newBuilderWithJavaNioFileAttributeAclEntry_(JavaNioFileAttributeAclEntry *entry_);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileAttributeAclEntry)

#endif

#if !defined (JavaNioFileAttributeAclEntry_Builder_) && (INCLUDE_ALL_JavaNioFileAttributeAclEntry || defined(INCLUDE_JavaNioFileAttributeAclEntry_Builder))
#define JavaNioFileAttributeAclEntry_Builder_

@class IOSObjectArray;
@class JavaNioFileAttributeAclEntry;
@class JavaNioFileAttributeAclEntryType;
@protocol JavaNioFileAttributeUserPrincipal;
@protocol JavaUtilSet;

/*!
 @brief A builder of <code>AclEntry</code> objects.
 <p> A <code>Builder</code> object is obtained by invoking one of the <code>newBuilder</code>
  methods defined by the <code>AclEntry</code>
  class. 
 <p> Builder objects are mutable and are not safe for use by multiple
  concurrent threads without appropriate synchronization.
 @since 1.7
 */
@interface JavaNioFileAttributeAclEntry_Builder : NSObject

#pragma mark Public

/*!
 @brief Constructs an <code>AclEntry</code> from the components of this builder.
 The type and who components are required to have been set in order
  to construct an <code>AclEntry</code>.
 @return a new ACL entry
 @throw IllegalStateException
 if the type or who component have not been set
 */
- (JavaNioFileAttributeAclEntry *)build;

/*!
 @brief Sets the flags component of this builder.On return, the flags
  component of this builder is a copy of the flags in the given
  array.
 @param flags the flags component
 @return this builder
 */
- (JavaNioFileAttributeAclEntry_Builder *)setFlagsWithJavaNioFileAttributeAclEntryFlagArray:(IOSObjectArray *)flags;

/*!
 @brief Sets the flags component of this builder.On return, the flags
  component of this builder is a copy of the given set.
 @param flags the flags component
 @return this builder
 @throw ClassCastException
 if the set contains elements that are not of type <code>AclEntryFlag</code>
 */
- (JavaNioFileAttributeAclEntry_Builder *)setFlagsWithJavaUtilSet:(id<JavaUtilSet>)flags;

/*!
 @brief Sets the permissions component of this builder.On return, the
  permissions component of this builder is a copy of the permissions in
  the given array.
 @param perms the permissions component
 @return this builder
 */
- (JavaNioFileAttributeAclEntry_Builder *)setPermissionsWithJavaNioFileAttributeAclEntryPermissionArray:(IOSObjectArray *)perms;

/*!
 @brief Sets the permissions component of this builder.On return, the
  permissions component of this builder is a copy of the given set.
 @param perms the permissions component
 @return this builder
 @throw ClassCastException
 if the set contains elements that are not of type <code>AclEntryPermission</code>
 */
- (JavaNioFileAttributeAclEntry_Builder *)setPermissionsWithJavaUtilSet:(id<JavaUtilSet>)perms;

/*!
 @brief Sets the principal component of this builder.
 @param who the principal component
 @return this builder
 */
- (JavaNioFileAttributeAclEntry_Builder *)setPrincipalWithJavaNioFileAttributeUserPrincipal:(id<JavaNioFileAttributeUserPrincipal>)who;

/*!
 @brief Sets the type component of this builder.
 @param type the component type
 @return this builder
 */
- (JavaNioFileAttributeAclEntry_Builder *)setTypeWithJavaNioFileAttributeAclEntryType:(JavaNioFileAttributeAclEntryType *)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioFileAttributeAclEntry_Builder)

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileAttributeAclEntry_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaNioFileAttributeAclEntry")
