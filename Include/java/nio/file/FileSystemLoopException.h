//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/nio/file/FileSystemLoopException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioFileFileSystemLoopException")
#ifdef RESTRICT_JavaNioFileFileSystemLoopException
#define INCLUDE_ALL_JavaNioFileFileSystemLoopException 0
#else
#define INCLUDE_ALL_JavaNioFileFileSystemLoopException 1
#endif
#undef RESTRICT_JavaNioFileFileSystemLoopException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNioFileFileSystemLoopException_) && (INCLUDE_ALL_JavaNioFileFileSystemLoopException || defined(INCLUDE_JavaNioFileFileSystemLoopException))
#define JavaNioFileFileSystemLoopException_

#define RESTRICT_JavaNioFileFileSystemException 1
#define INCLUDE_JavaNioFileFileSystemException 1
#include "java/nio/file/FileSystemException.h"

/*!
 @brief Checked exception thrown when a file system loop, or cycle, is encountered.
 @since 1.7
 - seealso: Files#walkFileTree
 */
@interface JavaNioFileFileSystemLoopException : JavaNioFileFileSystemException

#pragma mark Public

/*!
 @brief Constructs an instance of this class.
 @param file a string identifying the file causing the cycle or 
 <code>null</code>  if           not known
 */
- (instancetype __nonnull)initWithNSString:(NSString *)file;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                              withNSString:(NSString *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioFileFileSystemLoopException)

FOUNDATION_EXPORT void JavaNioFileFileSystemLoopException_initWithNSString_(JavaNioFileFileSystemLoopException *self, NSString *file);

FOUNDATION_EXPORT JavaNioFileFileSystemLoopException *new_JavaNioFileFileSystemLoopException_initWithNSString_(NSString *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNioFileFileSystemLoopException *create_JavaNioFileFileSystemLoopException_initWithNSString_(NSString *file);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileFileSystemLoopException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaNioFileFileSystemLoopException")
