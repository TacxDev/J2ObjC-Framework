//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/nio/file/AccessDeniedException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaNioFileAccessDeniedException")
#ifdef RESTRICT_JavaNioFileAccessDeniedException
#define INCLUDE_ALL_JavaNioFileAccessDeniedException 0
#else
#define INCLUDE_ALL_JavaNioFileAccessDeniedException 1
#endif
#undef RESTRICT_JavaNioFileAccessDeniedException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaNioFileAccessDeniedException_) && (INCLUDE_ALL_JavaNioFileAccessDeniedException || defined(INCLUDE_JavaNioFileAccessDeniedException))
#define JavaNioFileAccessDeniedException_

#define RESTRICT_JavaNioFileFileSystemException 1
#define INCLUDE_JavaNioFileFileSystemException 1
#include "java/nio/file/FileSystemException.h"

/*!
 @brief Checked exception thrown when a file system operation is denied, typically
  due to a file permission or other access check.
 <p> This exception is not related to the <code>AccessControlException</code>
  or <code>SecurityException</code>
  thrown by access controllers or security managers when
  access to a file is denied.
 @since 1.7
 */
@interface JavaNioFileAccessDeniedException : JavaNioFileFileSystemException

#pragma mark Public

/*!
 @brief Constructs an instance of this class.
 @param file a string identifying the file or 
 <code>null</code>  if not known
 */
- (instancetype __nonnull)initWithNSString:(NSString *)file;

/*!
 @brief Constructs an instance of this class.
 @param file a string identifying the file or 
 <code>null</code>  if not known
 @param other a string identifying the other file or 
 <code>null</code>  if not known
 @param reason a reason message with additional information or 
 <code>null</code>
 */
- (instancetype __nonnull)initWithNSString:(NSString *)file
                              withNSString:(NSString *)other
                              withNSString:(NSString *)reason;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaNioFileAccessDeniedException)

FOUNDATION_EXPORT void JavaNioFileAccessDeniedException_initWithNSString_(JavaNioFileAccessDeniedException *self, NSString *file);

FOUNDATION_EXPORT JavaNioFileAccessDeniedException *new_JavaNioFileAccessDeniedException_initWithNSString_(NSString *file) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNioFileAccessDeniedException *create_JavaNioFileAccessDeniedException_initWithNSString_(NSString *file);

FOUNDATION_EXPORT void JavaNioFileAccessDeniedException_initWithNSString_withNSString_withNSString_(JavaNioFileAccessDeniedException *self, NSString *file, NSString *other, NSString *reason);

FOUNDATION_EXPORT JavaNioFileAccessDeniedException *new_JavaNioFileAccessDeniedException_initWithNSString_withNSString_withNSString_(NSString *file, NSString *other, NSString *reason) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaNioFileAccessDeniedException *create_JavaNioFileAccessDeniedException_initWithNSString_withNSString_withNSString_(NSString *file, NSString *other, NSString *reason);

J2OBJC_TYPE_LITERAL_HEADER(JavaNioFileAccessDeniedException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaNioFileAccessDeniedException")
