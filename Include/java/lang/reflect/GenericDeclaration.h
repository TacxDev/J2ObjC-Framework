//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/lang/reflect/GenericDeclaration.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaLangReflectGenericDeclaration")
#ifdef RESTRICT_JavaLangReflectGenericDeclaration
#define INCLUDE_ALL_JavaLangReflectGenericDeclaration 0
#else
#define INCLUDE_ALL_JavaLangReflectGenericDeclaration 1
#endif
#undef RESTRICT_JavaLangReflectGenericDeclaration

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaLangReflectGenericDeclaration_) && (INCLUDE_ALL_JavaLangReflectGenericDeclaration || defined(INCLUDE_JavaLangReflectGenericDeclaration))
#define JavaLangReflectGenericDeclaration_

#define RESTRICT_JavaLangReflectAnnotatedElement 1
#define INCLUDE_JavaLangReflectAnnotatedElement 1
#include "java/lang/reflect/AnnotatedElement.h"

@class IOSObjectArray;

/*!
 @brief A common interface for all entities that declare type variables.
 @since 1.5
 */
@protocol JavaLangReflectGenericDeclaration < JavaLangReflectAnnotatedElement, JavaObject >

/*!
 @brief Returns an array of <code>TypeVariable</code> objects that
  represent the type variables declared by the generic
  declaration represented by this <code>GenericDeclaration</code>
  object, in declaration order.Returns an array of length 0 if
  the underlying generic declaration declares no type variables.
 @return an array of <code>TypeVariable</code> objects that represent
      the type variables declared by this generic declaration
 @throw GenericSignatureFormatErrorif the generic
      signature of this generic declaration does not conform to
      the format specified in     
 <cite>The Java&trade; Virtual Machine Specification</cite>
 */
- (IOSObjectArray *)getTypeParameters;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaLangReflectGenericDeclaration)

J2OBJC_TYPE_LITERAL_HEADER(JavaLangReflectGenericDeclaration)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaLangReflectGenericDeclaration")
