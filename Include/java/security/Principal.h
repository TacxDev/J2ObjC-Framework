//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/security/Principal.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaSecurityPrincipal")
#ifdef RESTRICT_JavaSecurityPrincipal
#define INCLUDE_ALL_JavaSecurityPrincipal 0
#else
#define INCLUDE_ALL_JavaSecurityPrincipal 1
#endif
#undef RESTRICT_JavaSecurityPrincipal

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaSecurityPrincipal_) && (INCLUDE_ALL_JavaSecurityPrincipal || defined(INCLUDE_JavaSecurityPrincipal))
#define JavaSecurityPrincipal_

@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaxSecurityAuthSubject;

/*!
 @brief This interface represents the abstract notion of a principal, which
  can be used to represent any entity, such as an individual, a
  corporation, and a login id.
 - seealso: java.security.cert.X509Certificate
 @author Li Gong
 @since 1.1
 */
@protocol JavaSecurityPrincipal < JavaObject >

/*!
 @brief Compares this principal to the specified object.Returns true
  if the object passed in matches the principal represented by
  the implementation of this interface.
 @param another principal to compare with.
 @return true if the principal passed in is the same as that
  encapsulated by this principal, and false otherwise.
 */
- (jboolean)isEqual:(id)another;

/*!
 @brief Returns a string representation of this principal.
 @return a string representation of this principal.
 */
- (NSString *)description;

/*!
 @brief Returns a hashcode for this principal.
 @return a hashcode for this principal.
 */
- (NSUInteger)hash;

/*!
 @brief Returns the name of this principal.
 @return the name of this principal.
 */
- (NSString *)getName;

/*!
 @brief Returns true if the specified subject is implied by this principal.
 @param subject the <code>Subject</code>
 @return true if <code>subject</code> is non-null and is
               implied by this principal, or false otherwise.
 @since 1.8
 */
- (jboolean)impliesWithJavaxSecurityAuthSubject:(JavaxSecurityAuthSubject *)subject;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaSecurityPrincipal)

FOUNDATION_EXPORT jboolean JavaSecurityPrincipal_impliesWithJavaxSecurityAuthSubject_(id<JavaSecurityPrincipal> self, JavaxSecurityAuthSubject *subject);

J2OBJC_TYPE_LITERAL_HEADER(JavaSecurityPrincipal)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaSecurityPrincipal")
