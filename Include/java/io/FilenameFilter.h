//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/io/FilenameFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoFilenameFilter")
#ifdef RESTRICT_JavaIoFilenameFilter
#define INCLUDE_ALL_JavaIoFilenameFilter 0
#else
#define INCLUDE_ALL_JavaIoFilenameFilter 1
#endif
#undef RESTRICT_JavaIoFilenameFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaIoFilenameFilter_) && (INCLUDE_ALL_JavaIoFilenameFilter || defined(INCLUDE_JavaIoFilenameFilter))
#define JavaIoFilenameFilter_

@class JavaIoFile;
@class JavaLangBoolean;

/*!
 @brief Instances of classes that implement this interface are used to
  filter filenames.These instances are used to filter directory
  listings in the <code>list</code> method of class 
 <code>File</code>, and by the Abstract Window Toolkit's file
  dialog component.
 @author Arthur van Hoff
 @author Jonathan Payne
 - seealso: java.io.File
 - seealso: java.io.File#list(java.io.FilenameFilter)
 @since 1.0
 */
@protocol JavaIoFilenameFilter < JavaObject >

/*!
 @brief Tests if a specified file should be included in a file list.
 @param dir the directory in which the file was found.
 @param name the name of the file.
 @return <code>true</code> if and only if the name should be
  included in the file list; <code>false</code> otherwise.
 */
- (jboolean)acceptWithJavaIoFile:(JavaIoFile *)dir
                    withNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoFilenameFilter)

J2OBJC_TYPE_LITERAL_HEADER(JavaIoFilenameFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaIoFilenameFilter")
