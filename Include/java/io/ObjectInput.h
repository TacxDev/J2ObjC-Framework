//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/java/io/ObjectInput.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaIoObjectInput")
#ifdef RESTRICT_JavaIoObjectInput
#define INCLUDE_ALL_JavaIoObjectInput 0
#else
#define INCLUDE_ALL_JavaIoObjectInput 1
#endif
#undef RESTRICT_JavaIoObjectInput

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaIoObjectInput_) && (INCLUDE_ALL_JavaIoObjectInput || defined(INCLUDE_JavaIoObjectInput))
#define JavaIoObjectInput_

#define RESTRICT_JavaIoDataInput 1
#define INCLUDE_JavaIoDataInput 1
#include "java/io/DataInput.h"

#define RESTRICT_JavaLangAutoCloseable 1
#define INCLUDE_JavaLangAutoCloseable 1
#include "java/lang/AutoCloseable.h"

@class IOSByteArray;
@class JavaLangInteger;
@class JavaLangLong;

/*!
 @brief ObjectInput extends the DataInput interface to include the reading of
  objects.DataInput includes methods for the input of primitive types,
  ObjectInput extends that interface to include objects, arrays, and Strings.
 @author unascribed
 - seealso: java.io.InputStream
 - seealso: java.io.ObjectOutputStream
 - seealso: java.io.ObjectInputStream
 @since 1.1
 */
@protocol JavaIoObjectInput < JavaIoDataInput, JavaLangAutoCloseable, JavaObject >

/*!
 @brief Read and return an object.The class that implements this interface
  defines where the object is "read" from.
 @return the object read from the stream
 @throw java.lang.ClassNotFoundExceptionIf the class of a serialized
       object cannot be found.
 @throw IOExceptionIf any of the usual Input/Output
  related exceptions occur.
 */
- (id)readObject;

/*!
 @brief Reads a byte of data.This method will block if no input is
  available.
 @return the byte read, or -1 if the end of the
           stream is reached.
 @throw IOExceptionIf an I/O error has occurred.
 */
- (jint)read;

/*!
 @brief Reads into an array of bytes.This method will
  block until some input is available.
 @param b the buffer into which the data is read
 @return the actual number of bytes read, -1 is
           returned when the end of the stream is reached.
 @throw IOExceptionIf an I/O error has occurred.
 */
- (jint)readWithByteArray:(IOSByteArray *)b;

/*!
 @brief Reads into an array of bytes.This method will
  block until some input is available.
 @param b the buffer into which the data is read
 @param off the start offset of the data
 @param len the maximum number of bytes read
 @return the actual number of bytes read, -1 is
           returned when the end of the stream is reached.
 @throw IOExceptionIf an I/O error has occurred.
 */
- (jint)readWithByteArray:(IOSByteArray *)b
                  withInt:(jint)off
                  withInt:(jint)len;

/*!
 @brief Skips n bytes of input.
 @param n the number of bytes to be skipped
 @return the actual number of bytes skipped.
 @throw IOExceptionIf an I/O error has occurred.
 */
- (jlong)skipWithLong:(jlong)n;

/*!
 @brief Returns the number of bytes that can be read
  without blocking.
 @return the number of available bytes.
 @throw IOExceptionIf an I/O error has occurred.
 */
- (jint)available;

/*!
 @brief Closes the input stream.Must be called
  to release any resources associated with
  the stream.
 @throw IOExceptionIf an I/O error has occurred.
 */
- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaIoObjectInput)

J2OBJC_TYPE_LITERAL_HEADER(JavaIoObjectInput)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaIoObjectInput")
