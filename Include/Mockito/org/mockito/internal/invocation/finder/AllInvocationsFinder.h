//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/invocation/finder/AllInvocationsFinder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalInvocationFinderAllInvocationsFinder")
#ifdef RESTRICT_OrgMockitoInternalInvocationFinderAllInvocationsFinder
#define INCLUDE_ALL_OrgMockitoInternalInvocationFinderAllInvocationsFinder 0
#else
#define INCLUDE_ALL_OrgMockitoInternalInvocationFinderAllInvocationsFinder 1
#endif
#undef RESTRICT_OrgMockitoInternalInvocationFinderAllInvocationsFinder

#if !defined (OrgMockitoInternalInvocationFinderAllInvocationsFinder_) && (INCLUDE_ALL_OrgMockitoInternalInvocationFinderAllInvocationsFinder || defined(INCLUDE_OrgMockitoInternalInvocationFinderAllInvocationsFinder))
#define OrgMockitoInternalInvocationFinderAllInvocationsFinder_

@protocol JavaLangIterable;
@protocol JavaUtilList;
@protocol JavaUtilSet;

@interface OrgMockitoInternalInvocationFinderAllInvocationsFinder : NSObject

#pragma mark Public

+ (id<JavaUtilList>)findWithJavaLangIterable:(id<JavaLangIterable>)mocks;

+ (id<JavaUtilSet>)findStubbingsWithJavaLangIterable:(id<JavaLangIterable>)mocks;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalInvocationFinderAllInvocationsFinder)

FOUNDATION_EXPORT id<JavaUtilList> OrgMockitoInternalInvocationFinderAllInvocationsFinder_findWithJavaLangIterable_(id<JavaLangIterable> mocks);

FOUNDATION_EXPORT id<JavaUtilSet> OrgMockitoInternalInvocationFinderAllInvocationsFinder_findStubbingsWithJavaLangIterable_(id<JavaLangIterable> mocks);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalInvocationFinderAllInvocationsFinder)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalInvocationFinderAllInvocationsFinder")
