//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/internal/stubbing/answers/ClonesArguments.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoInternalStubbingAnswersClonesArguments")
#ifdef RESTRICT_OrgMockitoInternalStubbingAnswersClonesArguments
#define INCLUDE_ALL_OrgMockitoInternalStubbingAnswersClonesArguments 0
#else
#define INCLUDE_ALL_OrgMockitoInternalStubbingAnswersClonesArguments 1
#endif
#undef RESTRICT_OrgMockitoInternalStubbingAnswersClonesArguments

#if !defined (OrgMockitoInternalStubbingAnswersClonesArguments_) && (INCLUDE_ALL_OrgMockitoInternalStubbingAnswersClonesArguments || defined(INCLUDE_OrgMockitoInternalStubbingAnswersClonesArguments))
#define OrgMockitoInternalStubbingAnswersClonesArguments_

#define RESTRICT_OrgMockitoStubbingAnswer 1
#define INCLUDE_OrgMockitoStubbingAnswer 1
#include "org/mockito/stubbing/Answer.h"

@protocol OrgMockitoInvocationInvocationOnMock;

@interface OrgMockitoInternalStubbingAnswersClonesArguments : NSObject < OrgMockitoStubbingAnswer >

#pragma mark Public

- (instancetype)init;

- (id)answerWithOrgMockitoInvocationInvocationOnMock:(id<OrgMockitoInvocationInvocationOnMock>)invocation;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgMockitoInternalStubbingAnswersClonesArguments)

FOUNDATION_EXPORT void OrgMockitoInternalStubbingAnswersClonesArguments_init(OrgMockitoInternalStubbingAnswersClonesArguments *self);

FOUNDATION_EXPORT OrgMockitoInternalStubbingAnswersClonesArguments *new_OrgMockitoInternalStubbingAnswersClonesArguments_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgMockitoInternalStubbingAnswersClonesArguments *create_OrgMockitoInternalStubbingAnswersClonesArguments_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoInternalStubbingAnswersClonesArguments)

#endif

#pragma pop_macro("INCLUDE_ALL_OrgMockitoInternalStubbingAnswersClonesArguments")
