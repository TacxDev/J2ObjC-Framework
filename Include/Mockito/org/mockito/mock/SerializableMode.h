//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/testing/mockito/build_result/java/org/mockito/mock/SerializableMode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgMockitoMockSerializableMode")
#ifdef RESTRICT_OrgMockitoMockSerializableMode
#define INCLUDE_ALL_OrgMockitoMockSerializableMode 0
#else
#define INCLUDE_ALL_OrgMockitoMockSerializableMode 1
#endif
#undef RESTRICT_OrgMockitoMockSerializableMode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgMockitoMockSerializableMode_) && (INCLUDE_ALL_OrgMockitoMockSerializableMode || defined(INCLUDE_OrgMockitoMockSerializableMode))
#define OrgMockitoMockSerializableMode_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(jint, OrgMockitoMockSerializableMode_Enum) {
  OrgMockitoMockSerializableMode_Enum_NONE = 0,
  OrgMockitoMockSerializableMode_Enum_BASIC = 1,
  OrgMockitoMockSerializableMode_Enum_ACROSS_CLASSLOADERS = 2,
};
#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define OrgMockitoMockSerializableMode_ORDINAL jint
#else
#define OrgMockitoMockSerializableMode_ORDINAL OrgMockitoMockSerializableMode_Enum
#endif


@interface OrgMockitoMockSerializableMode : JavaLangEnum

#pragma mark Public

+ (OrgMockitoMockSerializableMode *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgMockitoMockSerializableMode_Enum)toNSEnum;

- (OrgMockitoMockSerializableMode_ORDINAL)ordinal;

@end

J2OBJC_STATIC_INIT(OrgMockitoMockSerializableMode)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgMockitoMockSerializableMode *OrgMockitoMockSerializableMode_values_[];

inline OrgMockitoMockSerializableMode *OrgMockitoMockSerializableMode_get_NONE(void);
J2OBJC_ENUM_CONSTANT(OrgMockitoMockSerializableMode, NONE)

inline OrgMockitoMockSerializableMode *OrgMockitoMockSerializableMode_get_BASIC(void);
J2OBJC_ENUM_CONSTANT(OrgMockitoMockSerializableMode, BASIC)

inline OrgMockitoMockSerializableMode *OrgMockitoMockSerializableMode_get_ACROSS_CLASSLOADERS(void);
J2OBJC_ENUM_CONSTANT(OrgMockitoMockSerializableMode, ACROSS_CLASSLOADERS)

FOUNDATION_EXPORT IOSObjectArray *OrgMockitoMockSerializableMode_values(void);

FOUNDATION_EXPORT OrgMockitoMockSerializableMode *OrgMockitoMockSerializableMode_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgMockitoMockSerializableMode *OrgMockitoMockSerializableMode_fromOrdinal(OrgMockitoMockSerializableMode_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgMockitoMockSerializableMode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgMockitoMockSerializableMode")
