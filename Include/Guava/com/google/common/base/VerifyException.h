//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/base/VerifyException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonBaseVerifyException")
#ifdef RESTRICT_ComGoogleCommonBaseVerifyException
#define INCLUDE_ALL_ComGoogleCommonBaseVerifyException 0
#else
#define INCLUDE_ALL_ComGoogleCommonBaseVerifyException 1
#endif
#undef RESTRICT_ComGoogleCommonBaseVerifyException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonBaseVerifyException_) && (INCLUDE_ALL_ComGoogleCommonBaseVerifyException || defined(INCLUDE_ComGoogleCommonBaseVerifyException))
#define ComGoogleCommonBaseVerifyException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangBoolean;
@class JavaLangThrowable;

@interface ComGoogleCommonBaseVerifyException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1
                     withBoolean:(jboolean)arg2
                     withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseVerifyException)

FOUNDATION_EXPORT void ComGoogleCommonBaseVerifyException_init(ComGoogleCommonBaseVerifyException *self);

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *new_ComGoogleCommonBaseVerifyException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *create_ComGoogleCommonBaseVerifyException_init(void);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerifyException_initWithNSString_(ComGoogleCommonBaseVerifyException *self, NSString *message);

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *new_ComGoogleCommonBaseVerifyException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *create_ComGoogleCommonBaseVerifyException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerifyException_initWithJavaLangThrowable_(ComGoogleCommonBaseVerifyException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *new_ComGoogleCommonBaseVerifyException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *create_ComGoogleCommonBaseVerifyException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerifyException_initWithNSString_withJavaLangThrowable_(ComGoogleCommonBaseVerifyException *self, NSString *message, JavaLangThrowable *cause);

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *new_ComGoogleCommonBaseVerifyException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonBaseVerifyException *create_ComGoogleCommonBaseVerifyException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonBaseVerifyException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonBaseVerifyException")
