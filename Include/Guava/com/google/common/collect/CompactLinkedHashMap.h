//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/collect/CompactLinkedHashMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectCompactLinkedHashMap")
#ifdef RESTRICT_ComGoogleCommonCollectCompactLinkedHashMap
#define INCLUDE_ALL_ComGoogleCommonCollectCompactLinkedHashMap 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectCompactLinkedHashMap 1
#endif
#undef RESTRICT_ComGoogleCommonCollectCompactLinkedHashMap

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectCompactLinkedHashMap_) && (INCLUDE_ALL_ComGoogleCommonCollectCompactLinkedHashMap || defined(INCLUDE_ComGoogleCommonCollectCompactLinkedHashMap))
#define ComGoogleCommonCollectCompactLinkedHashMap_

#define RESTRICT_ComGoogleCommonCollectCompactHashMap 1
#define INCLUDE_ComGoogleCommonCollectCompactHashMap 1
#include "com/google/common/collect/CompactHashMap.h"

@class IOSLongArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface ComGoogleCommonCollectCompactLinkedHashMap : ComGoogleCommonCollectCompactHashMap {
 @public
  IOSLongArray *links_;
}

#pragma mark Public

- (void)clear;

+ (ComGoogleCommonCollectCompactLinkedHashMap *)create;

+ (ComGoogleCommonCollectCompactLinkedHashMap *)createWithExpectedSizeWithInt:(jint)expectedSize;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

- (instancetype)initPackagePrivateWithInt:(jint)expectedSize;

- (instancetype)initPackagePrivateWithInt:(jint)expectedSize
                              withBoolean:(jboolean)accessOrder;

- (void)accessEntryWithInt:(jint)index;

- (jint)adjustAfterRemoveWithInt:(jint)indexBeforeRemove
                         withInt:(jint)indexRemoved;

- (jint)allocArrays OBJC_METHOD_FAMILY_NONE;

- (id<JavaUtilMap>)convertToHashFloodingResistantImplementation;

- (id<JavaUtilSet>)createEntrySet;

- (id<JavaUtilMap>)createHashFloodingResistantDelegateWithInt:(jint)tableSize;

- (id<JavaUtilSet>)createKeySet;

- (id<JavaUtilCollection>)createValues;

- (jint)firstEntryIndex;

- (jint)getSuccessorWithInt:(jint)entry_;

- (void)init__WithInt:(jint)expectedSize OBJC_METHOD_FAMILY_NONE;

- (void)insertEntryWithInt:(jint)entryIndex
                    withId:(id)key
                    withId:(id)value
                   withInt:(jint)hash_
                   withInt:(jint)mask;

- (void)moveLastEntryWithInt:(jint)dstIndex
                     withInt:(jint)mask;

- (void)resizeEntriesWithInt:(jint)newCapacity;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectCompactLinkedHashMap)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectCompactLinkedHashMap, links_, IOSLongArray *)

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *ComGoogleCommonCollectCompactLinkedHashMap_create(void);

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *ComGoogleCommonCollectCompactLinkedHashMap_createWithExpectedSizeWithInt_(jint expectedSize);

FOUNDATION_EXPORT void ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivate(ComGoogleCommonCollectCompactLinkedHashMap *self);

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *new_ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *create_ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivate(void);

FOUNDATION_EXPORT void ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivateWithInt_(ComGoogleCommonCollectCompactLinkedHashMap *self, jint expectedSize);

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *new_ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivateWithInt_(jint expectedSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *create_ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivateWithInt_(jint expectedSize);

FOUNDATION_EXPORT void ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivateWithInt_withBoolean_(ComGoogleCommonCollectCompactLinkedHashMap *self, jint expectedSize, jboolean accessOrder);

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *new_ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivateWithInt_withBoolean_(jint expectedSize, jboolean accessOrder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectCompactLinkedHashMap *create_ComGoogleCommonCollectCompactLinkedHashMap_initPackagePrivateWithInt_withBoolean_(jint expectedSize, jboolean accessOrder);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectCompactLinkedHashMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectCompactLinkedHashMap")
