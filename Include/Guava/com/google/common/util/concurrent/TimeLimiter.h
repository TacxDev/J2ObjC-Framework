//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/util/concurrent/TimeLimiter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentTimeLimiter")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentTimeLimiter
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentTimeLimiter 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentTimeLimiter 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentTimeLimiter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentTimeLimiter_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentTimeLimiter || defined(INCLUDE_ComGoogleCommonUtilConcurrentTimeLimiter))
#define ComGoogleCommonUtilConcurrentTimeLimiter_

@class IOSClass;
@class JavaLangLong;
@class JavaTimeDuration;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;

@protocol ComGoogleCommonUtilConcurrentTimeLimiter < JavaObject >

- (id)newProxyWithId:(id)target
        withIOSClass:(IOSClass *)interfaceType
            withLong:(jlong)timeoutDuration
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit OBJC_METHOD_FAMILY_NONE;

- (id)newProxyWithId:(id)target
        withIOSClass:(IOSClass *)interfaceType
withJavaTimeDuration:(JavaTimeDuration *)timeout OBJC_METHOD_FAMILY_NONE;

- (id)callWithTimeoutWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                           withLong:(jlong)timeoutDuration
                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

- (id)callWithTimeoutWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                               withJavaTimeDuration:(JavaTimeDuration *)timeout;

- (id)callUninterruptiblyWithTimeoutWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                                          withLong:(jlong)timeoutDuration
                                    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

- (id)callUninterruptiblyWithTimeoutWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                              withJavaTimeDuration:(JavaTimeDuration *)timeout;

- (void)runWithTimeoutWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                  withLong:(jlong)timeoutDuration
            withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

- (void)runWithTimeoutWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                      withJavaTimeDuration:(JavaTimeDuration *)timeout;

- (void)runUninterruptiblyWithTimeoutWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                                 withLong:(jlong)timeoutDuration
                           withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

- (void)runUninterruptiblyWithTimeoutWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                     withJavaTimeDuration:(JavaTimeDuration *)timeout;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentTimeLimiter)

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentTimeLimiter_newProxyWithId_withIOSClass_withJavaTimeDuration_(id<ComGoogleCommonUtilConcurrentTimeLimiter> self, id target, IOSClass *interfaceType, JavaTimeDuration *timeout);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentTimeLimiter_callWithTimeoutWithJavaUtilConcurrentCallable_withJavaTimeDuration_(id<ComGoogleCommonUtilConcurrentTimeLimiter> self, id<JavaUtilConcurrentCallable> callable, JavaTimeDuration *timeout);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentTimeLimiter_callUninterruptiblyWithTimeoutWithJavaUtilConcurrentCallable_withJavaTimeDuration_(id<ComGoogleCommonUtilConcurrentTimeLimiter> self, id<JavaUtilConcurrentCallable> callable, JavaTimeDuration *timeout);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentTimeLimiter_runWithTimeoutWithJavaLangRunnable_withJavaTimeDuration_(id<ComGoogleCommonUtilConcurrentTimeLimiter> self, id<JavaLangRunnable> runnable, JavaTimeDuration *timeout);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentTimeLimiter_runUninterruptiblyWithTimeoutWithJavaLangRunnable_withJavaTimeDuration_(id<ComGoogleCommonUtilConcurrentTimeLimiter> self, id<JavaLangRunnable> runnable, JavaTimeDuration *timeout);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentTimeLimiter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentTimeLimiter")
