//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/util/concurrent/SimpleTimeLimiter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentSimpleTimeLimiter
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentSimpleTimeLimiter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentSimpleTimeLimiter_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter || defined(INCLUDE_ComGoogleCommonUtilConcurrentSimpleTimeLimiter))
#define ComGoogleCommonUtilConcurrentSimpleTimeLimiter_

#define RESTRICT_ComGoogleCommonUtilConcurrentTimeLimiter 1
#define INCLUDE_ComGoogleCommonUtilConcurrentTimeLimiter 1
#include "com/google/common/util/concurrent/TimeLimiter.h"

@class IOSClass;
@class JavaLangLong;
@class JavaTimeDuration;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentExecutorService;

@interface ComGoogleCommonUtilConcurrentSimpleTimeLimiter : NSObject < ComGoogleCommonUtilConcurrentTimeLimiter >

#pragma mark Public

- (id)callUninterruptiblyWithTimeoutWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                                          withLong:(jlong)timeoutDuration
                                    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

- (id)callWithTimeoutWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                           withLong:(jlong)timeoutDuration
                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

+ (ComGoogleCommonUtilConcurrentSimpleTimeLimiter *)createWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)executor;

- (id)newProxyWithId:(id)target
        withIOSClass:(IOSClass *)interfaceType
            withLong:(jlong)timeoutDuration
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit OBJC_METHOD_FAMILY_NONE;

- (void)runUninterruptiblyWithTimeoutWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                                 withLong:(jlong)timeoutDuration
                           withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

- (void)runWithTimeoutWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                  withLong:(jlong)timeoutDuration
            withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeoutUnit;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentSimpleTimeLimiter)

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentSimpleTimeLimiter *ComGoogleCommonUtilConcurrentSimpleTimeLimiter_createWithJavaUtilConcurrentExecutorService_(id<JavaUtilConcurrentExecutorService> executor);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentSimpleTimeLimiter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentSimpleTimeLimiter")
