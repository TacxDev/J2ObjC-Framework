//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/util/concurrent/ServiceManager.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentServiceManager")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentServiceManager
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentServiceManager 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentServiceManager 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentServiceManager

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentServiceManager_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentServiceManager || defined(INCLUDE_ComGoogleCommonUtilConcurrentServiceManager))
#define ComGoogleCommonUtilConcurrentServiceManager_

#define RESTRICT_ComGoogleCommonUtilConcurrentServiceManagerBridge 1
#define INCLUDE_ComGoogleCommonUtilConcurrentServiceManagerBridge 1
#include "com/google/common/util/concurrent/ServiceManagerBridge.h"

@class ComGoogleCommonCollectImmutableMap;
@class ComGoogleCommonCollectImmutableSetMultimap;
@class ComGoogleCommonUtilConcurrentServiceManager_Listener;
@class JavaLangBoolean;
@class JavaLangLong;
@class JavaTimeDuration;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaLangIterable;
@protocol JavaUtilConcurrentExecutor;

@interface ComGoogleCommonUtilConcurrentServiceManager : NSObject < ComGoogleCommonUtilConcurrentServiceManagerBridge >

#pragma mark Public

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)services;

- (void)addListenerWithComGoogleCommonUtilConcurrentServiceManager_Listener:(ComGoogleCommonUtilConcurrentServiceManager_Listener *)listener
                                             withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (void)awaitHealthy;

- (void)awaitHealthyWithJavaTimeDuration:(JavaTimeDuration *)timeout;

- (void)awaitHealthyWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)awaitStopped;

- (void)awaitStoppedWithJavaTimeDuration:(JavaTimeDuration *)timeout;

- (void)awaitStoppedWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (jboolean)isHealthy;

- (ComGoogleCommonCollectImmutableSetMultimap *)servicesByState;

- (ComGoogleCommonUtilConcurrentServiceManager *)startAsync;

- (ComGoogleCommonCollectImmutableMap *)startupTimes;

- (ComGoogleCommonUtilConcurrentServiceManager *)stopAsync;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentServiceManager)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentServiceManager_initWithJavaLangIterable_(ComGoogleCommonUtilConcurrentServiceManager *self, id<JavaLangIterable> services);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentServiceManager *new_ComGoogleCommonUtilConcurrentServiceManager_initWithJavaLangIterable_(id<JavaLangIterable> services) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentServiceManager *create_ComGoogleCommonUtilConcurrentServiceManager_initWithJavaLangIterable_(id<JavaLangIterable> services);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentServiceManager)

#endif

#if !defined (ComGoogleCommonUtilConcurrentServiceManager_Listener_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentServiceManager || defined(INCLUDE_ComGoogleCommonUtilConcurrentServiceManager_Listener))
#define ComGoogleCommonUtilConcurrentServiceManager_Listener_

@protocol ComGoogleCommonUtilConcurrentService;

@interface ComGoogleCommonUtilConcurrentServiceManager_Listener : NSObject

#pragma mark Public

- (instancetype)init;

- (void)failureWithComGoogleCommonUtilConcurrentService:(id<ComGoogleCommonUtilConcurrentService>)service;

- (void)healthy;

- (void)stopped;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentServiceManager_Listener)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentServiceManager_Listener_init(ComGoogleCommonUtilConcurrentServiceManager_Listener *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentServiceManager_Listener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentServiceManager")
