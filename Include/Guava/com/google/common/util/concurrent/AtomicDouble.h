//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/util/concurrent/AtomicDouble.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDouble")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentAtomicDouble
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDouble 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDouble 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentAtomicDouble

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentAtomicDouble_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDouble || defined(INCLUDE_ComGoogleCommonUtilConcurrentAtomicDouble))
#define ComGoogleCommonUtilConcurrentAtomicDouble_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class JavaLangBoolean;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@protocol JavaUtilFunctionDoubleBinaryOperator;
@protocol JavaUtilFunctionDoubleUnaryOperator;

@interface ComGoogleCommonUtilConcurrentAtomicDouble : NSNumber < JavaIoSerializable >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithDouble:(jdouble)initialValue;

- (jdouble)accumulateAndGetWithDouble:(jdouble)x
withJavaUtilFunctionDoubleBinaryOperator:(id<JavaUtilFunctionDoubleBinaryOperator>)accumulatorFunction;

- (jdouble)addAndGetWithDouble:(jdouble)delta;

- (jboolean)compareAndSetWithDouble:(jdouble)expect
                         withDouble:(jdouble)update;

- (jdouble)doubleValue;

- (jfloat)floatValue;

- (jdouble)get;

- (jdouble)getAndAccumulateWithDouble:(jdouble)x
withJavaUtilFunctionDoubleBinaryOperator:(id<JavaUtilFunctionDoubleBinaryOperator>)accumulatorFunction;

- (jdouble)getAndAddWithDouble:(jdouble)delta;

- (jdouble)getAndSetWithDouble:(jdouble)newValue;

- (jdouble)getAndUpdateWithJavaUtilFunctionDoubleUnaryOperator:(id<JavaUtilFunctionDoubleUnaryOperator>)updateFunction;

- (NSUInteger)hash;

- (jint)intValue;

- (jboolean)isEqual:(id)obj;

- (void)lazySetWithDouble:(jdouble)newValue;

- (jlong)longLongValue;

- (void)setWithDouble:(jdouble)newValue;

- (NSString *)description;

- (jdouble)updateAndGetWithJavaUtilFunctionDoubleUnaryOperator:(id<JavaUtilFunctionDoubleUnaryOperator>)updateFunction;

- (jboolean)weakCompareAndSetWithDouble:(jdouble)expect
                             withDouble:(jdouble)update;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAtomicDouble)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAtomicDouble_initWithDouble_(ComGoogleCommonUtilConcurrentAtomicDouble *self, jdouble initialValue);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDouble *new_ComGoogleCommonUtilConcurrentAtomicDouble_initWithDouble_(jdouble initialValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDouble *create_ComGoogleCommonUtilConcurrentAtomicDouble_initWithDouble_(jdouble initialValue);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAtomicDouble_init(ComGoogleCommonUtilConcurrentAtomicDouble *self);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDouble *new_ComGoogleCommonUtilConcurrentAtomicDouble_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAtomicDouble *create_ComGoogleCommonUtilConcurrentAtomicDouble_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAtomicDouble)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAtomicDouble")
