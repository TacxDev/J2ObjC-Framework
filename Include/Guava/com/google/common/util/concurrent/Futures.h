//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/util/concurrent/Futures.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutures")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentFutures
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutures 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutures 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentFutures

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentFutures_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutures || defined(INCLUDE_ComGoogleCommonUtilConcurrentFutures))
#define ComGoogleCommonUtilConcurrentFutures_

#define RESTRICT_ComGoogleCommonUtilConcurrentGwtFuturesCatchingSpecialization 1
#define INCLUDE_ComGoogleCommonUtilConcurrentGwtFuturesCatchingSpecialization 1
#include "com/google/common/util/concurrent/GwtFuturesCatchingSpecialization.h"

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonUtilConcurrentFutures_FutureCombiner;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangLong;
@class JavaLangThrowable;
@class JavaTimeDuration;
@class JavaUtilConcurrentTimeUnit;
@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonUtilConcurrentAsyncCallable;
@protocol ComGoogleCommonUtilConcurrentAsyncFunction;
@protocol ComGoogleCommonUtilConcurrentFutureCallback;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaLangIterable;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilConcurrentScheduledExecutorService;

@interface ComGoogleCommonUtilConcurrentFutures : ComGoogleCommonUtilConcurrentGwtFuturesCatchingSpecialization

#pragma mark Public

+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                     withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithJavaLangIterable:(id<JavaLangIterable>)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)catchingWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                                  withIOSClass:(IOSClass *)exceptionType
                                                                               withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)fallback
                                                                                withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                                       withIOSClass:(IOSClass *)exceptionType
                                                                     withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)fallback
                                                                                     withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id)getCheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                withIOSClass:(IOSClass *)exceptionClass;

+ (id)getCheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                withIOSClass:(IOSClass *)exceptionClass
                        withJavaTimeDuration:(JavaTimeDuration *)timeout;

+ (id)getCheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                                withIOSClass:(IOSClass *)exceptionClass
                                    withLong:(jlong)timeout
              withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

+ (id)getDoneWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;

+ (id)getUncheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateCancelledFuture;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFailedFutureWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFutureWithId:(id)value;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateVoidFuture;

+ (ComGoogleCommonCollectImmutableList *)inCompletionOrderWithJavaLangIterable:(id<JavaLangIterable>)futures;

+ (id<JavaUtilConcurrentFuture>)lazyTransformWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)input
                                          withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)nonCancellationPropagatingWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)scheduleAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)callable
                                                                                            withJavaTimeDuration:(JavaTimeDuration *)delay
                                                                  withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)executorService;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)scheduleAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)callable
                                                                                                        withLong:(jlong)delay
                                                                                  withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
                                                                  withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)executorService;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)submitWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                                           withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)submitWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                                 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)submitAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)callable
                                                                                withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithJavaLangIterable:(id<JavaLangIterable>)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function
                                                                                 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                      withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function
                                                                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllCompleteWithJavaLangIterable:(id<JavaLangIterable>)futures;

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllCompleteWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllSucceedWithJavaLangIterable:(id<JavaLangIterable>)futures;

+ (ComGoogleCommonUtilConcurrentFutures_FutureCombiner *)whenAllSucceedWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                                                                                             withJavaTimeDuration:(JavaTimeDuration *)time
                                                                   withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)scheduledExecutor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                                                                                                         withLong:(jlong)time
                                                                                   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                                                   withJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)scheduledExecutor;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures)

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateFutureWithId_(id value);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateVoidFuture(void);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateFailedFutureWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateCancelledFuture(void);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_submitWithJavaUtilConcurrentCallable_withJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentCallable> callable, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_submitWithJavaLangRunnable_withJavaUtilConcurrentExecutor_(id<JavaLangRunnable> runnable, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_submitAsyncWithComGoogleCommonUtilConcurrentAsyncCallable_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentAsyncCallable> callable, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_scheduleAsyncWithComGoogleCommonUtilConcurrentAsyncCallable_withJavaTimeDuration_withJavaUtilConcurrentScheduledExecutorService_(id<ComGoogleCommonUtilConcurrentAsyncCallable> callable, JavaTimeDuration *delay, id<JavaUtilConcurrentScheduledExecutorService> executorService);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_scheduleAsyncWithComGoogleCommonUtilConcurrentAsyncCallable_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentScheduledExecutorService_(id<ComGoogleCommonUtilConcurrentAsyncCallable> callable, jlong delay, JavaUtilConcurrentTimeUnit *timeUnit, id<JavaUtilConcurrentScheduledExecutorService> executorService);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_catchingWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, IOSClass *exceptionType, id<ComGoogleCommonBaseFunction> fallback, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withIOSClass_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, IOSClass *exceptionType, id<ComGoogleCommonUtilConcurrentAsyncFunction> fallback, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture_withJavaTimeDuration_withJavaUtilConcurrentScheduledExecutorService_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, JavaTimeDuration *time, id<JavaUtilConcurrentScheduledExecutorService> scheduledExecutor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentScheduledExecutorService_(id<ComGoogleCommonUtilConcurrentListenableFuture> delegate, jlong time, JavaUtilConcurrentTimeUnit *unit, id<JavaUtilConcurrentScheduledExecutorService> scheduledExecutor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonUtilConcurrentAsyncFunction> function, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonBaseFunction> function, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id<JavaUtilConcurrentFuture> ComGoogleCommonUtilConcurrentFutures_lazyTransformWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(id<JavaUtilConcurrentFuture> input, id<ComGoogleCommonBaseFunction> function);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_allAsListWithJavaLangIterable_(id<JavaLangIterable> futures);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllCompleteWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllCompleteWithJavaLangIterable_(id<JavaLangIterable> futures);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllSucceedWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentFutures_FutureCombiner *ComGoogleCommonUtilConcurrentFutures_whenAllSucceedWithJavaLangIterable_(id<JavaLangIterable> futures);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_nonCancellationPropagatingWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> future);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_successfulAsListWithJavaLangIterable_(id<JavaLangIterable> futures);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableList *ComGoogleCommonUtilConcurrentFutures_inCompletionOrderWithJavaLangIterable_(id<JavaLangIterable> futures);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback, id<JavaUtilConcurrentExecutor> executor);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getDoneWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_(id<JavaUtilConcurrentFuture> future, IOSClass *exceptionClass);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_withJavaTimeDuration_(id<JavaUtilConcurrentFuture> future, IOSClass *exceptionClass, JavaTimeDuration *timeout);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getCheckedWithJavaUtilConcurrentFuture_withIOSClass_withLong_withJavaUtilConcurrentTimeUnit_(id<JavaUtilConcurrentFuture> future, IOSClass *exceptionClass, jlong timeout, JavaUtilConcurrentTimeUnit *unit);

FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getUncheckedWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentFutures)

#endif

#if !defined (ComGoogleCommonUtilConcurrentFutures_FutureCombiner_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutures || defined(INCLUDE_ComGoogleCommonUtilConcurrentFutures_FutureCombiner))
#define ComGoogleCommonUtilConcurrentFutures_FutureCombiner_

@protocol ComGoogleCommonUtilConcurrentAsyncCallable;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentExecutor;

@interface ComGoogleCommonUtilConcurrentFutures_FutureCombiner : NSObject

#pragma mark Public

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)callWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)combiner
                                                         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)callAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)combiner
                                                                              withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)runWithJavaLangRunnable:(id<JavaLangRunnable>)combiner
                                              withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_FutureCombiner)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentFutures_FutureCombiner)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentFutures")
