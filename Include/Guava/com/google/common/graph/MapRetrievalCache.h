//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/graph/MapRetrievalCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache")
#ifdef RESTRICT_ComGoogleCommonGraphMapRetrievalCache
#define INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache 0
#else
#define INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache 1
#endif
#undef RESTRICT_ComGoogleCommonGraphMapRetrievalCache

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonGraphMapRetrievalCache_) && (INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache || defined(INCLUDE_ComGoogleCommonGraphMapRetrievalCache))
#define ComGoogleCommonGraphMapRetrievalCache_

#define RESTRICT_ComGoogleCommonGraphMapIteratorCache 1
#define INCLUDE_ComGoogleCommonGraphMapIteratorCache 1
#include "com/google/common/graph/MapIteratorCache.h"

@protocol JavaUtilMap;

@interface ComGoogleCommonGraphMapRetrievalCache : ComGoogleCommonGraphMapIteratorCache

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithJavaUtilMap:(id<JavaUtilMap>)backingMap;

- (void)clearCache;

- (id)getWithId:(id)key;

- (id)getIfCachedWithId:(id)key;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonGraphMapRetrievalCache)

FOUNDATION_EXPORT void ComGoogleCommonGraphMapRetrievalCache_initPackagePrivateWithJavaUtilMap_(ComGoogleCommonGraphMapRetrievalCache *self, id<JavaUtilMap> backingMap);

FOUNDATION_EXPORT ComGoogleCommonGraphMapRetrievalCache *new_ComGoogleCommonGraphMapRetrievalCache_initPackagePrivateWithJavaUtilMap_(id<JavaUtilMap> backingMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonGraphMapRetrievalCache *create_ComGoogleCommonGraphMapRetrievalCache_initPackagePrivateWithJavaUtilMap_(id<JavaUtilMap> backingMap);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonGraphMapRetrievalCache)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonGraphMapRetrievalCache")
