//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/primitives/UnsignedLongs.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonPrimitivesUnsignedLongs")
#ifdef RESTRICT_ComGoogleCommonPrimitivesUnsignedLongs
#define INCLUDE_ALL_ComGoogleCommonPrimitivesUnsignedLongs 0
#else
#define INCLUDE_ALL_ComGoogleCommonPrimitivesUnsignedLongs 1
#endif
#undef RESTRICT_ComGoogleCommonPrimitivesUnsignedLongs

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonPrimitivesUnsignedLongs_) && (INCLUDE_ALL_ComGoogleCommonPrimitivesUnsignedLongs || defined(INCLUDE_ComGoogleCommonPrimitivesUnsignedLongs))
#define ComGoogleCommonPrimitivesUnsignedLongs_

@class IOSLongArray;
@class JavaLangInteger;
@class JavaLangLong;
@protocol JavaUtilComparator;

@interface ComGoogleCommonPrimitivesUnsignedLongs : NSObject

#pragma mark Public

+ (jint)compareWithLong:(jlong)a
               withLong:(jlong)b;

+ (jlong)decodeWithNSString:(NSString *)stringValue;

+ (jlong)divideWithLong:(jlong)dividend
               withLong:(jlong)divisor;

+ (NSString *)joinWithNSString:(NSString *)separator
                 withLongArray:(IOSLongArray *)array;

+ (id<JavaUtilComparator>)lexicographicalComparator;

+ (jlong)maxWithLongArray:(IOSLongArray *)array;

+ (jlong)minWithLongArray:(IOSLongArray *)array;

+ (jlong)parseUnsignedLongWithNSString:(NSString *)string;

+ (jlong)parseUnsignedLongWithNSString:(NSString *)string
                               withInt:(jint)radix;

+ (jlong)remainderWithLong:(jlong)dividend
                  withLong:(jlong)divisor;

+ (void)sortWithLongArray:(IOSLongArray *)array;

+ (void)sortWithLongArray:(IOSLongArray *)array
                  withInt:(jint)fromIndex
                  withInt:(jint)toIndex;

+ (void)sortDescendingWithLongArray:(IOSLongArray *)array;

+ (void)sortDescendingWithLongArray:(IOSLongArray *)array
                            withInt:(jint)fromIndex
                            withInt:(jint)toIndex;

+ (NSString *)toStringWithLong:(jlong)x;

+ (NSString *)toStringWithLong:(jlong)x
                       withInt:(jint)radix;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonPrimitivesUnsignedLongs)

inline jlong ComGoogleCommonPrimitivesUnsignedLongs_get_MAX_VALUE(void);
#define ComGoogleCommonPrimitivesUnsignedLongs_MAX_VALUE -1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonPrimitivesUnsignedLongs, MAX_VALUE, jlong)

FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesUnsignedLongs_compareWithLong_withLong_(jlong a, jlong b);

FOUNDATION_EXPORT jlong ComGoogleCommonPrimitivesUnsignedLongs_minWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT jlong ComGoogleCommonPrimitivesUnsignedLongs_maxWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT NSString *ComGoogleCommonPrimitivesUnsignedLongs_joinWithNSString_withLongArray_(NSString *separator, IOSLongArray *array);

FOUNDATION_EXPORT id<JavaUtilComparator> ComGoogleCommonPrimitivesUnsignedLongs_lexicographicalComparator(void);

FOUNDATION_EXPORT void ComGoogleCommonPrimitivesUnsignedLongs_sortWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT void ComGoogleCommonPrimitivesUnsignedLongs_sortWithLongArray_withInt_withInt_(IOSLongArray *array, jint fromIndex, jint toIndex);

FOUNDATION_EXPORT void ComGoogleCommonPrimitivesUnsignedLongs_sortDescendingWithLongArray_(IOSLongArray *array);

FOUNDATION_EXPORT void ComGoogleCommonPrimitivesUnsignedLongs_sortDescendingWithLongArray_withInt_withInt_(IOSLongArray *array, jint fromIndex, jint toIndex);

FOUNDATION_EXPORT jlong ComGoogleCommonPrimitivesUnsignedLongs_divideWithLong_withLong_(jlong dividend, jlong divisor);

FOUNDATION_EXPORT jlong ComGoogleCommonPrimitivesUnsignedLongs_remainderWithLong_withLong_(jlong dividend, jlong divisor);

FOUNDATION_EXPORT jlong ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_(NSString *string);

FOUNDATION_EXPORT jlong ComGoogleCommonPrimitivesUnsignedLongs_parseUnsignedLongWithNSString_withInt_(NSString *string, jint radix);

FOUNDATION_EXPORT jlong ComGoogleCommonPrimitivesUnsignedLongs_decodeWithNSString_(NSString *stringValue);

FOUNDATION_EXPORT NSString *ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_(jlong x);

FOUNDATION_EXPORT NSString *ComGoogleCommonPrimitivesUnsignedLongs_toStringWithLong_withInt_(jlong x, jint radix);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesUnsignedLongs)

#endif

#if !defined (ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_) && (INCLUDE_ALL_ComGoogleCommonPrimitivesUnsignedLongs || defined(INCLUDE_ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator))
#define ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

#define RESTRICT_JavaUtilComparator 1
#define INCLUDE_JavaUtilComparator 1
#include "java/util/Comparator.h"

@class IOSLongArray;
@class IOSObjectArray;
@class JavaLangInteger;
@protocol JavaUtilFunctionFunction;
@protocol JavaUtilFunctionToDoubleFunction;
@protocol JavaUtilFunctionToIntFunction;
@protocol JavaUtilFunctionToLongFunction;

typedef NS_ENUM(jint, ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_Enum) {
  ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_Enum_INSTANCE = 0,
};
#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_ORDINAL jint
#else
#define ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_ORDINAL ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_Enum
#endif


@interface ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator : JavaLangEnum < JavaUtilComparator >

#pragma mark Public

- (jint)compareWithId:(IOSLongArray *)left
               withId:(IOSLongArray *)right;

- (NSString *)description;

+ (ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_Enum)toNSEnum;

- (ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_ORDINAL)ordinal;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values_[];

inline ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_get_INSTANCE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator, INSTANCE)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_values(void);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator *ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_fromOrdinal(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonPrimitivesUnsignedLongs_LexicographicalComparator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonPrimitivesUnsignedLongs")
