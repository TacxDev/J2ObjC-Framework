//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/math/ToDoubleRounder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonMathToDoubleRounder")
#ifdef RESTRICT_ComGoogleCommonMathToDoubleRounder
#define INCLUDE_ALL_ComGoogleCommonMathToDoubleRounder 0
#else
#define INCLUDE_ALL_ComGoogleCommonMathToDoubleRounder 1
#endif
#undef RESTRICT_ComGoogleCommonMathToDoubleRounder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonMathToDoubleRounder_) && (INCLUDE_ALL_ComGoogleCommonMathToDoubleRounder || defined(INCLUDE_ComGoogleCommonMathToDoubleRounder))
#define ComGoogleCommonMathToDoubleRounder_

@class JavaLangDouble;
@class JavaLangInteger;
@class JavaMathRoundingMode;
@protocol JavaLangComparable;

@interface ComGoogleCommonMathToDoubleRounder : NSObject

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

- (NSNumber<JavaLangComparable> *)minusWithNSNumber:(NSNumber<JavaLangComparable> *)a
                                       withNSNumber:(NSNumber<JavaLangComparable> *)b;

- (jdouble)roundToDoubleWithNSNumber:(NSNumber<JavaLangComparable> *)x
            withJavaMathRoundingMode:(JavaMathRoundingMode *)mode;

- (jdouble)roundToDoubleArbitrarilyWithNSNumber:(NSNumber<JavaLangComparable> *)x;

- (jint)signWithNSNumber:(NSNumber<JavaLangComparable> *)x;

- (NSNumber<JavaLangComparable> *)toXWithDouble:(jdouble)d
                       withJavaMathRoundingMode:(JavaMathRoundingMode *)mode;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonMathToDoubleRounder)

FOUNDATION_EXPORT void ComGoogleCommonMathToDoubleRounder_initPackagePrivate(ComGoogleCommonMathToDoubleRounder *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonMathToDoubleRounder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonMathToDoubleRounder")
