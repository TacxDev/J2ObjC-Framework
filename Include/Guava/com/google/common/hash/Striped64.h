//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/hash/Striped64.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonHashStriped64")
#ifdef RESTRICT_ComGoogleCommonHashStriped64
#define INCLUDE_ALL_ComGoogleCommonHashStriped64 0
#else
#define INCLUDE_ALL_ComGoogleCommonHashStriped64 1
#endif
#undef RESTRICT_ComGoogleCommonHashStriped64

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonHashStriped64_) && (INCLUDE_ALL_ComGoogleCommonHashStriped64 || defined(INCLUDE_ComGoogleCommonHashStriped64))
#define ComGoogleCommonHashStriped64_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangThreadLocal;
@class JavaUtilRandom;

@interface ComGoogleCommonHashStriped64 : NSNumber {
 @public
  volatile_id cells_;
  volatile_jlong base_;
  volatile_jint busy_;
}

#pragma mark Public

- (NSUInteger)hash;

- (jboolean)isEqual:(id)obj;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

- (jboolean)casBaseWithLong:(jlong)cmp
                   withLong:(jlong)val;

- (jboolean)casBusy;

- (jlong)fnWithLong:(jlong)currentValue
           withLong:(jlong)newValue;

- (void)internalResetWithLong:(jlong)initialValue;

- (void)retryUpdateWithLong:(jlong)x
               withIntArray:(IOSIntArray *)hc
                withBoolean:(jboolean)wasUncontended;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashStriped64)

J2OBJC_VOLATILE_FIELD_SETTER(ComGoogleCommonHashStriped64, cells_, IOSObjectArray *)

inline JavaLangThreadLocal *ComGoogleCommonHashStriped64_get_threadHashCode(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaLangThreadLocal *ComGoogleCommonHashStriped64_threadHashCode;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashStriped64, threadHashCode, JavaLangThreadLocal *)

inline JavaUtilRandom *ComGoogleCommonHashStriped64_get_rng(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRandom *ComGoogleCommonHashStriped64_rng;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashStriped64, rng, JavaUtilRandom *)

inline jint ComGoogleCommonHashStriped64_get_NCPU(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint ComGoogleCommonHashStriped64_NCPU;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleCommonHashStriped64, NCPU, jint)

FOUNDATION_EXPORT void ComGoogleCommonHashStriped64_initPackagePrivate(ComGoogleCommonHashStriped64 *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashStriped64)

#endif

#if !defined (ComGoogleCommonHashStriped64_Cell_) && (INCLUDE_ALL_ComGoogleCommonHashStriped64 || defined(INCLUDE_ComGoogleCommonHashStriped64_Cell))
#define ComGoogleCommonHashStriped64_Cell_

@class JavaLangBoolean;
@class JavaLangLong;

@interface ComGoogleCommonHashStriped64_Cell : NSObject {
 @public
  volatile_jlong p0_;
  volatile_jlong p1_;
  volatile_jlong p2_;
  volatile_jlong p3_;
  volatile_jlong p4_;
  volatile_jlong p5_;
  volatile_jlong p6_;
  volatile_jlong value_;
  volatile_jlong q0_;
  volatile_jlong q1_;
  volatile_jlong q2_;
  volatile_jlong q3_;
  volatile_jlong q4_;
  volatile_jlong q5_;
  volatile_jlong q6_;
}

#pragma mark Package-Private

- (instancetype)initWithLong:(jlong)x;

- (jboolean)casWithLong:(jlong)cmp
               withLong:(jlong)val;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashStriped64_Cell)

FOUNDATION_EXPORT void ComGoogleCommonHashStriped64_Cell_initWithLong_(ComGoogleCommonHashStriped64_Cell *self, jlong x);

FOUNDATION_EXPORT ComGoogleCommonHashStriped64_Cell *new_ComGoogleCommonHashStriped64_Cell_initWithLong_(jlong x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonHashStriped64_Cell *create_ComGoogleCommonHashStriped64_Cell_initWithLong_(jlong x);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashStriped64_Cell)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonHashStriped64")
