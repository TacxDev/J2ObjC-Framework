//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/hash/Murmur3_32HashFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonHashMurmur3_32HashFunction")
#ifdef RESTRICT_ComGoogleCommonHashMurmur3_32HashFunction
#define INCLUDE_ALL_ComGoogleCommonHashMurmur3_32HashFunction 0
#else
#define INCLUDE_ALL_ComGoogleCommonHashMurmur3_32HashFunction 1
#endif
#undef RESTRICT_ComGoogleCommonHashMurmur3_32HashFunction

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonHashMurmur3_32HashFunction_) && (INCLUDE_ALL_ComGoogleCommonHashMurmur3_32HashFunction || defined(INCLUDE_ComGoogleCommonHashMurmur3_32HashFunction))
#define ComGoogleCommonHashMurmur3_32HashFunction_

#define RESTRICT_ComGoogleCommonHashAbstractHashFunction 1
#define INCLUDE_ComGoogleCommonHashAbstractHashFunction 1
#include "com/google/common/hash/AbstractHashFunction.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComGoogleCommonHashHashCode;
@class IOSByteArray;
@class JavaLangBoolean;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaNioCharsetCharset;
@protocol ComGoogleCommonHashHashFunction;
@protocol ComGoogleCommonHashHasher;
@protocol JavaLangCharSequence;

@interface ComGoogleCommonHashMurmur3_32HashFunction : ComGoogleCommonHashAbstractHashFunction < JavaIoSerializable >

#pragma mark Public

- (jint)bits;

- (jboolean)isEqual:(id)object;

- (ComGoogleCommonHashHashCode *)hashBytesWithByteArray:(IOSByteArray *)input
                                                withInt:(jint)off
                                                withInt:(jint)len;

- (NSUInteger)hash;

- (ComGoogleCommonHashHashCode *)hashIntWithInt:(jint)input;

- (ComGoogleCommonHashHashCode *)hashLongWithLong:(jlong)input;

- (ComGoogleCommonHashHashCode *)hashStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
                                          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (ComGoogleCommonHashHashCode *)hashUnencodedCharsWithJavaLangCharSequence:(id<JavaLangCharSequence>)input;

- (id<ComGoogleCommonHashHasher>)newHasher OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithInt:(jint)seed
                              withBoolean:(jboolean)supplementaryPlaneFix;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashMurmur3_32HashFunction)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashMurmur3_32HashFunction_get_MURMUR3_32(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashMurmur3_32HashFunction_MURMUR3_32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashMurmur3_32HashFunction, MURMUR3_32, id<ComGoogleCommonHashHashFunction>)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashMurmur3_32HashFunction_get_MURMUR3_32_FIXED(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashMurmur3_32HashFunction_MURMUR3_32_FIXED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashMurmur3_32HashFunction, MURMUR3_32_FIXED, id<ComGoogleCommonHashHashFunction>)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashMurmur3_32HashFunction_get_GOOD_FAST_HASH_32(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashMurmur3_32HashFunction_GOOD_FAST_HASH_32;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashMurmur3_32HashFunction, GOOD_FAST_HASH_32, id<ComGoogleCommonHashHashFunction>)

FOUNDATION_EXPORT void ComGoogleCommonHashMurmur3_32HashFunction_initPackagePrivateWithInt_withBoolean_(ComGoogleCommonHashMurmur3_32HashFunction *self, jint seed, jboolean supplementaryPlaneFix);

FOUNDATION_EXPORT ComGoogleCommonHashMurmur3_32HashFunction *new_ComGoogleCommonHashMurmur3_32HashFunction_initPackagePrivateWithInt_withBoolean_(jint seed, jboolean supplementaryPlaneFix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonHashMurmur3_32HashFunction *create_ComGoogleCommonHashMurmur3_32HashFunction_initPackagePrivateWithInt_withBoolean_(jint seed, jboolean supplementaryPlaneFix);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashMurmur3_32HashFunction)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonHashMurmur3_32HashFunction")
