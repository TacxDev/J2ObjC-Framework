//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/hash/Crc32cHashFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonHashCrc32cHashFunction")
#ifdef RESTRICT_ComGoogleCommonHashCrc32cHashFunction
#define INCLUDE_ALL_ComGoogleCommonHashCrc32cHashFunction 0
#else
#define INCLUDE_ALL_ComGoogleCommonHashCrc32cHashFunction 1
#endif
#undef RESTRICT_ComGoogleCommonHashCrc32cHashFunction

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonHashCrc32cHashFunction_) && (INCLUDE_ALL_ComGoogleCommonHashCrc32cHashFunction || defined(INCLUDE_ComGoogleCommonHashCrc32cHashFunction))
#define ComGoogleCommonHashCrc32cHashFunction_

#define RESTRICT_ComGoogleCommonHashAbstractHashFunction 1
#define INCLUDE_ComGoogleCommonHashAbstractHashFunction 1
#include "com/google/common/hash/AbstractHashFunction.h"

@class JavaLangInteger;
@protocol ComGoogleCommonHashHashFunction;
@protocol ComGoogleCommonHashHasher;

@interface ComGoogleCommonHashCrc32cHashFunction : ComGoogleCommonHashAbstractHashFunction

#pragma mark Public

- (jint)bits;

- (id<ComGoogleCommonHashHasher>)newHasher OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initPackagePrivate;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashCrc32cHashFunction)

inline id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashCrc32cHashFunction_get_CRC_32_C(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ComGoogleCommonHashHashFunction> ComGoogleCommonHashCrc32cHashFunction_CRC_32_C;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashCrc32cHashFunction, CRC_32_C, id<ComGoogleCommonHashHashFunction>)

FOUNDATION_EXPORT void ComGoogleCommonHashCrc32cHashFunction_initPackagePrivate(ComGoogleCommonHashCrc32cHashFunction *self);

FOUNDATION_EXPORT ComGoogleCommonHashCrc32cHashFunction *new_ComGoogleCommonHashCrc32cHashFunction_initPackagePrivate(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonHashCrc32cHashFunction *create_ComGoogleCommonHashCrc32cHashFunction_initPackagePrivate(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashCrc32cHashFunction)

#endif

#if !defined (ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_) && (INCLUDE_ALL_ComGoogleCommonHashCrc32cHashFunction || defined(INCLUDE_ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher))
#define ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_

#define RESTRICT_ComGoogleCommonHashAbstractStreamingHasher 1
#define INCLUDE_ComGoogleCommonHashAbstractStreamingHasher 1
#include "com/google/common/hash/AbstractStreamingHasher.h"

@class ComGoogleCommonHashHashCode;
@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangInteger;
@class JavaNioByteBuffer;

@interface ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher : ComGoogleCommonHashAbstractStreamingHasher

#pragma mark Protected

- (ComGoogleCommonHashHashCode *)makeHash;

- (void)processWithJavaNioByteBuffer:(JavaNioByteBuffer *)bb;

- (void)processRemainingWithJavaNioByteBuffer:(JavaNioByteBuffer *)bb;

#pragma mark Package-Private

- (instancetype)init;

+ (jint)combineWithInt:(jint)csum
               withInt:(jint)crc;

+ (jint)computeForWordWithInt:(jint)word;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivateWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initPackagePrivateWithInt:(jint)arg0
                                  withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher)

inline IOSIntArray *ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_get_BYTE_TABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSIntArray *ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_BYTE_TABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher, BYTE_TABLE, IOSIntArray *)

inline IOSObjectArray *ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_get_STRIDE_TABLE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_STRIDE_TABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher, STRIDE_TABLE, IOSObjectArray *)

inline jint ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_get_INVERSE_COMPUTE_FOR_WORD_OF_ALL_1S(void);
#define ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_INVERSE_COMPUTE_FOR_WORD_OF_ALL_1S -287056435
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher, INVERSE_COMPUTE_FOR_WORD_OF_ALL_1S, jint)

FOUNDATION_EXPORT void ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_init(ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher *self);

FOUNDATION_EXPORT ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher *new_ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher *create_ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_init(void);

FOUNDATION_EXPORT jint ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_computeForWordWithInt_(jint word);

FOUNDATION_EXPORT jint ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher_combineWithInt_withInt_(jint csum, jint crc);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashCrc32cHashFunction_Crc32cHasher)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonHashCrc32cHashFunction")
