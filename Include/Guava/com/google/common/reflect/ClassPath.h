//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/build_result/java/com/google/common/reflect/ClassPath.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonReflectClassPath")
#ifdef RESTRICT_ComGoogleCommonReflectClassPath
#define INCLUDE_ALL_ComGoogleCommonReflectClassPath 0
#else
#define INCLUDE_ALL_ComGoogleCommonReflectClassPath 1
#endif
#undef RESTRICT_ComGoogleCommonReflectClassPath
#ifdef INCLUDE_ComGoogleCommonReflectClassPath_ClassInfo
#define INCLUDE_ComGoogleCommonReflectClassPath_ResourceInfo 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonReflectClassPath_) && (INCLUDE_ALL_ComGoogleCommonReflectClassPath || defined(INCLUDE_ComGoogleCommonReflectClassPath))
#define ComGoogleCommonReflectClassPath_

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonCollectImmutableMap;
@class ComGoogleCommonCollectImmutableSet;
@class JavaIoFile;
@class JavaLangClassLoader;
@class JavaNetURL;
@class JavaUtilJarManifest;

@interface ComGoogleCommonReflectClassPath : NSObject

#pragma mark Public

+ (ComGoogleCommonReflectClassPath *)fromWithJavaLangClassLoader:(JavaLangClassLoader *)classloader;

- (ComGoogleCommonCollectImmutableSet *)getAllClasses;

- (ComGoogleCommonCollectImmutableSet *)getResources;

- (ComGoogleCommonCollectImmutableSet *)getTopLevelClasses;

- (ComGoogleCommonCollectImmutableSet *)getTopLevelClassesWithNSString:(NSString *)packageName;

- (ComGoogleCommonCollectImmutableSet *)getTopLevelClassesRecursiveWithNSString:(NSString *)packageName;

#pragma mark Package-Private

+ (NSString *)getClassNameWithNSString:(NSString *)filename;

+ (ComGoogleCommonCollectImmutableMap *)getClassPathEntriesWithJavaLangClassLoader:(JavaLangClassLoader *)classloader;

+ (JavaNetURL *)getClassPathEntryWithJavaIoFile:(JavaIoFile *)jarFile
                                   withNSString:(NSString *)path;

+ (ComGoogleCommonCollectImmutableSet *)getClassPathFromManifestWithJavaIoFile:(JavaIoFile *)jarFile
                                                       withJavaUtilJarManifest:(JavaUtilJarManifest *)manifest;

+ (ComGoogleCommonCollectImmutableSet *)locationsFromWithJavaLangClassLoader:(JavaLangClassLoader *)classloader;

+ (ComGoogleCommonCollectImmutableList *)parseJavaClassPath;

+ (JavaIoFile *)toFileWithJavaNetURL:(JavaNetURL *)url;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonReflectClassPath)

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath *ComGoogleCommonReflectClassPath_fromWithJavaLangClassLoader_(JavaLangClassLoader *classloader);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableSet *ComGoogleCommonReflectClassPath_locationsFromWithJavaLangClassLoader_(JavaLangClassLoader *classloader);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableSet *ComGoogleCommonReflectClassPath_getClassPathFromManifestWithJavaIoFile_withJavaUtilJarManifest_(JavaIoFile *jarFile, JavaUtilJarManifest *manifest);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableMap *ComGoogleCommonReflectClassPath_getClassPathEntriesWithJavaLangClassLoader_(JavaLangClassLoader *classloader);

FOUNDATION_EXPORT ComGoogleCommonCollectImmutableList *ComGoogleCommonReflectClassPath_parseJavaClassPath(void);

FOUNDATION_EXPORT JavaNetURL *ComGoogleCommonReflectClassPath_getClassPathEntryWithJavaIoFile_withNSString_(JavaIoFile *jarFile, NSString *path);

FOUNDATION_EXPORT NSString *ComGoogleCommonReflectClassPath_getClassNameWithNSString_(NSString *filename);

FOUNDATION_EXPORT JavaIoFile *ComGoogleCommonReflectClassPath_toFileWithJavaNetURL_(JavaNetURL *url);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectClassPath)

#endif

#if !defined (ComGoogleCommonReflectClassPath_ResourceInfo_) && (INCLUDE_ALL_ComGoogleCommonReflectClassPath || defined(INCLUDE_ComGoogleCommonReflectClassPath_ResourceInfo))
#define ComGoogleCommonReflectClassPath_ResourceInfo_

@class ComGoogleCommonIoByteSource;
@class ComGoogleCommonIoCharSource;
@class JavaIoFile;
@class JavaLangBoolean;
@class JavaLangClassLoader;
@class JavaLangInteger;
@class JavaNetURL;
@class JavaNioCharsetCharset;

@interface ComGoogleCommonReflectClassPath_ResourceInfo : NSObject {
 @public
  JavaLangClassLoader *loader_;
}

#pragma mark Public

- (ComGoogleCommonIoByteSource *)asByteSource;

- (ComGoogleCommonIoCharSource *)asCharSourceWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (jboolean)isEqual:(id)obj;

- (NSString *)getResourceName;

- (NSUInteger)hash;

- (NSString *)description;

- (JavaNetURL *)url;

#pragma mark Package-Private

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
                      withNSString:(NSString *)resourceName
           withJavaLangClassLoader:(JavaLangClassLoader *)loader;

- (JavaIoFile *)getFile;

+ (ComGoogleCommonReflectClassPath_ResourceInfo *)ofWithJavaIoFile:(JavaIoFile *)file
                                                      withNSString:(NSString *)resourceName
                                           withJavaLangClassLoader:(JavaLangClassLoader *)loader;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectClassPath_ResourceInfo)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectClassPath_ResourceInfo, loader_, JavaLangClassLoader *)

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath_ResourceInfo *ComGoogleCommonReflectClassPath_ResourceInfo_ofWithJavaIoFile_withNSString_withJavaLangClassLoader_(JavaIoFile *file, NSString *resourceName, JavaLangClassLoader *loader);

FOUNDATION_EXPORT void ComGoogleCommonReflectClassPath_ResourceInfo_initWithJavaIoFile_withNSString_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_ResourceInfo *self, JavaIoFile *file, NSString *resourceName, JavaLangClassLoader *loader);

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath_ResourceInfo *new_ComGoogleCommonReflectClassPath_ResourceInfo_initWithJavaIoFile_withNSString_withJavaLangClassLoader_(JavaIoFile *file, NSString *resourceName, JavaLangClassLoader *loader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath_ResourceInfo *create_ComGoogleCommonReflectClassPath_ResourceInfo_initWithJavaIoFile_withNSString_withJavaLangClassLoader_(JavaIoFile *file, NSString *resourceName, JavaLangClassLoader *loader);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectClassPath_ResourceInfo)

#endif

#if !defined (ComGoogleCommonReflectClassPath_ClassInfo_) && (INCLUDE_ALL_ComGoogleCommonReflectClassPath || defined(INCLUDE_ComGoogleCommonReflectClassPath_ClassInfo))
#define ComGoogleCommonReflectClassPath_ClassInfo_

@class IOSClass;
@class JavaIoFile;
@class JavaLangBoolean;
@class JavaLangClassLoader;

@interface ComGoogleCommonReflectClassPath_ClassInfo : ComGoogleCommonReflectClassPath_ResourceInfo

#pragma mark Public

- (NSString *)getName;

- (NSString *)getPackageName;

- (NSString *)getSimpleName;

- (jboolean)isTopLevel;

- (IOSClass *)load__;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithJavaIoFile:(JavaIoFile *)file
                      withNSString:(NSString *)resourceName
           withJavaLangClassLoader:(JavaLangClassLoader *)loader;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectClassPath_ClassInfo)

FOUNDATION_EXPORT void ComGoogleCommonReflectClassPath_ClassInfo_initWithJavaIoFile_withNSString_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_ClassInfo *self, JavaIoFile *file, NSString *resourceName, JavaLangClassLoader *loader);

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath_ClassInfo *new_ComGoogleCommonReflectClassPath_ClassInfo_initWithJavaIoFile_withNSString_withJavaLangClassLoader_(JavaIoFile *file, NSString *resourceName, JavaLangClassLoader *loader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath_ClassInfo *create_ComGoogleCommonReflectClassPath_ClassInfo_initWithJavaIoFile_withNSString_withJavaLangClassLoader_(JavaIoFile *file, NSString *resourceName, JavaLangClassLoader *loader);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectClassPath_ClassInfo)

#endif

#if !defined (ComGoogleCommonReflectClassPath_LocationInfo_) && (INCLUDE_ALL_ComGoogleCommonReflectClassPath || defined(INCLUDE_ComGoogleCommonReflectClassPath_LocationInfo))
#define ComGoogleCommonReflectClassPath_LocationInfo_

@class ComGoogleCommonCollectImmutableSet;
@class JavaIoFile;
@class JavaLangBoolean;
@class JavaLangClassLoader;
@class JavaLangInteger;
@protocol JavaUtilSet;

@interface ComGoogleCommonReflectClassPath_LocationInfo : NSObject {
 @public
  JavaIoFile *home_;
}

#pragma mark Public

- (jboolean)isEqual:(id)obj;

- (JavaIoFile *)file;

- (NSUInteger)hash;

- (ComGoogleCommonCollectImmutableSet *)scanResources;

- (ComGoogleCommonCollectImmutableSet *)scanResourcesWithJavaUtilSet:(id<JavaUtilSet>)scannedFiles;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithJavaIoFile:(JavaIoFile *)home
           withJavaLangClassLoader:(JavaLangClassLoader *)classloader;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonReflectClassPath_LocationInfo)

J2OBJC_FIELD_SETTER(ComGoogleCommonReflectClassPath_LocationInfo, home_, JavaIoFile *)

FOUNDATION_EXPORT void ComGoogleCommonReflectClassPath_LocationInfo_initWithJavaIoFile_withJavaLangClassLoader_(ComGoogleCommonReflectClassPath_LocationInfo *self, JavaIoFile *home, JavaLangClassLoader *classloader);

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath_LocationInfo *new_ComGoogleCommonReflectClassPath_LocationInfo_initWithJavaIoFile_withJavaLangClassLoader_(JavaIoFile *home, JavaLangClassLoader *classloader) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonReflectClassPath_LocationInfo *create_ComGoogleCommonReflectClassPath_LocationInfo_initWithJavaIoFile_withJavaLangClassLoader_(JavaIoFile *home, JavaLangClassLoader *classloader);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonReflectClassPath_LocationInfo)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonReflectClassPath")
