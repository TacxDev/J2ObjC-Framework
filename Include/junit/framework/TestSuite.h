//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/junit/framework/TestSuite.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JunitFrameworkTestSuite")
#ifdef RESTRICT_JunitFrameworkTestSuite
#define INCLUDE_ALL_JunitFrameworkTestSuite 0
#else
#define INCLUDE_ALL_JunitFrameworkTestSuite 1
#endif
#undef RESTRICT_JunitFrameworkTestSuite

#if !defined (JunitFrameworkTestSuite_) && (INCLUDE_ALL_JunitFrameworkTestSuite || defined(INCLUDE_JunitFrameworkTestSuite))
#define JunitFrameworkTestSuite_

#define RESTRICT_JunitFrameworkTest 1
#define INCLUDE_JunitFrameworkTest 1
#include "junit/framework/Test.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaLangInteger;
@class JavaLangReflectConstructor;
@class JunitFrameworkTestResult;
@protocol JavaUtilEnumeration;

@interface JunitFrameworkTestSuite : NSObject < JunitFrameworkTest >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithIOSClass:(IOSClass *)theClass;

- (instancetype)initWithIOSClassArray:(IOSObjectArray *)classes;

- (instancetype)initWithIOSClass:(IOSClass *)theClass
                    withNSString:(NSString *)name;

- (instancetype)initWithIOSClassArray:(IOSObjectArray *)classes
                         withNSString:(NSString *)name;

- (instancetype)initWithNSString:(NSString *)name;

- (void)addTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test;

- (void)addTestSuiteWithIOSClass:(IOSClass *)testClass;

- (jint)countTestCases;

+ (id<JunitFrameworkTest>)createTestWithIOSClass:(IOSClass *)theClass
                                    withNSString:(NSString *)name;

- (NSString *)getName;

+ (JavaLangReflectConstructor *)getTestConstructorWithIOSClass:(IOSClass *)theClass;

- (void)runWithJunitFrameworkTestResult:(JunitFrameworkTestResult *)result;

- (void)runTestWithJunitFrameworkTest:(id<JunitFrameworkTest>)test
         withJunitFrameworkTestResult:(JunitFrameworkTestResult *)result;

- (void)setNameWithNSString:(NSString *)name;

- (id<JunitFrameworkTest>)testAtWithInt:(jint)index;

- (jint)testCount;

- (id<JavaUtilEnumeration>)tests;

- (NSString *)description;

+ (id<JunitFrameworkTest>)warningWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(JunitFrameworkTestSuite)

FOUNDATION_EXPORT id<JunitFrameworkTest> JunitFrameworkTestSuite_createTestWithIOSClass_withNSString_(IOSClass *theClass, NSString *name);

FOUNDATION_EXPORT JavaLangReflectConstructor *JunitFrameworkTestSuite_getTestConstructorWithIOSClass_(IOSClass *theClass);

FOUNDATION_EXPORT id<JunitFrameworkTest> JunitFrameworkTestSuite_warningWithNSString_(NSString *message);

FOUNDATION_EXPORT void JunitFrameworkTestSuite_init(JunitFrameworkTestSuite *self);

FOUNDATION_EXPORT JunitFrameworkTestSuite *new_JunitFrameworkTestSuite_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkTestSuite *create_JunitFrameworkTestSuite_init(void);

FOUNDATION_EXPORT void JunitFrameworkTestSuite_initWithIOSClass_(JunitFrameworkTestSuite *self, IOSClass *theClass);

FOUNDATION_EXPORT JunitFrameworkTestSuite *new_JunitFrameworkTestSuite_initWithIOSClass_(IOSClass *theClass) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkTestSuite *create_JunitFrameworkTestSuite_initWithIOSClass_(IOSClass *theClass);

FOUNDATION_EXPORT void JunitFrameworkTestSuite_initWithIOSClass_withNSString_(JunitFrameworkTestSuite *self, IOSClass *theClass, NSString *name);

FOUNDATION_EXPORT JunitFrameworkTestSuite *new_JunitFrameworkTestSuite_initWithIOSClass_withNSString_(IOSClass *theClass, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkTestSuite *create_JunitFrameworkTestSuite_initWithIOSClass_withNSString_(IOSClass *theClass, NSString *name);

FOUNDATION_EXPORT void JunitFrameworkTestSuite_initWithNSString_(JunitFrameworkTestSuite *self, NSString *name);

FOUNDATION_EXPORT JunitFrameworkTestSuite *new_JunitFrameworkTestSuite_initWithNSString_(NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkTestSuite *create_JunitFrameworkTestSuite_initWithNSString_(NSString *name);

FOUNDATION_EXPORT void JunitFrameworkTestSuite_initWithIOSClassArray_(JunitFrameworkTestSuite *self, IOSObjectArray *classes);

FOUNDATION_EXPORT JunitFrameworkTestSuite *new_JunitFrameworkTestSuite_initWithIOSClassArray_(IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkTestSuite *create_JunitFrameworkTestSuite_initWithIOSClassArray_(IOSObjectArray *classes);

FOUNDATION_EXPORT void JunitFrameworkTestSuite_initWithIOSClassArray_withNSString_(JunitFrameworkTestSuite *self, IOSObjectArray *classes, NSString *name);

FOUNDATION_EXPORT JunitFrameworkTestSuite *new_JunitFrameworkTestSuite_initWithIOSClassArray_withNSString_(IOSObjectArray *classes, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkTestSuite *create_JunitFrameworkTestSuite_initWithIOSClassArray_withNSString_(IOSObjectArray *classes, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(JunitFrameworkTestSuite)

#endif

#pragma pop_macro("INCLUDE_ALL_JunitFrameworkTestSuite")
