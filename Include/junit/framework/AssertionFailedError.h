//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/junit/build_result/java/junit/framework/AssertionFailedError.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JunitFrameworkAssertionFailedError")
#ifdef RESTRICT_JunitFrameworkAssertionFailedError
#define INCLUDE_ALL_JunitFrameworkAssertionFailedError 0
#else
#define INCLUDE_ALL_JunitFrameworkAssertionFailedError 1
#endif
#undef RESTRICT_JunitFrameworkAssertionFailedError

#if !defined (JunitFrameworkAssertionFailedError_) && (INCLUDE_ALL_JunitFrameworkAssertionFailedError || defined(INCLUDE_JunitFrameworkAssertionFailedError))
#define JunitFrameworkAssertionFailedError_

#define RESTRICT_JavaLangAssertionError 1
#define INCLUDE_JavaLangAssertionError 1
#include "java/lang/AssertionError.h"

@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangThrowable;

@interface JunitFrameworkAssertionFailedError : JavaLangAssertionError

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

- (instancetype)initWithChar:(jchar)arg0 NS_UNAVAILABLE;

- (instancetype)initWithDouble:(jdouble)arg0 NS_UNAVAILABLE;

- (instancetype)initWithFloat:(jfloat)arg0 NS_UNAVAILABLE;

- (instancetype)initWithId:(id)arg0 NS_UNAVAILABLE;

- (instancetype)initWithInt:(jint)arg0 NS_UNAVAILABLE;

- (instancetype)initWithLong:(jlong)arg0 NS_UNAVAILABLE;

- (instancetype)initWithNSString:(NSString *)arg0
           withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(JunitFrameworkAssertionFailedError)

FOUNDATION_EXPORT void JunitFrameworkAssertionFailedError_init(JunitFrameworkAssertionFailedError *self);

FOUNDATION_EXPORT JunitFrameworkAssertionFailedError *new_JunitFrameworkAssertionFailedError_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkAssertionFailedError *create_JunitFrameworkAssertionFailedError_init(void);

FOUNDATION_EXPORT void JunitFrameworkAssertionFailedError_initWithNSString_(JunitFrameworkAssertionFailedError *self, NSString *message);

FOUNDATION_EXPORT JunitFrameworkAssertionFailedError *new_JunitFrameworkAssertionFailedError_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JunitFrameworkAssertionFailedError *create_JunitFrameworkAssertionFailedError_initWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(JunitFrameworkAssertionFailedError)

#endif

#pragma pop_macro("INCLUDE_ALL_JunitFrameworkAssertionFailedError")
