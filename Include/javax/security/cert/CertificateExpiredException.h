//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/javax/security/cert/CertificateExpiredException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException")
#ifdef RESTRICT_JavaxSecurityCertCertificateExpiredException
#define INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException 0
#else
#define INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException 1
#endif
#undef RESTRICT_JavaxSecurityCertCertificateExpiredException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxSecurityCertCertificateExpiredException_) && (INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException || defined(INCLUDE_JavaxSecurityCertCertificateExpiredException))
#define JavaxSecurityCertCertificateExpiredException_

#define RESTRICT_JavaxSecurityCertCertificateException 1
#define INCLUDE_JavaxSecurityCertCertificateException 1
#include "javax/security/cert/CertificateException.h"

/*!
 @brief Certificate Expired Exception.This is thrown whenever the current 
 <code>Date</code> or the specified <code>Date</code> is after the 
 <code>notAfter</code> date/time specified in the validity period
  of the certificate.
 <p><em>Note: The classes in the package <code>javax.security.cert</code>
  exist for compatibility with earlier versions of the
  Java Secure Sockets Extension (JSSE). New applications should instead
  use the standard Java SE certificate classes located in 
 <code>java.security.cert</code>.</em></p>
 @since 1.4
 @author Hemma Prafullchandra
 */
@interface JavaxSecurityCertCertificateExpiredException : JavaxSecurityCertCertificateException

#pragma mark Public

/*!
 @brief Constructs a CertificateExpiredException with no detail message.A
  detail message is a String that describes this particular
  exception.
 */
- (instancetype __nonnull)init;

/*!
 @brief Constructs a CertificateExpiredException with the specified detail
  message.A detail message is a String that describes this
  particular exception.
 @param message the detail message.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxSecurityCertCertificateExpiredException)

FOUNDATION_EXPORT void JavaxSecurityCertCertificateExpiredException_init(JavaxSecurityCertCertificateExpiredException *self);

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *new_JavaxSecurityCertCertificateExpiredException_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *create_JavaxSecurityCertCertificateExpiredException_init(void);

FOUNDATION_EXPORT void JavaxSecurityCertCertificateExpiredException_initWithNSString_(JavaxSecurityCertCertificateExpiredException *self, NSString *message);

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *new_JavaxSecurityCertCertificateExpiredException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT JavaxSecurityCertCertificateExpiredException *create_JavaxSecurityCertCertificateExpiredException_initWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(JavaxSecurityCertCertificateExpiredException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxSecurityCertCertificateExpiredException")
