//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/javax/sql/ConnectionEventListener.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxSqlConnectionEventListener")
#ifdef RESTRICT_JavaxSqlConnectionEventListener
#define INCLUDE_ALL_JavaxSqlConnectionEventListener 0
#else
#define INCLUDE_ALL_JavaxSqlConnectionEventListener 1
#endif
#undef RESTRICT_JavaxSqlConnectionEventListener

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxSqlConnectionEventListener_) && (INCLUDE_ALL_JavaxSqlConnectionEventListener || defined(INCLUDE_JavaxSqlConnectionEventListener))
#define JavaxSqlConnectionEventListener_

#define RESTRICT_JavaUtilEventListener 1
#define INCLUDE_JavaUtilEventListener 1
#include "java/util/EventListener.h"

@class JavaxSqlConnectionEvent;

/*!
 @brief <P>
  An object that registers to be notified of events generated by a 
 <code>PooledConnection</code> object.
 <P>
  The <code>ConnectionEventListener</code> interface is implemented by a
  connection pooling component.  A connection pooling component will
  usually be provided by a JDBC driver vendor or another system software
  vendor.  A JDBC driver notifies a <code>ConnectionEventListener</code>
  object when an application is finished using a pooled connection with
  which the listener has registered.  The notification
  occurs after the application calls the method <code>close</code> on
  its representation of a <code>PooledConnection</code> object.  A 
 <code>ConnectionEventListener</code> is also notified when a
  connection error occurs due to the fact that the <code>PooledConnection</code>
  is unfit for future use---the server has crashed, for example.
  The listener is notified by the JDBC driver just before the driver throws an 
 <code>SQLException</code> to the application using the 
 <code>PooledConnection</code> object.
 @since 1.4
 */
@protocol JavaxSqlConnectionEventListener < JavaUtilEventListener, JavaObject >

/*!
 @brief Notifies this <code>ConnectionEventListener</code> that
  the application has called the method <code>close</code> on its
  representation of a pooled connection.
 @param event an event object describing the source of  the event
 */
- (void)connectionClosedWithJavaxSqlConnectionEvent:(JavaxSqlConnectionEvent *)event;

/*!
 @brief Notifies this <code>ConnectionEventListener</code> that
  a fatal error has occurred and the pooled connection can
  no longer be used.The driver makes this notification just
  before it throws the application the <code>SQLException</code>
  contained in the given <code>ConnectionEvent</code> object.
 @param event an event object describing the source of  the event and containing the 
  <code> SQLException </code>  that the  driver is about to throw
 */
- (void)connectionErrorOccurredWithJavaxSqlConnectionEvent:(JavaxSqlConnectionEvent *)event;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxSqlConnectionEventListener)

J2OBJC_TYPE_LITERAL_HEADER(JavaxSqlConnectionEventListener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxSqlConnectionEventListener")
