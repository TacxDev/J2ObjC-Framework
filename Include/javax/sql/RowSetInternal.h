//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/platform/libcore/ojluni/src/main/java/javax/sql/RowSetInternal.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JavaxSqlRowSetInternal")
#ifdef RESTRICT_JavaxSqlRowSetInternal
#define INCLUDE_ALL_JavaxSqlRowSetInternal 0
#else
#define INCLUDE_ALL_JavaxSqlRowSetInternal 1
#endif
#undef RESTRICT_JavaxSqlRowSetInternal

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (JavaxSqlRowSetInternal_) && (INCLUDE_ALL_JavaxSqlRowSetInternal || defined(INCLUDE_JavaxSqlRowSetInternal))
#define JavaxSqlRowSetInternal_

@class IOSObjectArray;
@protocol JavaSqlConnection;
@protocol JavaSqlResultSet;
@protocol JavaxSqlRowSetMetaData;

/*!
 @brief The interface that a <code>RowSet</code> object implements in order to
  present itself to a <code>RowSetReader</code> or <code>RowSetWriter</code>
  object.The <code>RowSetInternal</code> interface contains
  methods that let the reader or writer access and modify the internal
  state of the rowset.
 @since 1.4
 */
@protocol JavaxSqlRowSetInternal < JavaObject >

/*!
 @brief Retrieves the parameters that have been set for this 
 <code>RowSet</code> object's command.
 @return an array of the current parameter values for this <code>RowSet</code>
          object's command
 @throw SQLExceptionif a database access error occurs
 */
- (IOSObjectArray *)getParams;

/*!
 @brief Retrieves the <code>Connection</code> object that was passed to this 
 <code>RowSet</code> object.
 @return the <code>Connection</code> object passed to the rowset
       or <code>null</code> if none was passed
 @throw SQLExceptionif a database access error occurs
 */
- (id<JavaSqlConnection>)getConnection;

/*!
 @brief Sets the given <code>RowSetMetaData</code> object as the 
 <code>RowSetMetaData</code> object for this <code>RowSet</code>
  object.The <code>RowSetReader</code> object associated with the rowset
  will use <code>RowSetMetaData</code> methods to set the values giving
  information about the rowset's columns.
 @param md the  <code> RowSetMetaData </code>  object that will be set with
          information about the rowset's columns
 @throw SQLExceptionif a database access error occurs
 */
- (void)setMetaDataWithJavaxSqlRowSetMetaData:(id<JavaxSqlRowSetMetaData>)md;

/*!
 @brief Retrieves a <code>ResultSet</code> object containing the original
  value of this <code>RowSet</code> object.
 <P>
  The cursor is positioned before the first row in the result set.
  Only rows contained in the result set returned by the method 
 <code>getOriginal</code> are said to have an original value.
 @return the original value of the rowset
 @throw SQLExceptionif a database access error occurs
 */
- (id<JavaSqlResultSet>)getOriginal;

/*!
 @brief Retrieves a <code>ResultSet</code> object containing the original value
  of the current row only.If the current row has no original value,
  an empty result set is returned.
 If there is no current row,
  an exception is thrown.
 @return the original value of the current row as a <code>ResultSet</code>
           object
 @throw SQLExceptionif a database access error occurs or this method
            is called while the cursor is on the insert row, before the
            first row, or after the last row
 */
- (id<JavaSqlResultSet>)getOriginalRow;

@end

J2OBJC_EMPTY_STATIC_INIT(JavaxSqlRowSetInternal)

J2OBJC_TYPE_LITERAL_HEADER(JavaxSqlRowSetInternal)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_JavaxSqlRowSetInternal")
