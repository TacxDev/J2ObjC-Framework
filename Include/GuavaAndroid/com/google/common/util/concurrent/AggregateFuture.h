//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/android/build_result/java/com/google/common/util/concurrent/AggregateFuture.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAggregateFuture")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentAggregateFuture
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAggregateFuture 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentAggregateFuture 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentAggregateFuture

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentAggregateFuture_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAggregateFuture || defined(INCLUDE_ComGoogleCommonUtilConcurrentAggregateFuture))
#define ComGoogleCommonUtilConcurrentAggregateFuture_

#define RESTRICT_ComGoogleCommonUtilConcurrentAggregateFutureState 1
#define INCLUDE_ComGoogleCommonUtilConcurrentAggregateFutureState 1
#include "com/google/common/util/concurrent/AggregateFutureState.h"

@class ComGoogleCommonCollectImmutableCollection;
@class ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason;
@class JavaLangBoolean;
@class JavaLangInteger;
@protocol JavaUtilSet;

@interface ComGoogleCommonUtilConcurrentAggregateFuture : ComGoogleCommonUtilConcurrentAggregateFutureState

#pragma mark Protected

- (void)afterDone;

- (NSString *)pendingToString;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithComGoogleCommonCollectImmutableCollection:(ComGoogleCommonCollectImmutableCollection *)futures
                                                                    withBoolean:(jboolean)allMustSucceed
                                                                    withBoolean:(jboolean)collectsValues;

- (void)addInitialExceptionWithJavaUtilSet:(id<JavaUtilSet>)seen;

- (void)collectOneValueWithInt:(jint)index
                        withId:(id)returnValue;

- (void)handleAllCompleted;

- (void)init__ OBJC_METHOD_FAMILY_NONE;

- (void)releaseResourcesWithComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason:(ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason *)reason;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivateWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAggregateFuture)

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentAggregateFuture_initPackagePrivateWithComGoogleCommonCollectImmutableCollection_withBoolean_withBoolean_(ComGoogleCommonUtilConcurrentAggregateFuture *self, ComGoogleCommonCollectImmutableCollection *futures, jboolean allMustSucceed, jboolean collectsValues);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAggregateFuture)

#endif

#if !defined (ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentAggregateFuture || defined(INCLUDE_ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason))
#define ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(jint, ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_Enum) {
  ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_Enum_OUTPUT_FUTURE_DONE = 0,
  ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_Enum_ALL_INPUT_FUTURES_PROCESSED = 1,
};
#if J2OBJC_IMPORTED_BY_JAVA_IMPLEMENTATION
#define ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_ORDINAL jint
#else
#define ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_ORDINAL ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_Enum
#endif


@interface ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason : JavaLangEnum

#pragma mark Public

+ (ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_Enum)toNSEnum;

- (ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_ORDINAL)ordinal;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason *ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_values_[];

inline ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason *ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_get_OUTPUT_FUTURE_DONE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason, OUTPUT_FUTURE_DONE)

inline ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason *ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_get_ALL_INPUT_FUTURES_PROCESSED(void);
J2OBJC_ENUM_CONSTANT(ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason, ALL_INPUT_FUTURES_PROCESSED)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_values(void);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason *ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason *ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_fromOrdinal(ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason_ORDINAL ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentAggregateFuture_ReleaseResourcesReason)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentAggregateFuture")
