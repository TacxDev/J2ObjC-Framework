//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/android/build_result/java/com/google/common/util/concurrent/TrustedListenableFutureTask.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask")
#ifdef RESTRICT_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask 0
#else
#define INCLUDE_ALL_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask 1
#endif
#undef RESTRICT_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_) && (INCLUDE_ALL_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask || defined(INCLUDE_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask))
#define ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_

#define RESTRICT_ComGoogleCommonUtilConcurrentFluentFuture 1
#define INCLUDE_ComGoogleCommonUtilConcurrentFluentFuture_TrustedFuture 1
#include "com/google/common/util/concurrent/FluentFuture.h"

#define RESTRICT_JavaUtilConcurrentRunnableFuture 1
#define INCLUDE_JavaUtilConcurrentRunnableFuture 1
#include "java/util/concurrent/RunnableFuture.h"

@protocol ComGoogleCommonUtilConcurrentAsyncCallable;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;

@interface ComGoogleCommonUtilConcurrentTrustedListenableFutureTask : ComGoogleCommonUtilConcurrentFluentFuture_TrustedFuture < JavaUtilConcurrentRunnableFuture >

#pragma mark Public

- (void)run;

#pragma mark Protected

- (void)afterDone;

- (NSString *)pendingToString;

#pragma mark Package-Private

- (instancetype)initPackagePrivateWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)callable;

- (instancetype)initPackagePrivateWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

+ (ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *)createWithComGoogleCommonUtilConcurrentAsyncCallable:(id<ComGoogleCommonUtilConcurrentAsyncCallable>)callable;

+ (ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *)createWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable;

+ (ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *)createWithJavaLangRunnable:(id<JavaLangRunnable>)runnable
                                                                                  withId:(id)result;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask)

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_createWithComGoogleCommonUtilConcurrentAsyncCallable_(id<ComGoogleCommonUtilConcurrentAsyncCallable> callable);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_createWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_createWithJavaLangRunnable_withId_(id<JavaLangRunnable> runnable, id result);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initPackagePrivateWithJavaUtilConcurrentCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *self, id<JavaUtilConcurrentCallable> callable);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initPackagePrivateWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *create_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initPackagePrivateWithJavaUtilConcurrentCallable_(id<JavaUtilConcurrentCallable> callable);

FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initPackagePrivateWithComGoogleCommonUtilConcurrentAsyncCallable_(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *self, id<ComGoogleCommonUtilConcurrentAsyncCallable> callable);

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *new_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initPackagePrivateWithComGoogleCommonUtilConcurrentAsyncCallable_(id<ComGoogleCommonUtilConcurrentAsyncCallable> callable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonUtilConcurrentTrustedListenableFutureTask *create_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask_initPackagePrivateWithComGoogleCommonUtilConcurrentAsyncCallable_(id<ComGoogleCommonUtilConcurrentAsyncCallable> callable);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonUtilConcurrentTrustedListenableFutureTask)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonUtilConcurrentTrustedListenableFutureTask")
