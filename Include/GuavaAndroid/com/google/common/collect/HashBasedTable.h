//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/android/build_result/java/com/google/common/collect/HashBasedTable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectHashBasedTable")
#ifdef RESTRICT_ComGoogleCommonCollectHashBasedTable
#define INCLUDE_ALL_ComGoogleCommonCollectHashBasedTable 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectHashBasedTable 1
#endif
#undef RESTRICT_ComGoogleCommonCollectHashBasedTable

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectHashBasedTable_) && (INCLUDE_ALL_ComGoogleCommonCollectHashBasedTable || defined(INCLUDE_ComGoogleCommonCollectHashBasedTable))
#define ComGoogleCommonCollectHashBasedTable_

#define RESTRICT_ComGoogleCommonCollectStandardTable 1
#define INCLUDE_ComGoogleCommonCollectStandardTable 1
#include "com/google/common/collect/StandardTable.h"

@class ComGoogleCommonCollectHashBasedTable_Factory;
@class JavaLangInteger;
@protocol ComGoogleCommonBaseSupplier;
@protocol ComGoogleCommonCollectTable;
@protocol JavaUtilMap;

@interface ComGoogleCommonCollectHashBasedTable : ComGoogleCommonCollectStandardTable

#pragma mark Public

+ (ComGoogleCommonCollectHashBasedTable *)create;

+ (ComGoogleCommonCollectHashBasedTable *)createWithInt:(jint)expectedRows
                                                withInt:(jint)expectedCellsPerRow;

+ (ComGoogleCommonCollectHashBasedTable *)createWithComGoogleCommonCollectTable:(id<ComGoogleCommonCollectTable>)table;

#pragma mark Package-Private

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)backingMap
withComGoogleCommonCollectHashBasedTable_Factory:(ComGoogleCommonCollectHashBasedTable_Factory *)factory;

// Disallowed inherited constructors, do not use.

- (instancetype)initPackagePrivateWithJavaUtilMap:(id<JavaUtilMap>)arg0
                  withComGoogleCommonBaseSupplier:(id<ComGoogleCommonBaseSupplier>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectHashBasedTable)

FOUNDATION_EXPORT ComGoogleCommonCollectHashBasedTable *ComGoogleCommonCollectHashBasedTable_create(void);

FOUNDATION_EXPORT ComGoogleCommonCollectHashBasedTable *ComGoogleCommonCollectHashBasedTable_createWithInt_withInt_(jint expectedRows, jint expectedCellsPerRow);

FOUNDATION_EXPORT ComGoogleCommonCollectHashBasedTable *ComGoogleCommonCollectHashBasedTable_createWithComGoogleCommonCollectTable_(id<ComGoogleCommonCollectTable> table);

FOUNDATION_EXPORT void ComGoogleCommonCollectHashBasedTable_initWithJavaUtilMap_withComGoogleCommonCollectHashBasedTable_Factory_(ComGoogleCommonCollectHashBasedTable *self, id<JavaUtilMap> backingMap, ComGoogleCommonCollectHashBasedTable_Factory *factory);

FOUNDATION_EXPORT ComGoogleCommonCollectHashBasedTable *new_ComGoogleCommonCollectHashBasedTable_initWithJavaUtilMap_withComGoogleCommonCollectHashBasedTable_Factory_(id<JavaUtilMap> backingMap, ComGoogleCommonCollectHashBasedTable_Factory *factory) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleCommonCollectHashBasedTable *create_ComGoogleCommonCollectHashBasedTable_initWithJavaUtilMap_withComGoogleCommonCollectHashBasedTable_Factory_(id<JavaUtilMap> backingMap, ComGoogleCommonCollectHashBasedTable_Factory *factory);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectHashBasedTable)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectHashBasedTable")
