//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/android/build_result/java/com/google/common/hash/Java8Compatibility.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonHashJava8Compatibility")
#ifdef RESTRICT_ComGoogleCommonHashJava8Compatibility
#define INCLUDE_ALL_ComGoogleCommonHashJava8Compatibility 0
#else
#define INCLUDE_ALL_ComGoogleCommonHashJava8Compatibility 1
#endif
#undef RESTRICT_ComGoogleCommonHashJava8Compatibility

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonHashJava8Compatibility_) && (INCLUDE_ALL_ComGoogleCommonHashJava8Compatibility || defined(INCLUDE_ComGoogleCommonHashJava8Compatibility))
#define ComGoogleCommonHashJava8Compatibility_

@class JavaLangInteger;
@class JavaNioBuffer;

@interface ComGoogleCommonHashJava8Compatibility : NSObject

#pragma mark Package-Private

+ (void)clearWithJavaNioBuffer:(JavaNioBuffer *)b;

+ (void)flipWithJavaNioBuffer:(JavaNioBuffer *)b;

+ (void)limitWithJavaNioBuffer:(JavaNioBuffer *)b
                       withInt:(jint)limit;

+ (void)positionWithJavaNioBuffer:(JavaNioBuffer *)b
                          withInt:(jint)position;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonHashJava8Compatibility)

FOUNDATION_EXPORT void ComGoogleCommonHashJava8Compatibility_clearWithJavaNioBuffer_(JavaNioBuffer *b);

FOUNDATION_EXPORT void ComGoogleCommonHashJava8Compatibility_flipWithJavaNioBuffer_(JavaNioBuffer *b);

FOUNDATION_EXPORT void ComGoogleCommonHashJava8Compatibility_limitWithJavaNioBuffer_withInt_(JavaNioBuffer *b, jint limit);

FOUNDATION_EXPORT void ComGoogleCommonHashJava8Compatibility_positionWithJavaNioBuffer_withInt_(JavaNioBuffer *b, jint position);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonHashJava8Compatibility)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonHashJava8Compatibility")
