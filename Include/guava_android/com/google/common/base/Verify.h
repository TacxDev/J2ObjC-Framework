//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/android/build_result/java/com/google/common/base/Verify.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonBaseVerify")
#ifdef RESTRICT_ComGoogleCommonBaseVerify
#define INCLUDE_ALL_ComGoogleCommonBaseVerify 0
#else
#define INCLUDE_ALL_ComGoogleCommonBaseVerify 1
#endif
#undef RESTRICT_ComGoogleCommonBaseVerify

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonBaseVerify_) && (INCLUDE_ALL_ComGoogleCommonBaseVerify || defined(INCLUDE_ComGoogleCommonBaseVerify))
#define ComGoogleCommonBaseVerify_

@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaLangInteger;
@class JavaLangLong;

@interface ComGoogleCommonBaseVerify : NSObject

#pragma mark Public

+ (void)verifyWithBoolean:(jboolean)expression;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withChar:(jchar)p1;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withChar:(jchar)p1
                 withChar:(jchar)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withChar:(jchar)p1
                  withInt:(jint)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withChar:(jchar)p1
                 withLong:(jlong)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withChar:(jchar)p1
                   withId:(id)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                  withInt:(jint)p1;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                  withInt:(jint)p1
                 withChar:(jchar)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                  withInt:(jint)p1
                  withInt:(jint)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                  withInt:(jint)p1
                 withLong:(jlong)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                  withInt:(jint)p1
                   withId:(id)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withLong:(jlong)p1;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withLong:(jlong)p1
                 withChar:(jchar)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withLong:(jlong)p1
                  withInt:(jint)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withLong:(jlong)p1
                 withLong:(jlong)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                 withLong:(jlong)p1
                   withId:(id)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
        withNSObjectArray:(IOSObjectArray *)errorMessageArgs;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                   withId:(id)p1;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                   withId:(id)p1
                 withChar:(jchar)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                   withId:(id)p1
                  withInt:(jint)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                   withId:(id)p1
                 withLong:(jlong)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                   withId:(id)p1
                   withId:(id)p2;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                   withId:(id)p1
                   withId:(id)p2
                   withId:(id)p3;

+ (void)verifyWithBoolean:(jboolean)expression
             withNSString:(NSString *)errorMessageTemplate
                   withId:(id)p1
                   withId:(id)p2
                   withId:(id)p3
                   withId:(id)p4;

+ (id)verifyNotNullWithId:(id)reference;

+ (id)verifyNotNullWithId:(id)reference
             withNSString:(NSString *)errorMessageTemplate
        withNSObjectArray:(IOSObjectArray *)errorMessageArgs;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonBaseVerify)

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_(jboolean expression);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withNSObjectArray_(jboolean expression, NSString *errorMessageTemplate, IOSObjectArray *errorMessageArgs);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withChar_(jboolean expression, NSString *errorMessageTemplate, jchar p1);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withInt_(jboolean expression, NSString *errorMessageTemplate, jint p1);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withLong_(jboolean expression, NSString *errorMessageTemplate, jlong p1);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withId_(jboolean expression, NSString *errorMessageTemplate, id p1);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withChar_withChar_(jboolean expression, NSString *errorMessageTemplate, jchar p1, jchar p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withInt_withChar_(jboolean expression, NSString *errorMessageTemplate, jint p1, jchar p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withLong_withChar_(jboolean expression, NSString *errorMessageTemplate, jlong p1, jchar p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withId_withChar_(jboolean expression, NSString *errorMessageTemplate, id p1, jchar p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withChar_withInt_(jboolean expression, NSString *errorMessageTemplate, jchar p1, jint p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withInt_withInt_(jboolean expression, NSString *errorMessageTemplate, jint p1, jint p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withLong_withInt_(jboolean expression, NSString *errorMessageTemplate, jlong p1, jint p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withId_withInt_(jboolean expression, NSString *errorMessageTemplate, id p1, jint p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withChar_withLong_(jboolean expression, NSString *errorMessageTemplate, jchar p1, jlong p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withInt_withLong_(jboolean expression, NSString *errorMessageTemplate, jint p1, jlong p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withLong_withLong_(jboolean expression, NSString *errorMessageTemplate, jlong p1, jlong p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withId_withLong_(jboolean expression, NSString *errorMessageTemplate, id p1, jlong p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withChar_withId_(jboolean expression, NSString *errorMessageTemplate, jchar p1, id p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withInt_withId_(jboolean expression, NSString *errorMessageTemplate, jint p1, id p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withLong_withId_(jboolean expression, NSString *errorMessageTemplate, jlong p1, id p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withId_withId_(jboolean expression, NSString *errorMessageTemplate, id p1, id p2);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withId_withId_withId_(jboolean expression, NSString *errorMessageTemplate, id p1, id p2, id p3);

FOUNDATION_EXPORT void ComGoogleCommonBaseVerify_verifyWithBoolean_withNSString_withId_withId_withId_withId_(jboolean expression, NSString *errorMessageTemplate, id p1, id p2, id p3, id p4);

FOUNDATION_EXPORT id ComGoogleCommonBaseVerify_verifyNotNullWithId_(id reference);

FOUNDATION_EXPORT id ComGoogleCommonBaseVerify_verifyNotNullWithId_withNSString_withNSObjectArray_(id reference, NSString *errorMessageTemplate, IOSObjectArray *errorMessageArgs);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonBaseVerify)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonBaseVerify")
