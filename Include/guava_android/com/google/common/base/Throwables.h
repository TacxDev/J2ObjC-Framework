//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/android/build_result/java/com/google/common/base/Throwables.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonBaseThrowables")
#ifdef RESTRICT_ComGoogleCommonBaseThrowables
#define INCLUDE_ALL_ComGoogleCommonBaseThrowables 0
#else
#define INCLUDE_ALL_ComGoogleCommonBaseThrowables 1
#endif
#undef RESTRICT_ComGoogleCommonBaseThrowables

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonBaseThrowables_) && (INCLUDE_ALL_ComGoogleCommonBaseThrowables || defined(INCLUDE_ComGoogleCommonBaseThrowables))
#define ComGoogleCommonBaseThrowables_

@class IOSClass;
@class JavaLangBoolean;
@class JavaLangRuntimeException;
@class JavaLangThrowable;
@protocol JavaUtilList;

@interface ComGoogleCommonBaseThrowables : NSObject

#pragma mark Public

+ (id<JavaUtilList>)getCausalChainWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (JavaLangThrowable *)getCauseAsWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                          withIOSClass:(IOSClass *)expectedCauseType;

+ (JavaLangThrowable *)getRootCauseWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (NSString *)getStackTraceAsStringWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (id<JavaUtilList>)lazyStackTraceWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (jboolean)lazyStackTraceIsLazy;

+ (JavaLangRuntimeException *)propagateWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (void)propagateIfInstanceOfWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                      withIOSClass:(IOSClass *)declaredType;

+ (void)propagateIfPossibleWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (void)propagateIfPossibleWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                    withIOSClass:(IOSClass *)declaredType;

+ (void)propagateIfPossibleWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                    withIOSClass:(IOSClass *)declaredType1
                                    withIOSClass:(IOSClass *)declaredType2;

+ (void)throwIfInstanceOfWithJavaLangThrowable:(JavaLangThrowable *)throwable
                                  withIOSClass:(IOSClass *)declaredType;

+ (void)throwIfUncheckedWithJavaLangThrowable:(JavaLangThrowable *)throwable;

@end

J2OBJC_STATIC_INIT(ComGoogleCommonBaseThrowables)

inline NSString *ComGoogleCommonBaseThrowables_get_SHARED_SECRETS_CLASSNAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComGoogleCommonBaseThrowables_SHARED_SECRETS_CLASSNAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleCommonBaseThrowables, SHARED_SECRETS_CLASSNAME, NSString *)

FOUNDATION_EXPORT void ComGoogleCommonBaseThrowables_throwIfInstanceOfWithJavaLangThrowable_withIOSClass_(JavaLangThrowable *throwable, IOSClass *declaredType);

FOUNDATION_EXPORT void ComGoogleCommonBaseThrowables_propagateIfInstanceOfWithJavaLangThrowable_withIOSClass_(JavaLangThrowable *throwable, IOSClass *declaredType);

FOUNDATION_EXPORT void ComGoogleCommonBaseThrowables_throwIfUncheckedWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT void ComGoogleCommonBaseThrowables_propagateIfPossibleWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT void ComGoogleCommonBaseThrowables_propagateIfPossibleWithJavaLangThrowable_withIOSClass_(JavaLangThrowable *throwable, IOSClass *declaredType);

FOUNDATION_EXPORT void ComGoogleCommonBaseThrowables_propagateIfPossibleWithJavaLangThrowable_withIOSClass_withIOSClass_(JavaLangThrowable *throwable, IOSClass *declaredType1, IOSClass *declaredType2);

FOUNDATION_EXPORT JavaLangRuntimeException *ComGoogleCommonBaseThrowables_propagateWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT JavaLangThrowable *ComGoogleCommonBaseThrowables_getRootCauseWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonBaseThrowables_getCausalChainWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT JavaLangThrowable *ComGoogleCommonBaseThrowables_getCauseAsWithJavaLangThrowable_withIOSClass_(JavaLangThrowable *throwable, IOSClass *expectedCauseType);

FOUNDATION_EXPORT NSString *ComGoogleCommonBaseThrowables_getStackTraceAsStringWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonBaseThrowables_lazyStackTraceWithJavaLangThrowable_(JavaLangThrowable *throwable);

FOUNDATION_EXPORT jboolean ComGoogleCommonBaseThrowables_lazyStackTraceIsLazy(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonBaseThrowables)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonBaseThrowables")
