//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nestseraualia/devel/j2objc-aleks/guava/android/build_result/java/com/google/common/collect/CompactHashing.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleCommonCollectCompactHashing")
#ifdef RESTRICT_ComGoogleCommonCollectCompactHashing
#define INCLUDE_ALL_ComGoogleCommonCollectCompactHashing 0
#else
#define INCLUDE_ALL_ComGoogleCommonCollectCompactHashing 1
#endif
#undef RESTRICT_ComGoogleCommonCollectCompactHashing

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleCommonCollectCompactHashing_) && (INCLUDE_ALL_ComGoogleCommonCollectCompactHashing || defined(INCLUDE_ComGoogleCommonCollectCompactHashing))
#define ComGoogleCommonCollectCompactHashing_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaLangByte;
@class JavaLangInteger;

@interface ComGoogleCommonCollectCompactHashing : NSObject

#pragma mark Package-Private

+ (id)createTableWithInt:(jint)buckets;

+ (jint)getHashPrefixWithInt:(jint)value
                     withInt:(jint)mask;

+ (jint)getNextWithInt:(jint)entry_
               withInt:(jint)mask;

+ (jint)maskCombineWithInt:(jint)prefix
                   withInt:(jint)suffix
                   withInt:(jint)mask;

+ (jint)newCapacityWithInt:(jint)mask OBJC_METHOD_FAMILY_NONE;

+ (jint)removeWithId:(id)key
              withId:(id)value
             withInt:(jint)mask
              withId:(id)table
        withIntArray:(IOSIntArray *)entries
   withNSObjectArray:(IOSObjectArray *)keys
   withNSObjectArray:(IOSObjectArray *)values;

+ (void)tableClearWithId:(id)table;

+ (jint)tableGetWithId:(id)table
               withInt:(jint)index;

+ (void)tableSetWithId:(id)table
               withInt:(jint)index
               withInt:(jint)entry_;

+ (jint)tableSizeWithInt:(jint)expectedSize;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleCommonCollectCompactHashing)

inline jbyte ComGoogleCommonCollectCompactHashing_get_UNSET(void);
#define ComGoogleCommonCollectCompactHashing_UNSET 0
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectCompactHashing, UNSET, jbyte)

inline jint ComGoogleCommonCollectCompactHashing_get_MODIFICATION_COUNT_INCREMENT(void);
#define ComGoogleCommonCollectCompactHashing_MODIFICATION_COUNT_INCREMENT 32
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectCompactHashing, MODIFICATION_COUNT_INCREMENT, jint)

inline jint ComGoogleCommonCollectCompactHashing_get_HASH_TABLE_BITS_MASK(void);
#define ComGoogleCommonCollectCompactHashing_HASH_TABLE_BITS_MASK 31
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectCompactHashing, HASH_TABLE_BITS_MASK, jint)

inline jint ComGoogleCommonCollectCompactHashing_get_MAX_SIZE(void);
#define ComGoogleCommonCollectCompactHashing_MAX_SIZE 1073741823
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectCompactHashing, MAX_SIZE, jint)

inline jint ComGoogleCommonCollectCompactHashing_get_DEFAULT_SIZE(void);
#define ComGoogleCommonCollectCompactHashing_DEFAULT_SIZE 3
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleCommonCollectCompactHashing, DEFAULT_SIZE, jint)

FOUNDATION_EXPORT jint ComGoogleCommonCollectCompactHashing_tableSizeWithInt_(jint expectedSize);

FOUNDATION_EXPORT id ComGoogleCommonCollectCompactHashing_createTableWithInt_(jint buckets);

FOUNDATION_EXPORT void ComGoogleCommonCollectCompactHashing_tableClearWithId_(id table);

FOUNDATION_EXPORT jint ComGoogleCommonCollectCompactHashing_tableGetWithId_withInt_(id table, jint index);

FOUNDATION_EXPORT void ComGoogleCommonCollectCompactHashing_tableSetWithId_withInt_withInt_(id table, jint index, jint entry_);

FOUNDATION_EXPORT jint ComGoogleCommonCollectCompactHashing_newCapacityWithInt_(jint mask);

FOUNDATION_EXPORT jint ComGoogleCommonCollectCompactHashing_getHashPrefixWithInt_withInt_(jint value, jint mask);

FOUNDATION_EXPORT jint ComGoogleCommonCollectCompactHashing_getNextWithInt_withInt_(jint entry_, jint mask);

FOUNDATION_EXPORT jint ComGoogleCommonCollectCompactHashing_maskCombineWithInt_withInt_withInt_(jint prefix, jint suffix, jint mask);

FOUNDATION_EXPORT jint ComGoogleCommonCollectCompactHashing_removeWithId_withId_withInt_withId_withIntArray_withNSObjectArray_withNSObjectArray_(id key, id value, jint mask, id table, IOSIntArray *entries, IOSObjectArray *keys, IOSObjectArray *values);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleCommonCollectCompactHashing)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleCommonCollectCompactHashing")
